// This is a part of the Vector Database Tracking Library.
// Copyright (C) by HAMILTON Bonaduz AG, CH-7402 Bonaduz.
// All rights reserved.
//
// Modification History
// 2006-05-11  bandenmatten : Initial file creation.
// 2006-10-18	ubernhard	 : Add several new definitions.

#ifndef __HSLVectorDbTrackingDefs_hs___
#define __HSLVectorDbTrackingDefs_hs___	1

// Definitions of the Vector Database Tracking Library.
// Re-initialized at runtime using type library.

namespace VectorDb_LabwareLevel
{
    variable Undefined(0);
    variable Deck(1);
    variable Template(2);
    variable Rack(4);
    variable Well(8);
	 variable TipRack(20);
    variable TipWell(24);
	 variable WashRack(36);
	 variable WashWell(40);
	 variable WasteRack(68);
	 variable WasteWell(72);
	 variable ConnectedContainerRack(132);
	 variable ConnectedContainerWell(136);
	 variable _AllRacks(244);
	 variable _AllWells(248);
	 variable _All(255);
}

namespace VectorDb_LabwareState
{
    variable NoError(0);
    variable Error(3);
    variable Warning(4);
    variable NotUsed(5);
}

namespace VectorDb_DateTimeFormat
{
    variable Unformatted(-1);	// Unformatted.
    variable GeneralDate(0);	// Display a date and/or time. If there is a date part, display it as a short date. If there is a time part, display it as a long time. If present, both parts are displayed.  
    variable LongDate(1);		// Display a date using the long date format specified in your computer's regional settings. 
    variable ShortDate(2);		// Display a date using the short date format specified in your computer's regional settings. 
    variable LongTime(3);		// Display a time using the time format specified in your computer's regional settings. 
    variable ShortTime(4);		// Display a time using the 24-hour format (hh:mm). 
}

namespace VectorDb_ActionState
{
    variable NoError(0);
    variable Fatal(1);
    variable Error(2);
    variable Warning(3);
}

namespace VectorDb_RunState
{
    variable Undefined(0);
    variable Running(1);
    variable Paused(2);
    variable Aborted(64);
    variable Finished(128);
    variable _Filter_Running(15);
    variable _Filter_Finished(240);
}

namespace VectorDb_ValueType
{
    variable String(10);
    variable Integer(20);
    variable Float(30);
}

namespace VectorDb_SequenceSortingCriteria
{
    variable None(0);
    variable XAscending_YAscending(1);
    variable XAscending_YDescending(2);
	 variable XDescending_YAscending(3);
	 variable XDescending_YDescending(4);
	 variable YAscending_XAscending(5);
	 variable YAscending_XDescending(6);
	 variable YDescending_XAscending(7);
	 variable YDescending_XDescending(8);
}

namespace VectorDb_BarcodeCheckResult
{
	variable OK(0);
	variable AlreadyUsedAsUnique(1);
	variable NotUnique(2);
}

#endif
// $$author=ubernhard$$valid=0$$time=2007-10-01 16:33$$checksum=898dfbb8$$length=088$$