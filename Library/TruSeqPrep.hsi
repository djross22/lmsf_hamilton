// {{{ 2 "IncludeGuard" "PragmaOnce"
#pragma once
// }} ""
#include "HslHamHeaterShakerLib.hsl"
#include "HSLStrLib.hsl"
#include "HSLSensorLib.hsl"
#include "HSLInhecoTEC\\HSLInhecoTECLib.hsl"
#include "HSLTipCountingLib.hsl"
#include "Illumina Prep Methods\\16S rRNA\\RemoveTextDelimitersFromAsciiTextFile.hsl"
#include "FileHandling_HSLFiLibEx\\HSLFilLibEx.hsl"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
#include "HSLMETEDLib.hs_"
#include "HSLMECCLib.hs_"
// }} ""
// {{{ 2 "LibraryNamespace" "Begin"
namespace TRUSEQPREP {
// }} ""
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{{ 2 "SubmethodForwardDeclaration" ""
function CheckCPACTemperature( variable var_CPACTemp, variable var_SimOn ) void ;
function CheckPlatesInStacks( device & ML_STAR, sequence & seq_Stack1, sequence & seq_Stack2, sequence & seq_Stack3, sequence & seq_Stack4, variable var_Stack1Expected, variable var_Stack2Expected, variable var_Stack3Expected, variable var_Stack4Expected, variable & var_Result, variable & msg_Result ) void ;
function GetHHSTemperature( variable var_HHS ) void ;
function InitCPAC( variable var_SimMode ) void ;
function InitHHSs( variable & var_HHSDeviceNo1, variable & var_HHSDeviceNo2, variable var_SimulationMode ) void ;
function InitLiquidWasteSensor(  ) void ;
function ReadSamplePlateFile( variable & var_SourceFile, variable & var_NumberOfSamples, variable & var_IndexesUsed, variable & arr_Index1SeqPositions[], variable & arr_Index2SeqPositions[], variable & arr_ALPseqPositions[] ) void ;
function ReadSampleSheet( variable & var_SourceFile, variable & var_NumberOfSamples, variable & var_IndexesUsed, variable & arr_Index1SeqPositions[], variable & arr_Index2SeqPositions[], variable & arr_ALPseqPositions[] ) void ;
private function ReportErrorTextCPAC( variable var_ErrorCPAC ) void ;
function SetCPACTemperature( variable var_CPACTemp, variable i_intDeviceID ) void ;
function SetHHSTemperature( variable var_HHS_ID, variable var_Temperature ) void ;
function Shake( variable var_HHS_ID, variable var_Speed, variable var_ShakingDuration ) void ;
function TerminateCPAC(  ) void ;
function TerminateHHSs(  ) void ;
function TipCounterRead( device & ML_STAR, sequence & seq_Tips50, sequence & seq_Tips300, sequence & seq_Tips1000, variable var_Tip50_required, variable var_Tip300_required ) void ;
function TipCounterWrite( device & ML_STAR, sequence & seq_Tips50, sequence & seq_Tips300 ) void ;
private function _VersionInfo(  ) void ;
// }} ""
function _InitLibrary() {
// {{ 2 "AutoInitBlock" ""
// }} ""
}
function _ExitLibrary() {
// {{ 2 "AutoExitBlock" ""
// }} ""
}
// {{{ 5 "_VersionInfo" "Begin"
private function _VersionInfo(  ) void {
// }} ""
// {{ 5 "_VersionInfo" "InitLocals"
// }} ""
// {{ 427 1 0 "86c5c43b_e77a_4d9a_b69726ecebebd281" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 428 1 0 "7a821b48_245a_4dba_b2a9d991cd2a0fae" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 429 1 0 "92431114_1bcf_4e26_96d2534042b6469a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 5 "_VersionInfo" "End"
}
// }} ""
// {{{ 5 "InitHHSs" "Begin"
function InitHHSs( variable & var_HHSDeviceNo1, variable & var_HHSDeviceNo2, variable var_SimulationMode ) void {
// }} ""
private variable ret_HHS1;
private variable ret_HHS2;
private variable ret_HHS3;
private variable ret_HHS;
private dialog dialogHandle88FF8D9F130A452f9A92B2DBAD37EDA8;
private variable ret_HHS4;
private variable ret_HHS5;
private dialog dialogHandle900F604997AB4d1d97491CBD8F96ED87;
private variable SN_HHS1;
private variable SN_HHS2;
private variable SN_HHS3;
private variable SN_HHS4;
private variable SN_HHS5;
// {{ 5 "InitHHSs" "InitLocals"
var_HHSDeviceNo1 = 0;
var_HHSDeviceNo2 = 0;
// }} ""
// {{ 134 1 0 "b78e1b81_ce11_4502_8da99154333c0115" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  InitHHSs <<<<<<<<<<"));
// }} ""
// {{{ 135 1 0 "c1556063_37c9_47cd_92d2f2423947cc92" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::SetSimulation(var_SimulationMode);
// }} ""
// {{ 136 1 0 "d7049ff5_be5c_410d_b85567a0526d7e5e" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
ret_HHS = 0;
// }} ""
// {{ 137 1 0 "c69fde6f_18e7_4009_8eda915cdfce567c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Establish communication with the HHSs *****"));
// }} ""
// {{ 138 1 0 "98d4d1f4_298e_4e9d_9937a3054830e6e6" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Init HHS1 *****"));
// }} ""
// {{{ 139 1 0 "edd275e1_aa22_4344_9ca476e712f89f24" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_HHS1 = HSLHamHeaterShaker::CreateUsbDevice(1, var_HHSDeviceNo1);
// }} ""
// {{ 140 1 0 "a0af5895_7cce_4340_a473a6f51fad16a5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Init HHS2 *****"));
// }} ""
// {{{ 141 1 0 "c058311c_7078_494e_822f657c3a292e32" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_HHS2 = HSLHamHeaterShaker::CreateUsbDevice(2, var_HHSDeviceNo2);
// }} ""
// {{ 142 1 0 "8a7b6b78_3215_4024_9d6f17346b809cbc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_HHS1 != 0)
{
// }} ""
Trace ("Error on HHS1:  ", ret_HHS1);
// {{ 144 1 0 "8a7b6b78_3215_4024_9d6f17346b809cbc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 145 1 0 "df129981_f8a9_410a_bac4b8062177ad1b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_HHS2 != 0)
{
// }} ""
Trace ("Error on HHS2:  ", ret_HHS2);
// {{ 147 1 0 "df129981_f8a9_410a_bac4b8062177ad1b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
ret_HHS = ret_HHS1 + ret_HHS2;
// {{ 149 1 0 "66e86d1e_8f18_40e8_b8ab42dd2927402a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_HHS > 0)
{
// }} ""
// {{ 150 1 0 "7e17cb96_919a_44d8_bb695cb3c52629c5" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n\nHHS Error codes:\n1 - Fatal Error\n2 - Node not Initialized\n3 - Device not connected\n4 - CAN error\n5 - EEProm error\n6 - Unknown command\n7 - Unknown parameter\n8 - Parameter out of range\n9 - Voltage error\n10 - Stop \n11 - Wrong address\n13 - Shaker init failed\n14 - Shaker not initialized\n15 - Shaker step loss\n17 - Plate lock init failure\n18 - Plate lock step loss\n26 - Unknown firmware error\n\n"));
// }} ""
// {{ 151 1 0 "caeb8db3_5881_44fc_850ecb1f79cdf361" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle88FF8D9F130A452f9A92B2DBAD37EDA8.SetOutput(Translate("There is a problem with one or more Hamilton Heater Shakers."), Translate("\n\nPlease check the following and then restart the method:"), Translate("\n\n     Verify HHS Controller Box is turned on."), Translate("\n     Verify the HHS USB cable is connected to the PC."));
dialogHandle88FF8D9F130A452f9A92B2DBAD37EDA8.ShowOutput(Translate("Problem with the HHS(s) - Method Will Abort"), hslOKOnly | hslError | hslDefButton1, hslInfinite);
// }} ""
// {{ 152 1 0 "c235f70f_c44c_4294_8da2e01102e5a62c" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 153 1 0 "66e86d1e_8f18_40e8_b8ab42dd2927402a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 154 1 0 "85cab167_2257_49e1_b2d4608a611ddd60" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Test plate locks *****"));
// }} ""
// {{ 155 1 0 "b4d13337_0272_477e_8be896c62d04f4d4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Test HHS1 plate locks *****"));
// }} ""
// {{{ 156 1 0 "a5367bd8_438d_4046_9e61110f75cffd53" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_HHS1 = HSLHamHeaterShaker::SetPlateLock(var_HHSDeviceNo1, 1);
// }} ""
// {{{ 157 1 0 "3b5b045f_eb6f_4bd8_a8188b5c8cbb18ad" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_HHS1 = HSLHamHeaterShaker::SetPlateLock(var_HHSDeviceNo1, 0);
// }} ""
// {{ 158 1 0 "b74bf659_8098_418b_bfaf1233c136d113" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Test HHS2 plate locks *****"));
// }} ""
// {{{ 159 1 0 "c6b2e194_e9a5_48ed_89b0102e4838a64e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_HHS2 = HSLHamHeaterShaker::SetPlateLock(var_HHSDeviceNo2, 1);
// }} ""
// {{{ 160 1 0 "f7d7589b_41c5_47e8_93728f15b614e89d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_HHS2 = HSLHamHeaterShaker::SetPlateLock(var_HHSDeviceNo2, 0);
// }} ""
// {{ 161 1 0 "0618cb58_ead6_4814_987daf6a9ac25776" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_HHS1 != 0)
{
// }} ""
Trace ("Error on HHS1:  ", ret_HHS1);
// {{ 163 1 0 "0618cb58_ead6_4814_987daf6a9ac25776" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 164 1 0 "3f96ae8b_adc1_436a_a1b96d085cb3869c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_HHS2 != 0)
{
// }} ""
Trace ("Error on HHS2:  ", ret_HHS2);
// {{ 166 1 0 "3f96ae8b_adc1_436a_a1b96d085cb3869c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
ret_HHS = ret_HHS1 + ret_HHS2;
// {{ 168 1 0 "75b10320_bcad_49bc_96c9e45bd79b5b9c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_HHS > 0)
{
// }} ""
// {{ 169 1 0 "dd7aedd8_12a6_483e_8d889a1333f1fd13" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("\n\nHHS Error codes:\n1 - Fatal Error\n2 - Node not Initialized\n3 - Device not connected\n4 - CAN error\n5 - EEProm error\n6 - Unknown command\n7 - Unknown parameter\n8 - Parameter out of range\n9 - Voltage error\n10 - Stop \n11 - Wrong address\n13 - Shaker init failed\n14 - Shaker not initialized\n15 - Shaker step loss\n17 - Plate lock init failure\n18 - Plate lock step loss\n26 - Unknown firmware error\n\n"));
// }} ""
// {{ 170 1 0 "618ed93e_c47f_4410_ba5b0342b9468f26" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle900F604997AB4d1d97491CBD8F96ED87.SetOutput(Translate("There is a problem with one or more Hamilton Heater Shakers."), Translate("\n\nPlease check the trace for more information.  Method will abort."));
dialogHandle900F604997AB4d1d97491CBD8F96ED87.ShowOutput(Translate("Problem with the HHS(s) - Method Will Abort"), hslOKOnly | hslError | hslDefButton1, hslInfinite);
// }} ""
// {{ 171 1 0 "14240afc_14d8_4b0c_b29e848e7a71cdd1" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 172 1 0 "75b10320_bcad_49bc_96c9e45bd79b5b9c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 173 1 0 "ab9aa5e1_03ad_479b_9a2e7c0cb11e21d4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Get the serial numbers of the HHSs *****"));
// }} ""
// {{{ 174 1 0 "9f3f7275_db93_4809_8841f9ad188e3313" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::GetSerialNumber(var_HHSDeviceNo1, SN_HHS1);
// }} ""
// {{{ 175 1 0 "27889b4c_5928_4aea_8ec9409f7c207523" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::GetSerialNumber(var_HHSDeviceNo2, SN_HHS2);
// }} ""
Trace ("Serial number, HHS1:  ", SN_HHS1);
Trace ("Serial number, HHS2:  ", SN_HHS2);
// {{ 177 1 0 "d052b02b_ee96_4a30_a23af9d0e158818d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  InitHHSs <<<<<<<<<<"));
// }} ""
// {{{ 5 "InitHHSs" "End"
}
// }} ""
// {{{ 5 "InitCPAC" "Begin"
function InitCPAC( variable var_SimMode ) void {
// }} ""
private variable ret_InitCPAC;
private variable ret_ErrorText;
private variable ret_Error;
private variable ret_MostRecentError;
private variable answer_CPACerror;
private variable ret_FWversion;
private dialog dialogHandle2C77609ECEEA40f483D73EB690EF4D67;
private dialog dialogHandleDD00102729F84e768DE436570819EFCC;
// {{ 5 "InitCPAC" "InitLocals"
// }} ""
// {{ 106 1 0 "508d6cdd_2f99_4c2e_85d479f028a12dc1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> InitCPAC:  Start Submethod <<<<<<<<<<"));
// }} ""
// {{{ 107 1 0 "c8cc34ca_037e_46f9_85cc5ffd5efc068d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::Initialize(0, var_SimMode, ret_InitCPAC);
// }} ""
// {{ 108 1 0 "045ca632_eb68_474f_9f5d62026c59e5e2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_SimMode == 0)
{
// }} ""
// {{ 109 1 0 "e767ea3d_e962_494d_a5bd1ec362a3373a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_InitCPAC != "000")
{
// }} ""
// {{{ 110 1 0 "1bbc40fc_1d5c_4a82_998eccf04c72933d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetLastError(ret_MostRecentError);
// }} ""
// {{ 111 1 0 "93b0ee12_adde_4518_997177bc99a7c67e" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleDD00102729F84e768DE436570819EFCC.SetOutput(Translate("There is an error with the CPAC Controller:\n\n     "), ret_MostRecentError, Translate("\n\nMake sure the unit is turned on and click OK to try again."));
dialogHandleDD00102729F84e768DE436570819EFCC.ShowOutput(Translate("Problem with the CPAC Controller"), hslOKOnly | hslExclamation | hslDefButton1, hslInfinite);
// }} ""
// {{{ 112 1 0 "35cd941a_3579_444e_9efc8efbebf610fa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::Initialize(0, 0, ret_InitCPAC);
// }} ""
// {{ 113 1 0 "d5af2840_d7dc_4d2a_a42bb2ab7ccc5811" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_InitCPAC != "000")
{
// }} ""
// {{{ 114 1 0 "b0e17a77_b348_4f61_8ccf342998bca508" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetDescriptionForErrorCode(ret_InitCPAC, ret_ErrorText);
// }} ""
// {{ 115 1 0 "e49c6624_4047_4fdd_b1033596dcf9a5a5" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle2C77609ECEEA40f483D73EB690EF4D67.SetOutput(Translate("There is still an error with the CPAC Controller:\n\n     "), ret_ErrorText, Translate("\n\nClick Abort to end the method, or Ignore to go the next process step without connecting.  (Retry does nothing.)"));
answer_CPACerror = dialogHandle2C77609ECEEA40f483D73EB690EF4D67.ShowOutput(Translate("Problem with the CPAC Controller"), hslAbortRetryIgnore | hslExclamation | hslDefButton1, hslInfinite);
// }} ""
// {{ 116 1 0 "197007af_e7d9_4004_a2ea146592aeca7c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACerror == 3)
{
// }} ""
// {{ 117 1 0 "3ebecf1c_af68_49fe_9a0833e9a89cc59b" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 118 1 0 "197007af_e7d9_4004_a2ea146592aeca7c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 119 1 0 "cfce947c_a30d_47b1_a4fdd9777a709a1b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACerror == 4)
{
// }} ""
// {{ 120 1 0 "e70dccf8_680a_4f98_ac7a059d88836778" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("************ WARNING! Method will continue with the CPAC not working correctly ************"));
// }} ""
// {{ 121 1 0 "cfce947c_a30d_47b1_a4fdd9777a709a1b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 122 1 0 "9481a357_4a03_489e_924a0be3d4ecdceb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACerror == 5)
{
// }} ""
// {{ 123 1 0 "5852c25f_20a9_4c20_b20e6e4535b4d3ea" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("************ WARNING! Method will continue with the CPAC not working correctly ************"));
// }} ""
// {{ 124 1 0 "9481a357_4a03_489e_924a0be3d4ecdceb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 125 1 0 "d5af2840_d7dc_4d2a_a42bb2ab7ccc5811" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 126 1 0 "e767ea3d_e962_494d_a5bd1ec362a3373a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 127 1 0 "f87ac9ab_69f4_4404_8c995e745ae87f5b" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::SetTraceLevel(1);
// }} ""
// {{{ 128 1 0 "c208223b_91f2_468e_ad136200efc6f3c7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetFirmwareVersion(0, 1, ret_FWversion, ret_Error);
// }} ""
Trace ("Firmware version for CPAC:  ", ret_FWversion);
// {{{ 130 1 0 "223b3ce9_47f5_41ea_a4a7124050b3a1ea" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
// {{ 131 1 0 "045ca632_eb68_474f_9f5d62026c59e5e2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 132 1 0 "a92f5953_1a0f_4e6b_ae26849c49948c35" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> InitCPAC:  Submethod Complete <<<<<<<<<<"));
// }} ""
// {{{ 5 "InitCPAC" "End"
}
// }} ""
// {{{ 5 "Shake" "Begin"
function Shake( variable var_HHS_ID, variable var_Speed, variable var_ShakingDuration ) void {
// }} ""
private variable ActualShakingDuration;
private timer Shaking;
private variable CheckForEarlyStop;
// {{ 5 "Shake" "InitLocals"
// }} ""
// {{ 355 1 0 "ba3e9780_78d6_406c_a885abaac6e4df4c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  Shake <<<<<<<<<<"));
// }} ""
Trace ("***** Now shaking on HHS", var_HHS_ID, " at ", var_Speed, "rpm for ", var_ShakingDuration, "seconds..."); 
// {{{ 357 1 0 "ad657822_32db_47a6_ab77e2168ea6bc6d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StartShaker(var_HHS_ID, var_Speed);
// }} ""
// {{ 358 1 0 "fb40e941_850d_49b4_8278fca4d508e52f" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == Shaking.SetTimer(var_ShakingDuration) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 359 1 0 "cd49f722_3997_4ffd_8fa6834eb20e352d" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
CheckForEarlyStop = Shaking.WaitTimer(hslTrue, hslTrue);
if (0 == CheckForEarlyStop)
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 360 1 0 "6c8531a5_95d2_42da_b438a7434dd9aa62" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (CheckForEarlyStop == 3)
{
// }} ""
// {{ 361 1 0 "104f09a4_44e5_4b01_a94de309d9db23fc" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** WARNING!  The shaking was stopped prematurely by the operator! *****"));
// }} ""
// {{ 362 1 0 "6c8531a5_95d2_42da_b438a7434dd9aa62" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 363 1 0 "4d211a32_47f1_43cd_980345aa4b1d3372" "{B31F3540-5D80-11d4-A5EB-0050DA737D89}"
ActualShakingDuration = Shaking.GetElapsedTime();
// }} ""
Trace ("***** Actual Shaking Duration (seconds):  ", ActualShakingDuration);
// {{{ 365 1 0 "5ef4ec80_4234_4b19_ad85375494c27c56" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopShaker(var_HHS_ID);
// }} ""
// {{ 366 1 0 "cdaee322_a646_4a82_971b59d3383e3f02" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  Shake <<<<<<<<<<"));
// }} ""
// {{{ 5 "Shake" "End"
}
// }} ""
// {{{ 5 "CheckPlatesInStacks" "Begin"
function CheckPlatesInStacks( device & ML_STAR, sequence & seq_Stack1, sequence & seq_Stack2, sequence & seq_Stack3, sequence & seq_Stack4, variable var_Stack1Expected, variable var_Stack2Expected, variable var_Stack3Expected, variable var_Stack4Expected, variable & var_Result, variable & msg_Result ) void {
// }} ""
private variable TopPlate_Stack3;
private variable TopPlate_Stack4;
private variable TopPlate_Stack1;
private variable TopPlate_Stack2;
private variable PlateNumber_TopStack1;
private variable PlateNumber_TopStack2;
private variable PlateNumber_TopStack3;
private variable PlateNumber_TopStack4;
private variable PlateNumber_TopStack4_int;
private variable PlateNumber_TopStack1_int;
private variable PlateNumber_TopStack2_int;
private variable PlateNumber_TopStack3_int;
// {{ 5 "CheckPlatesInStacks" "InitLocals"
var_Result = 0;
msg_Result = 0;
// }} ""
// {{ 32 1 0 "e7b01ab2_ce09_4654_97bea76666dbfaf4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> CheckPlatesInStacks:  Start Submethod <<<<<<<<<<"));
// }} ""
// {{ 33 1 0 "7d02d6c7_06c4_4800_ae29699912463b97" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = Translate("Results of Checking Plates in Stacks:\n");
// }} ""
// {{ 34 1 0 "804c94cd_3f93_4f57_a71f7d5596c952d0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_Result = 0;
// }} ""
// {{ 35 1 0 "05576555_208a_4eed_84550aef3a1ca473" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Stack1Expected > 0)
{
// }} ""
// {{ 36 1 0 "f899b336_0629_4f38_b28fce94f2b36443" "ML_STAR:{8E745E0A-158E-425e-BD3E-2F894E354A40}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._8E745E0A_158E_425e_BD3E_2F894E354A40("f899b336_0629_4f38_b28fce94f2b36443"); // GetFirstPlatePosition
	TopPlate_Stack1 = arrRetValues[3];
}
// }} ""
// {{{ 37 1 0 "0746bc4b_f96f_48a3_9abef0fe776ad9ee" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack1 = StrRight(TopPlate_Stack1, 1);
// }} ""
// {{{ 38 1 0 "7d1f509e_2e1c_4de5_bbdde7dba75aee12" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack1_int = StrIVal(PlateNumber_TopStack1);
// }} ""
// {{ 39 1 0 "5fdd6a5d_b8e0_4be3_b19edd2b2dd04095" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack1 == "")
{
// }} ""
// {{ 40 1 0 "e78487cd_e3c8_40ac_aae88801c753bdc4" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateNumber_TopStack1_int = 0;
// }} ""
// {{ 41 1 0 "5fdd6a5d_b8e0_4be3_b19edd2b2dd04095" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("The number of plates found in Stack 1:  ", PlateNumber_TopStack1_int);
Trace ("Expected number of plates for Stack 1:  ", var_Stack1Expected);
// {{ 43 1 0 "66a46f10_754f_4e65_8b4d4c9eb7112a6d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack1_int == var_Stack1Expected)
{
// }} ""
// {{ 44 1 0 "d84920d2_01ab_409b_9a60511f0550399b" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nThe correct number of plates are in Stack1.");
// }} ""
// {{ 45 1 0 "66a46f10_754f_4e65_8b4d4c9eb7112a6d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 46 1 0 "55c94527_72be_4df1_bffa6e4592bbcd4c" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nWARNING:  Wrong number of plates is in Stack1.  Expected:  ");
// }} ""
// {{{ 47 1 0 "259e1d66_8974_4159_bab95930a701a195" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
msg_Result = StrConcat2(msg_Result, var_Stack1Expected);
// }} ""
// {{ 48 1 0 "39952d94_96eb_4ef7_a104344cb0f980f7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_Result = 1;
// }} ""
// {{ 49 1 0 "66a46f10_754f_4e65_8b4d4c9eb7112a6d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 50 1 0 "05576555_208a_4eed_84550aef3a1ca473" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 51 1 0 "9b562494_bf8e_435f_86ddc7a11293a3da" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Stack2Expected > 0)
{
// }} ""
// {{ 52 1 0 "5a845acc_18d0_4cf0_a1d187bca43eab97" "ML_STAR:{8E745E0A-158E-425e-BD3E-2F894E354A40}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._8E745E0A_158E_425e_BD3E_2F894E354A40("5a845acc_18d0_4cf0_a1d187bca43eab97"); // GetFirstPlatePosition
	TopPlate_Stack2 = arrRetValues[3];
}
// }} ""
// {{{ 53 1 0 "4cf11861_337b_4bdf_83d2647f3ccb3883" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack2 = StrRight(TopPlate_Stack2, 1);
// }} ""
// {{{ 54 1 0 "9a1882ab_9efd_4a50_bd1a30514815a96c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack2_int = StrIVal(PlateNumber_TopStack2);
// }} ""
Trace ("The number of plates found in Stack 2:  ", PlateNumber_TopStack2_int);
Trace ("Expected number of plates for Stack 2:  ", var_Stack2Expected);
// {{ 56 1 0 "61464374_6ca4_44cb_8c219782539a1a2b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack2 == "")
{
// }} ""
// {{ 57 1 0 "9bb7b330_4cef_489d_8f7d01f5e76cf608" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateNumber_TopStack2_int = 0;
// }} ""
// {{ 58 1 0 "61464374_6ca4_44cb_8c219782539a1a2b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 59 1 0 "26f59dbe_966b_4282_b26ac0721be7510d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack2_int == var_Stack2Expected)
{
// }} ""
// {{ 60 1 0 "9f630f1e_003a_4176_ab6aae33b94827db" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nThe correct number of plates are in Stack2.");
// }} ""
// {{ 61 1 0 "26f59dbe_966b_4282_b26ac0721be7510d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 62 1 0 "ce674cfd_dc48_43cd_8fc3c9ab091e092a" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nWARNING:  Wrong number of plates is in Stack2.  Expected:  ");
// }} ""
// {{{ 63 1 0 "d8442d47_032b_4f1d_a2a37524cc7ee57c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
msg_Result = StrConcat2(msg_Result, var_Stack2Expected);
// }} ""
// {{ 64 1 0 "82f5d7c4_7547_414a_bcc6e46d0182ad6f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_Result = 1;
// }} ""
// {{ 65 1 0 "26f59dbe_966b_4282_b26ac0721be7510d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 66 1 0 "9b562494_bf8e_435f_86ddc7a11293a3da" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 67 1 0 "752eeaae_b505_43c6_aba2dc51c5d40f9f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Stack3Expected > 0)
{
// }} ""
// {{ 68 1 0 "d59e3c7d_5946_4c26_8c45f80c1a0c584f" "ML_STAR:{8E745E0A-158E-425e-BD3E-2F894E354A40}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._8E745E0A_158E_425e_BD3E_2F894E354A40("d59e3c7d_5946_4c26_8c45f80c1a0c584f"); // GetFirstPlatePosition
	TopPlate_Stack3 = arrRetValues[3];
}
// }} ""
// {{{ 69 1 0 "fa5d4cd7_0599_47c0_aa20eaea95be3214" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack3 = StrRight(TopPlate_Stack3, 1);
// }} ""
// {{{ 70 1 0 "c197e4bc_abca_43b5_bda33fe9a2cc9ab6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack3_int = StrIVal(PlateNumber_TopStack3);
// }} ""
// {{ 71 1 0 "2866a856_551e_4340_890b1714336d7b05" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack3 == "")
{
// }} ""
// {{ 72 1 0 "4253f3a7_d4ca_4692_987827ed3d9526dd" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateNumber_TopStack3_int = 0;
// }} ""
// {{ 73 1 0 "2866a856_551e_4340_890b1714336d7b05" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("The number of plates found in Stack 3:  ", PlateNumber_TopStack3_int);
Trace ("Expected number of plates for Stack 3:  ", var_Stack3Expected);
// {{ 75 1 0 "3009de77_a9ee_48e8_bbbcbb65aa337e84" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack3_int == var_Stack3Expected)
{
// }} ""
// {{ 76 1 0 "0de1fc4c_71a9_4ee2_b3341938534ed398" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nThe correct number of plates are in Stack3.");
// }} ""
// {{ 77 1 0 "3009de77_a9ee_48e8_bbbcbb65aa337e84" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 78 1 0 "e200e2d3_b1df_4c70_ac3e1722d8403a5e" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nWARNING:  Wrong number of plates is in Stack3.  Expected:  ");
// }} ""
// {{{ 79 1 0 "a5d5eb2f_0ffe_4da8_870ae7adb2cb5c62" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
msg_Result = StrConcat2(msg_Result, var_Stack3Expected);
// }} ""
// {{ 80 1 0 "f00c5f41_9214_4c96_9bca4b3fb62be158" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_Result = 1;
// }} ""
// {{ 81 1 0 "3009de77_a9ee_48e8_bbbcbb65aa337e84" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 82 1 0 "752eeaae_b505_43c6_aba2dc51c5d40f9f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 83 1 0 "a57a24bf_a3b5_4327_932174c0a6cd575f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Stack4Expected > 0)
{
// }} ""
// {{ 84 1 0 "53306cf9_4048_4c27_acc09db8dbfb7886" "ML_STAR:{8E745E0A-158E-425e-BD3E-2F894E354A40}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._8E745E0A_158E_425e_BD3E_2F894E354A40("53306cf9_4048_4c27_acc09db8dbfb7886"); // GetFirstPlatePosition
	TopPlate_Stack4 = arrRetValues[3];
}
// }} ""
// {{{ 85 1 0 "e5c1454b_1392_4f00_bf274ea2d2a48255" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack4 = StrRight(TopPlate_Stack4, 1);
// }} ""
// {{{ 86 1 0 "89d1c757_8644_4331_abeea9256fee3d5d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
PlateNumber_TopStack4_int = StrIVal(PlateNumber_TopStack4);
// }} ""
Trace ("The number of plates found in Stack 4:  ", PlateNumber_TopStack4_int);
Trace ("Expected number of plates for Stack 4:  ", var_Stack4Expected);
// {{ 88 1 0 "a01d60e9_7854_46c9_904f5f24d8a7ce0b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack4 == "")
{
// }} ""
// {{ 89 1 0 "785260cb_5ca3_4e28_acbad60bf0d751df" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
PlateNumber_TopStack4_int = 0;
// }} ""
// {{ 90 1 0 "a01d60e9_7854_46c9_904f5f24d8a7ce0b" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 91 1 0 "494b63f6_f4f0_468e_ae2ddc0b634e6233" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (PlateNumber_TopStack4_int == var_Stack4Expected)
{
// }} ""
// {{ 92 1 0 "59546158_1d46_42d2_aa86c5c1637595df" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nThe correct number of plates are in Stack4.");
// }} ""
// {{ 93 1 0 "494b63f6_f4f0_468e_ae2ddc0b634e6233" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 94 1 0 "5a1060dd_cd81_416b_b571d0b37ad5f2a2" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
msg_Result = msg_Result + Translate("\nWARNING:  Wrong number of plates is in Stack4.  Expected:  ");
// }} ""
// {{{ 95 1 0 "9a0ce52e_4322_4dc5_941ead03780a3381" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
msg_Result = StrConcat2(msg_Result, var_Stack4Expected);
// }} ""
// {{ 96 1 0 "a68b93c9_17c9_40d4_ac687955a82cc65d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_Result = 1;
// }} ""
// {{ 97 1 0 "494b63f6_f4f0_468e_ae2ddc0b634e6233" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 98 1 0 "a57a24bf_a3b5_4327_932174c0a6cd575f" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 99 1 0 "0ce017cf_7a79_400d_a657210bfe5f2b24" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> CheckPlatesInStacks:  Submethod Complete <<<<<<<<<<"));
// }} ""
// {{{ 5 "CheckPlatesInStacks" "End"
}
// }} ""
// {{{ 5 "SetHHSTemperature" "Begin"
function SetHHSTemperature( variable var_HHS_ID, variable var_Temperature ) void {
// }} ""
// {{ 5 "SetHHSTemperature" "InitLocals"
// }} ""
// {{ 345 1 0 "15ea68b9_f7bd_46da_917e4bff2c8d8ac7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  SetHHSTemperature <<<<<<<<<<"));
// }} ""
// {{{ 346 1 0 "401acdf5_22d8_4f2f_9ee6032062898154" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopTempCtrl(var_HHS_ID);
// }} ""
// {{ 347 1 0 "b7c6698e_8c0e_48e4_ad3f79244bdbe0dc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Temperature != 0)
{
// }} ""
Trace ("***** HHS number ", var_HHS_ID, " is being set to ", var_Temperature, "C");
// {{{ 349 1 0 "3446eae3_7aed_40d9_a653af2f21dec56e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StartTempCtrl(var_HHS_ID, var_Temperature, 0);
// }} ""
// {{ 350 1 0 "b7c6698e_8c0e_48e4_ad3f79244bdbe0dc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
Trace ("***** HHS number ", var_HHS_ID, " is not being controlled, as it is desired to be at room temperature.");
// {{ 352 1 0 "b7c6698e_8c0e_48e4_ad3f79244bdbe0dc" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 353 1 0 "878d29d9_1df3_4a6a_92822dd8d6a3b446" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  SetHHSTemperature <<<<<<<<<<"));
// }} ""
// {{{ 5 "SetHHSTemperature" "End"
}
// }} ""
// {{{ 5 "TerminateHHSs" "Begin"
function TerminateHHSs(  ) void {
// }} ""
// {{ 5 "TerminateHHSs" "InitLocals"
// }} ""
// {{ 374 1 0 "8bbf61fe_6d08_4670_8c1372a302068808" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod: TerminateHHSs <<<<<<<<<<"));
// }} ""
// {{{ 375 1 0 "03ad23fa_d494_4a6c_abd9ad587b28ac80" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::StopAllShaker();
// }} ""
// {{{ 376 1 0 "80777ff4_7709_4e07_b1b2ef71945bcc25" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::Terminate();
// }} ""
// {{ 377 1 0 "961bb4c7_5de8_42af_a8fbfb8fd761b046" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: TerminateHHSs <<<<<<<<<<"));
// }} ""
// {{{ 5 "TerminateHHSs" "End"
}
// }} ""
// {{{ 5 "SetCPACTemperature" "Begin"
function SetCPACTemperature( variable var_CPACTemp, variable i_intDeviceID ) void {
// }} ""
private variable ret_Error;
private variable ret_ActualTemp;
private variable var_CPACTempTenths;
// {{ 5 "SetCPACTemperature" "InitLocals"
// }} ""
// {{ 333 1 0 "05577a8f_2fb4_439e_a63a0a4130d3d60a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  SetCPACTemperature <<<<<<<<<<"));
// }} ""
// {{{ 334 1 0 "c9b67a9d_46ba_4dcd_8532822dfed970a6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, i_intDeviceID, 1, ret_ActualTemp, ret_Error);
// }} ""
Trace ("Current CPAC Temperature (in tenths of degrees):  ", ret_ActualTemp);
// {{{ 336 1 0 "cfca23a4_24da_47a0_b7b054f20b5f57df" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
// {{ 337 1 0 "62bdab2f_ae1c_4ae5_9b0f720d22df64a8" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
var_CPACTempTenths = var_CPACTemp * 10;
// }} ""
// {{{ 338 1 0 "9242b344_5a35_4f0b_b1f6eef6c2cd2d6c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::SetTargetTemperature(0, i_intDeviceID, var_CPACTempTenths, ret_Error);
// }} ""
// {{{ 339 1 0 "319d80d8_24c3_468c_a35e9bc9a818c6e5" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
Trace ("CPAC Temperature set to:  ", var_CPACTemp);
// {{{ 341 1 0 "1c869f21_ec78_4971_829ecb6ae9811ce4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::StartTemperatureControl(0, i_intDeviceID, ret_Error);
// }} ""
// {{{ 342 1 0 "a36c6317_a8c5_4df2_92035fa5ea9d3296" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
// {{ 343 1 0 "422a3c3c_db5e_4c5b_bd06eb3e683b20d8" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  SetCPACTemperature <<<<<<<<<<"));
// }} ""
// {{{ 5 "SetCPACTemperature" "End"
}
// }} ""
// {{{ 5 "TerminateCPAC" "Begin"
function TerminateCPAC(  ) void {
// }} ""
private variable ret_Error;
// {{ 5 "TerminateCPAC" "InitLocals"
// }} ""
// {{ 368 1 0 "76b03d1d_7242_433d_a6a60c052e5f483a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod: TerminateCPAC <<<<<<<<<<"));
// }} ""
// {{{ 369 1 0 "a6eb4a8a_fe89_4e3a_b1a623853f610c70" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::StopTemperatureControl(0, 1, ret_Error);
// }} ""
// {{{ 370 1 0 "a4c62a8d_aa0d_4467_b35a277041c905ff" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
// {{{ 371 1 0 "88dfa631_e805_45d7_817c7c06b81f87de" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::Terminate();
// }} ""
// {{ 372 1 0 "4f2eaf6b_45e2_4576_a610a8d1b7b2033e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete: TerminateCPAC <<<<<<<<<<"));
// }} ""
// {{{ 5 "TerminateCPAC" "End"
}
// }} ""
// {{{ 5 "InitLiquidWasteSensor" "Begin"
function InitLiquidWasteSensor(  ) void {
// }} ""
private dialog dialogHandle1;
private variable ret_SensorStatus;
// {{ 5 "InitLiquidWasteSensor" "InitLocals"
// }} ""
// {{ 179 1 0 "e86d10c1_3ed3_4dd8_9eab36af2079b2d9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  InitLiquidWasteSensor <<<<<<<<<<"));
// }} ""
// {{{ 180 1 0 "87b92409_54c5_4253_a7bbd5cd70491c73" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
SensorLib::Initialize(1);
// }} ""
// {{{ 181 1 0 "3967d004_3103_4a21_b5ae3d09d618ad04" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_SensorStatus = SensorLib::CheckLiquid();
// }} ""
// {{ 182 1 0 "65df424e_5f83_4b8d_9b32ca9ee428cffd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (ret_SensorStatus == 0)
{
// }} ""
// {{ 183 1 0 "33246982_905c_42a0_aa3a08da87144b02" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle1.SetOutput(Translate("Check the level in the liquid waste carboy, and empty if full."));
dialogHandle1.ShowOutput(Translate("Liquid Waste Full"), hslOKOnly | hslQuestion | hslDefButton1, hslInfinite);
// }} ""
// {{ 184 1 0 "65df424e_5f83_4b8d_9b32ca9ee428cffd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 185 1 0 "87d281c5_47f8_4ab7_966a6470af9afdc4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  InitLiquidWasteSensor <<<<<<<<<<"));
// }} ""
// {{{ 5 "InitLiquidWasteSensor" "End"
}
// }} ""
// {{{ 5 "ReportErrorTextCPAC" "Begin"
private function ReportErrorTextCPAC( variable var_ErrorCPAC ) void {
// }} ""
private variable ret_ErrorText;
// {{ 5 "ReportErrorTextCPAC" "InitLocals"
// }} ""
// {{ 326 1 0 "58aaef38_167c_4d66_8e70961d792143eb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_ErrorCPAC != "TEC_0")
{
// }} ""
// {{ 327 1 0 "bc09bb5a_78fd_4e02_9ff4c1dd554ae573" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_ErrorCPAC != "000")
{
// }} ""
// {{{ 328 1 0 "8ef5c63d_3062_4142_82657a9f45c1abca" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetDescriptionForErrorCode(var_ErrorCPAC, ret_ErrorText);
// }} ""
Trace ("CPAC ERROR CODE:  ", var_ErrorCPAC);
Trace ("CPAC ERROR MESSSAGE:  ", ret_ErrorText);
// {{ 330 1 0 "bc09bb5a_78fd_4e02_9ff4c1dd554ae573" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 331 1 0 "58aaef38_167c_4d66_8e70961d792143eb" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 5 "ReportErrorTextCPAC" "End"
}
// }} ""
// {{{ 5 "CheckCPACTemperature" "Begin"
function CheckCPACTemperature( variable var_CPACTemp, variable var_SimOn ) void {
// }} ""
private variable ret_Error;
private variable ret_ActualTemp;
private variable ret_ActualTemp_integer;
private variable ret_ActualTemp_float;
private variable loopCounter1;
private variable answer_CPACcheck;
private timer timer1;
private dialog dialogHandleA38B2AB63DFF4ec8A39632BD81E15B92;
// {{ 5 "CheckCPACTemperature" "InitLocals"
// }} ""
// {{ 1 1 0 "d1fe7660_e23b_41f8_b6543af0e8a4bef9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  CheckCPACTemperature <<<<<<<<<<"));
// }} ""
// {{{ 2 1 0 "8b2fd157_8ead_4a93_bac2d014abcc638d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, 1, 1, ret_ActualTemp, ret_Error);
// }} ""
// {{{ 3 1 0 "e5df587f_f227_4f36_ab178ec500a56771" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
// {{ 4 1 0 "5c244962_5290_4263_92428137ecd02700" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_SimOn == 0)
{
// }} ""
// {{ 5 1 0 "b38b0818_f3cc_48e1_821b5073bf39bd07" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 6 1 0 "ab46ca55_a9dd_415d_b5937d55d242a0b5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_ActualTemp_integer = StrIVal(ret_ActualTemp);
// }} ""
// {{ 7 1 0 "7ddb78ac_b9f9_4eca_ae66aa9a041a71b5" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
ret_ActualTemp_float = ret_ActualTemp_integer / (10 * 1.0);
// }} ""
Trace ("Expected max CPAC temperature:  ", var_CPACTemp);
Trace ("Current CPAC temperature:  ", ret_ActualTemp_float);
// {{ 9 1 0 "ed39f030_38dd_4ba1_908281b3e4a7a27a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (ret_ActualTemp_float > var_CPACTemp)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 10 1 0 "f85b8547_e755_49d7_8c21c5dc680961c8" "{B31F353E-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer1.SetTimer(10) )
{
    MECC::RaiseRuntimeErrorEx(-1355939584, MECC::IDS::stepNameTimerStart, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 11 1 0 "326dbcca_a047_4450_801a8e974a557fe1" "{B31F353F-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == timer1.WaitTimer(hslFalse, hslFalse) )
{
    MECC::RaiseRuntimeErrorEx(-1339162368, MECC::IDS::stepNameTimerWait, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 12 1 0 "a113f986_0cd2_4be8_a6223d3bcf97e900" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLInhecoTECLib::GetActualDeviceTemperature(0, 1, 1, ret_ActualTemp, ret_Error);
// }} ""
// {{{ 13 1 0 "9b7a993e_47be_421c_94e6b47df3009419" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ReportErrorTextCPAC(ret_Error);
// }} ""
// {{{ 14 1 0 "d6d4b9de_1898_4b49_8b1515fe1ddb8291" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
ret_ActualTemp_integer = StrIVal(ret_ActualTemp);
// }} ""
// {{ 15 1 0 "89d6ad46_6b5c_4108_a8442be9cf563462" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
ret_ActualTemp_float = ret_ActualTemp_integer / (10 * 1.0);
// }} ""
Trace ("Current CPAC temperature:  ", ret_ActualTemp_float);
// {{ 17 1 0 "a84d7f4c_f82e_47ee_9b6513b26819e8a7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (loopCounter1 > 60)
{
// }} ""
// {{ 18 1 0 "db7468d8_d5be_44b5_bb075474f44ea37b" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleA38B2AB63DFF4ec8A39632BD81E15B92.SetOutput(Translate("It is taking a long time for the CPAC to reach temperature.  \n\nClick Abort to end the method, Retry to keep trying to get to temperature, or Ignore to go the next process step."));
answer_CPACcheck = dialogHandleA38B2AB63DFF4ec8A39632BD81E15B92.ShowOutput("", hslAbortRetryIgnore | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 19 1 0 "a84d7f4c_f82e_47ee_9b6513b26819e8a7" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 20 1 0 "d63cd4e4_7d03_4899_bfdf5f65d43326b5" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACcheck == 3)
{
// }} ""
// {{ 21 1 0 "beabe9cc_6565_4a60_b937257782a2e6f7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 22 1 0 "a86f490b_113b_4d77_8d463052d44a2f6d" "{930D6C31-8EFB-11d4-A3BA-002035848439}"
abort;
// }} ""
// {{ 23 1 0 "d63cd4e4_7d03_4899_bfdf5f65d43326b5" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 24 1 0 "5a4d9fd3_2fd4_48dc_83cb256b440da434" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (answer_CPACcheck == 5)
{
// }} ""
// {{ 25 1 0 "5fcbe31e_dcaf_464a_a7c1b3bc6a1fb056" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 26 1 0 "2171debf_dedb_4c3a_9a8500884ce3bf4d" "{B31F3533-5D80-11d4-A5EB-0050DA737D89}"
break;
// }} ""
// {{ 27 1 0 "5a4d9fd3_2fd4_48dc_83cb256b440da434" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 28 1 0 "ed39f030_38dd_4ba1_908281b3e4a7a27a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 29 1 0 "5c244962_5290_4263_92428137ecd02700" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 30 1 0 "708da838_1517_42fd_9d3482d37dccae8a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  CheckCPACTemperature <<<<<<<<<<"));
// }} ""
// {{{ 5 "CheckCPACTemperature" "End"
}
// }} ""
// {{{ 5 "TipCounterRead" "Begin"
function TipCounterRead( device & ML_STAR, sequence & seq_Tips50, sequence & seq_Tips300, sequence & seq_Tips1000, variable var_Tip50_required, variable var_Tip300_required ) void {
// }} ""
private variable Quantity_1000;
private variable CurrentPosition_300;
private variable Quantity_50;
private variable CurrentPosition_50;
private variable InsuffientTips;
private variable Text_Insufficient50s;
private variable Quantity_300;
private variable EndPosition_300;
private variable CurrentPosition_1000;
private variable Text_Insufficient1000s;
private variable Text_Insufficient300s;
private variable EndPosition_1000;
private variable EndPosition_50;
private dialog dialogHandleDBE2DA3DCAE742d88468591DE3A7ACD6;
// {{ 5 "TipCounterRead" "InitLocals"
// }} ""
// {{ 379 1 0 "dc430b6f_7781_440c_a24f08dc315d4547" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  TipCounterRead<<<<<<<<<<"));
// }} ""
// {{{ 380 1 0 "7b26a702_0c5b_4efa_b9f41b12c4303ffe" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TipCount::Edit2(seq_Tips50, Translate("TruSeq_50F_Counter"), ML_STAR, 999);
// }} ""
// {{{ 381 1 0 "b51766e7_9871_4a8c_a0029bf278e956c6" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TipCount::Edit2(seq_Tips300, Translate("TruSeq_SVF_Counter"), ML_STAR, 999);
// }} ""
// {{ 382 1 0 "9f4b7757_e8fd_4fb5_a9cc65f466fcbeab" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Text_Insufficient50s = Translate("");
// }} ""
// {{ 383 1 0 "c58bbec7_c407_40a5_a89c1d485b1db666" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Text_Insufficient300s = Translate("");
// }} ""
// {{ 384 1 0 "92c0c668_b096_4aa2_a2fdae23f24a0939" "{B31F353B-5D80-11d4-A5EB-0050DA737D89}"
CurrentPosition_50 = seq_Tips50.GetCurrentPosition();
// }} ""
// {{ 385 1 0 "0d297334_a05e_4d29_ac012b14c79abd0e" "{B31F353D-5D80-11d4-A5EB-0050DA737D89}"
EndPosition_50 = seq_Tips50.GetCount();
// }} ""
// {{ 386 1 0 "1775f13e_ba09_4dd8_aa3ea454c5ccfa9a" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
Quantity_50 = EndPosition_50 - CurrentPosition_50;
// }} ""
// {{ 387 1 0 "896909a6_ab71_4711_9fc258e9b01d143d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Quantity_50 < var_Tip50_required)
{
// }} ""
// {{ 388 1 0 "3c2b8b7c_7885_4cd1_82d05c0461f298db" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
InsuffientTips = 1;
// }} ""
// {{ 389 1 0 "feb8ff8d_02e3_4561_a29f8462fde3cf16" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Tip50_required > 960)
{
// }} ""
// {{ 390 1 0 "83d0b88e_7f53_4438_98734ab7d724dcab" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Text_Insufficient50s = Translate("\nPlease load two full carriers of 50ul tips.  You will need to come back later to replenish.");
// }} ""
// {{ 391 1 0 "feb8ff8d_02e3_4561_a29f8462fde3cf16" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 392 1 0 "34a29a0d_8218_4724_84915f2d56ad8d95" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Text_Insufficient50s = Translate("\nPlease load more 50ul tips.  You will need at least this many:  ");
// }} ""
// {{{ 393 1 0 "43458656_30c7_4827_b9984aa496949242" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Text_Insufficient50s = StrConcat2(Text_Insufficient50s, var_Tip50_required);
// }} ""
// {{ 394 1 0 "feb8ff8d_02e3_4561_a29f8462fde3cf16" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 395 1 0 "896909a6_ab71_4711_9fc258e9b01d143d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 396 1 0 "696b4f20_41b9_495e_b6b2180e65cdd4de" "{B31F353B-5D80-11d4-A5EB-0050DA737D89}"
CurrentPosition_300 = seq_Tips300.GetCurrentPosition();
// }} ""
// {{ 397 1 0 "e1a6c602_b843_4790_8fefcd41f40c47d9" "{B31F353D-5D80-11d4-A5EB-0050DA737D89}"
EndPosition_300 = seq_Tips300.GetCount();
// }} ""
// {{ 398 1 0 "d39a1aa2_2fdb_465d_acb06a9901696fec" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
Quantity_300 = EndPosition_300 - CurrentPosition_300;
// }} ""
// {{ 399 1 0 "bcb4a666_87a0_474a_8134942cd23ce773" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Quantity_300 < var_Tip300_required)
{
// }} ""
// {{ 400 1 0 "21be2185_5e83_4ca8_b1bb55c6ee69b9a2" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
InsuffientTips = 1;
// }} ""
// {{ 401 1 0 "9f83543a_8e1a_4584_b04f6ac84c167667" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_Tip300_required > 960)
{
// }} ""
// {{ 402 1 0 "e8ace962_3eb9_482f_a4db1e59ec2aea4d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Text_Insufficient300s = Translate("\nPlease load two full carriers of 300ul tips.  You will need to come back later to replenish.");
// }} ""
// {{ 403 1 0 "9f83543a_8e1a_4584_b04f6ac84c167667" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 404 1 0 "486cb838_7fd8_4479_84e3d82ad3de0da7" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Text_Insufficient300s = Translate("\nPlease load more 300ul tips.  You will need at least this many:  ");
// }} ""
// {{{ 405 1 0 "f2a65348_7ca6_429e_a29fe505517c1554" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Text_Insufficient300s = StrConcat2(Text_Insufficient300s, var_Tip300_required);
// }} ""
// {{ 406 1 0 "9f83543a_8e1a_4584_b04f6ac84c167667" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 407 1 0 "bcb4a666_87a0_474a_8134942cd23ce773" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 408 1 0 "d6aff56f_3ac9_4cf1_bb33fe932e215c95" "{B31F353B-5D80-11d4-A5EB-0050DA737D89}"
CurrentPosition_1000 = seq_Tips1000.GetCurrentPosition();
// }} ""
// {{ 409 1 0 "1a817fb2_ecaa_445a_81a9144f75f8fb18" "{B31F353D-5D80-11d4-A5EB-0050DA737D89}"
EndPosition_1000 = seq_Tips1000.GetCount();
// }} ""
// {{ 410 1 0 "8d946deb_75ac_4a45_97d06a4d51c99a5a" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
Quantity_1000 = EndPosition_1000 - CurrentPosition_1000;
// }} ""
// {{ 411 1 0 "6256e116_2560_4dc0_b18de4df888d9145" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (InsuffientTips == 1)
{
// }} ""
// {{ 412 1 0 "85a10114_cb9c_4e35_aaa9738861020019" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleDBE2DA3DCAE742d88468591DE3A7ACD6.SetOutput(Translate("There are not enough tips to complete this run:  \n"), Text_Insufficient50s, Text_Insufficient300s, Text_Insufficient1000s, Translate("\n\nIf carriers are not full, please fill the carriers with more tips."));
dialogHandleDBE2DA3DCAE742d88468591DE3A7ACD6.ShowOutput(Translate("Insufficient Number of Tips"), hslOKOnly | hslExclamation | hslDefButton1, hslInfinite);
// }} ""
// {{ 413 1 0 "a40d04b4_54b2_4174_8acfbbd75af7ffe6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Quantity_50 < 959)
{
// }} ""
// {{{ 414 1 0 "bd4a67ee_259b_49f3_b720d119b5c437ab" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TipCount::Edit2(seq_Tips50, Translate("TruSeq_50F_Counter"), ML_STAR, 999);
// }} ""
// {{ 415 1 0 "a40d04b4_54b2_4174_8acfbbd75af7ffe6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 416 1 0 "a1239349_af43_433a_91bc1a35b933259c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Quantity_300 < 959)
{
// }} ""
// {{{ 417 1 0 "bf9e4df3_d58d_4007_adcfd4db152a8437" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TipCount::Edit2(seq_Tips300, Translate("TruSeq_SVF_Counter"), ML_STAR, 999);
// }} ""
// {{ 418 1 0 "a1239349_af43_433a_91bc1a35b933259c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 419 1 0 "6256e116_2560_4dc0_b18de4df888d9145" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 420 1 0 "778d6d58_9d33_49a5_b2b720786dd59e27" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  TipCounterRead <<<<<<<<<<"));
// }} ""
// {{{ 5 "TipCounterRead" "End"
}
// }} ""
// {{{ 5 "TipCounterWrite" "Begin"
function TipCounterWrite( device & ML_STAR, sequence & seq_Tips50, sequence & seq_Tips300 ) void {
// }} ""
// {{ 5 "TipCounterWrite" "InitLocals"
// }} ""
// {{ 422 1 0 "24388481_d984_4cba_a1993574938cc337" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  TipCounterWrite<<<<<<<<<<"));
// }} ""
// {{{ 423 1 0 "b240d189_900f_4ca8_af50409857b4e4e7" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TipCount::Write2(seq_Tips50, Translate("TruSeq_50F_Counter"), ML_STAR);
// }} ""
// {{{ 424 1 0 "178af609_998d_4a70_9e0c667c30a6caa4" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TipCount::Write2(seq_Tips300, Translate("TruSeq_SVF_Counter"), ML_STAR);
// }} ""
// {{ 425 1 0 "655cec1a_6b38_4294_a3ad7703f5765247" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  TipCounterWrite <<<<<<<<<<"));
// }} ""
// {{{ 5 "TipCounterWrite" "End"
}
// }} ""
// {{{ 5 "ReadSampleSheet" "Begin"
function ReadSampleSheet( variable & var_SourceFile, variable & var_NumberOfSamples, variable & var_IndexesUsed, variable & arr_Index1SeqPositions[], variable & arr_Index2SeqPositions[], variable & arr_ALPseqPositions[] ) void {
// }} ""
private variable Column1data;
private variable result_StringFound;
private variable LoopCounter1;
private variable result_Replacement;
private file file1;
private variable Line_WellDataHeader;
private variable Index2_ID;
private variable Index1_ID;
private variable WellID;
private file file2;
private variable Index2_Position;
private variable Index1_Position;
private variable Return_Found0;
private variable WellID_Row;
private variable WellID_Column;
// {{ 5 "ReadSampleSheet" "InitLocals"
var_NumberOfSamples = 0;
var_IndexesUsed = 0;
// }} ""
// {{ 254 1 0 "cc4c2d79_8277_4e23_a7544c2cfad6d56f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  ReadSampleSheet <<<<<<<<<<"));
// }} ""
// {{ 255 1 0 "cf50354b_23ce_4df9_a90274ed3faf6939" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file1.AddField("F1", Column1data, hslString, 255);
file1.SetDelimiter(hslTabDelimited);
if( 0 == file1.Open(var_SourceFile, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, var_SourceFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 256 1 0 "3e39d773_d444_45ea_868946cdafd71aa4" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField(1, Column1data, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open("C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", "HxMetEdCompCmd");
}
// }} ""
// {{ 257 1 0 "dad8c794_2cc8_4461_a3da443368374ec1" "{B31F3535-5D80-11d4-A5EB-0050DA737D89}"
file1.Seek(1, hslCurrent);
// }} ""
// {{ 258 1 0 "bfc873ed_a69e_489c_a996ad9dd2f9048a" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Read and trace out the data from the Sample Sheet:"));
// }} ""
// {{ 259 1 0 "95ecacbe_59eb_4860_99e11e3f979241e0" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LoopCounter1 = 0;
while (
   (file1.Eof() == 0)
)
{
LoopCounter1 = LoopCounter1 + 1;
// }} ""
// {{ 260 1 0 "a8a9c7ce_d1c4_4055_9a3271e390571379" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file1.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
Trace (Column1data);
// {{ 262 1 0 "4049ef75_8750_4805_94af18590621b3d9" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 263 1 0 "5f76838f_e1e9_4d36_b73228b939b5e438" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
result_StringFound = StrFind(Column1data, Translate("Sample_Well"));
// }} ""
// {{ 264 1 0 "98fc1a48_8e85_4c36_96bef1e4ac0356f3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (result_StringFound != -1)
{
// }} ""
// {{ 265 1 0 "d67093bf_ea59_4ddf_bb413d6a63f4995e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Found the line with the headers for the well data...."));
// }} ""
// {{ 266 1 0 "8f41d458_698b_4901_900311417168da3d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
Line_WellDataHeader = LoopCounter1;
// }} ""
// {{ 267 1 0 "8a5357cf_9231_414d_89dea5fab1f468df" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Header row found.  Determine how many, if any, indexes will be used in this run."));
// }} ""
// {{{ 268 1 0 "ee1fd75f_07ce_4061_ba8ec007823520b2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
result_Replacement = StrReplace(Column1data, Translate("Index_ID"), Translate(""));
// }} ""
Trace ("***** (Found ", result_Replacement, " Index ID(s).)");
// {{ 270 1 0 "1d76ebc4_49c3_4fac_9003f12a47031b5d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_IndexesUsed = result_Replacement;
// }} ""
// {{ 271 1 0 "98fc1a48_8e85_4c36_96bef1e4ac0356f3" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 272 1 0 "ac230d0b_2331_4892_b36980eb64da905c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Line_WellDataHeader > 0)
{
// }} ""
// {{ 273 1 0 "5e3532df_39d7_43fd_b2d5429c31987c12" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 274 1 0 "dc76253e_4c0d_49a4_a8357f718c565dfc" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 275 1 0 "ac230d0b_2331_4892_b36980eb64da905c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 276 1 0 "95ecacbe_59eb_4860_99e11e3f979241e0" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 277 1 0 "00d1fde1_ff11_4a5f_ae985cc6c0f74ef2" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file1.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file1.RemoveFields();
// }} ""
// {{ 278 1 0 "e97cbd78_c04b_42d4_90fcaddf4ca9ec97" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 279 1 0 "e049c1ae_5d9b_4e75_bcab114a135ea7b1" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 280 1 0 "cacd4d6f_46f6_4481_8b15c785225728d0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
RemoveTextDelimitersFromAsciiTextFile(Translate("C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt"));
// }} ""
// {{{ 281 1 0 "fd93c43f_1b1b_46fd_92e5721545147951" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FilDeleteFileEx(Translate("C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\schema.ini"));
// }} ""
// {{ 282 1 0 "7fbc1865_a440_4790_a8138f372dc53fc2" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Reread the file to get the number of samples and any index data."));
// }} ""
// {{ 283 1 0 "d5e96b70_c258_454e_b828f38c638ca32c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed == 0)
{
// }} ""
// {{ 284 1 0 "f4252025_257c_4bb3_8ff3b7ad39aaeb23" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** No \"Index_ID\" found.  Adapter Indexes will not be used in this run."));
// }} ""
// {{ 285 1 0 "cadc3538_ac58_4eef_9d6774872cba327f" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Sample_Well", WellID, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open("C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", "HxMetEdCompCmd");
}
// }} ""
// {{ 286 1 0 "d5e96b70_c258_454e_b828f38c638ca32c" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 287 1 0 "c58d7939_e012_4607_b19b97c1f1fd0d93" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed == 1)
{
// }} ""
// {{ 288 1 0 "6c37348f_129b_4cb6_9efa50e9548aea0d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** One Index Found *****"));
// }} ""
// {{ 289 1 0 "41978bc7_90e9_4b86_93392a76a228ac08" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Sample_Well", WellID, hslString, 255);
file2.AddField("I7_", Index1_ID, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open("C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", "HxMetEdCompCmd");
}
// }} ""
// {{ 290 1 0 "c58d7939_e012_4607_b19b97c1f1fd0d93" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 291 1 0 "108c3fa3_9e8c_48b7_af6d417ca3d62b00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed == 2)
{
// }} ""
// {{ 292 1 0 "5e3d2716_7f6d_4a02_929d7347f241f238" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***** Two Indexes Found *****"));
// }} ""
// {{ 293 1 0 "65d7da32_63c5_4186_bdcb8fa062415bb1" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Sample_Well", WellID, hslString, 255);
file2.AddField("I7_", Index1_ID, hslString, 255);
file2.AddField("I5_", Index2_ID, hslString, 255);
file2.SetDelimiter(hslCSVDelimited);
if( 0 == file2.Open("C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", hslRead) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Program Files (x86)\\HAMILTON\\Illumina\\Files\\TempSampleSheet.txt", "HxMetEdCompCmd");
}
// }} ""
// {{ 294 1 0 "108c3fa3_9e8c_48b7_af6d417ca3d62b00" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 295 1 0 "68b56aad_7fe3_4f04_af03800fd8cec60b" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_Index1SeqPositions.SetSize(0);
// }} ""
// {{ 296 1 0 "a407b2a1_e5a3_4ba5_a75324ac28d480d0" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_Index2SeqPositions.SetSize(0);
// }} ""
// {{ 297 1 0 "6f54e5de_f194_492f_85fb6f0f8de58f16" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_ALPseqPositions.SetSize(0);
// }} ""
// {{ 298 1 0 "729e52dd_d9a0_4ae4_bec40e072388a210" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
var_NumberOfSamples = 0;
while (
   (file2.Eof() == 0)
)
{
var_NumberOfSamples = var_NumberOfSamples + 1;
// }} ""
// {{ 299 1 0 "1e6b19ce_7fe8_47af_b152441639378628" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 300 1 0 "a8e964bd_433b_40e2_869e64a3efb3d9e5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Return_Found0 = StrFind(WellID, Translate("0"));
// }} ""
// {{ 301 1 0 "e3bd34fa_4a16_4cb1_a0336c141123d850" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Return_Found0 != -1)
{
// }} ""
// {{ 302 1 0 "8f07f8be_7ac1_4f4c_86384dbd6d853795" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 303 1 0 "1c70c333_1beb_4d43_962efdde5f4f74b2" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
WellID_Row = StrLeft(WellID, 1);
// }} ""
// {{{ 304 1 0 "76e93eb8_46d7_4c24_bb42f6c528005f24" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
WellID_Column = StrRight(WellID, 2);
// }} ""
// {{{ 305 1 0 "360a7d00_bf81_440f_8a9c5cae7034913f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
WellID_Column = StrIVal(WellID_Column);
// }} ""
// {{{ 306 1 0 "617da64e_8df2_423b_a8ba3057b443a1bb" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
WellID = StrConcat2(WellID_Row, WellID_Column);
// }} ""
// {{ 307 1 0 "e3bd34fa_4a16_4cb1_a0336c141123d850" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 308 1 0 "32410c18_79bb_4b91_ba10482459ec1eea" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_ALPseqPositions.AddAsLast(WellID);
// }} ""
// {{ 309 1 0 "39df0daf_5a1d_47a4_8f14e0cd9ca62515" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed >= 1)
{
// }} ""
// {{ 310 1 0 "61a19123_a219_4eb0_8af955ad39e39d74" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 311 1 0 "bc413e0c_c762_4223_864a244e436e1e7e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index1_Position = StrRight(Index1_ID, 2);
// }} ""
// {{{ 312 1 0 "306b51b0_6311_4133_955410f7f857f578" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index1_Position = StrTrimLeft(Index1_Position, Translate("0"));
// }} ""
// {{ 313 1 0 "fbe8ba69_e9a9_4fce_97c87bef33671dd2" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_Index1SeqPositions.AddAsLast(Index1_Position);
// }} ""
// {{ 314 1 0 "39df0daf_5a1d_47a4_8f14e0cd9ca62515" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 315 1 0 "0c462188_14e2_4402_85891789da6dccf0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed >= 2)
{
// }} ""
// {{ 316 1 0 "cb737be0_1188_4026_85e070916759c162" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 317 1 0 "6725c90f_3754_4fa6_957df3648f17acf0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index2_Position = StrRight(Index2_ID, 2);
// }} ""
// {{{ 318 1 0 "c4d8b405_a161_4235_972c5459b05def48" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index2_Position = StrTrimLeft(Index2_Position, Translate("0"));
// }} ""
// {{ 319 1 0 "3b94ea48_467e_4107_b4defc15907dc03c" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_Index2SeqPositions.AddAsLast(Index2_Position);
// }} ""
// {{ 320 1 0 "0c462188_14e2_4402_85891789da6dccf0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("Well:  ", WellID, "  Index1 Position in carrier:  ", Index1_Position, "  Index2 Position in carrier:  ", Index2_Position);
// {{ 322 1 0 "729e52dd_d9a0_4ae4_bec40e072388a210" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 323 1 0 "6b7e2275_50ae_4600_86fa5212ca7cc7fe" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 324 1 0 "9dad76dd_dc66_4bab_b77e0743a1a90679" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  ReadSampleSheet <<<<<<<<<<"));
// }} ""
// {{{ 5 "ReadSampleSheet" "End"
}
// }} ""
// {{{ 5 "GetHHSTemperature" "Begin"
function GetHHSTemperature( variable var_HHS ) void {
// }} ""
private variable ActualTemperatureNow;
// {{ 5 "GetHHSTemperature" "InitLocals"
// }} ""
// {{ 101 1 0 "e94e124c_8a7a_4f6e_9097ac18c0f6401f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>> Submethod:  GetHHSTemperature <<<<<"));
// }} ""
// {{{ 102 1 0 "c6633a6d_836c_4af3_ba2c1268a0de122d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::GetTemperature(var_HHS, ActualTemperatureNow);
// }} ""
Trace ("***** The current temperature for HHS", var_HHS, " is ", ActualTemperatureNow, "C *****");
// {{ 104 1 0 "9606b18f_ef2a_4835_9dcee1f87854367e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>> Submethod Complete:  GetHHSTemperature <<<<<"));
// }} ""
// {{{ 5 "GetHHSTemperature" "End"
}
// }} ""
// {{{ 5 "ReadSamplePlateFile" "Begin"
function ReadSamplePlateFile( variable & var_SourceFile, variable & var_NumberOfSamples, variable & var_IndexesUsed, variable & arr_Index1SeqPositions[], variable & arr_Index2SeqPositions[], variable & arr_ALPseqPositions[] ) void {
// }} ""
private variable Index2_ID;
private variable Index2_Position;
private variable Index1_ID;
private variable Column1data;
private variable WellID_Row;
private variable WellID;
private variable LoopCounter1;
private variable WellID_Column;
private variable Index1_Position;
private file file1;
private file file2;
private variable Column2data;
private variable Column3data;
private variable Column4data;
private variable TheSQLStatement;
private variable loopCounter1;
private file file3;
private variable Column5_Row;
private variable Column3_Index1;
private variable Column6_Column;
private variable Column6_Column_string;
private variable Column1_Well;
private variable Column2_ID;
private variable Column4_Index2;
// {{ 5 "ReadSamplePlateFile" "InitLocals"
var_NumberOfSamples = 0;
var_IndexesUsed = 0;
// }} ""
// {{ 187 1 0 "a59165a8_fedd_4f4e_a3a0c7e0b04bfa3f" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod:  ReadSamplePlateFile <<<<<<<<<<"));
// }} ""
// {{ 188 1 0 "72ef84f7_7638_4ae6_95cc8990549e806a" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
onerror goto errLabel_5628429F002945b88A41CF69C6A3E4FA ;
err.Clear();
// }} ""
// {{{ 189 1 0 "da225213_0506_4c66_86d21e2ed77c7754" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FilDeleteFileEx(Translate("C:\\Illumina\\Files\\TempSamplePlateFile.xls"));
// }} ""
// {{{ 190 1 0 "df619ac9_958c_40d1_8d52463929b159be" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
FilDeleteFileEx(Translate("C:\\Illumina\\Files\\TempSamplePlateFile2.xls"));
// }} ""
// {{ 191 1 0 "72ef84f7_7638_4ae6_95cc8990549e806a" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
errLabel_5628429F002945b88A41CF69C6A3E4FA : {}
onerror goto 0;
if (err.GetId() != 0)   /* skip handler if no error */
{
// }} ""
// {{ 192 1 0 "72ef84f7_7638_4ae6_95cc8990549e806a" "{3293659E-F71E-472f-AFB4-6A674E32B114}"
}   /* end if from skip handler if no error */
// }} ""
// {{ 193 1 0 "6ec6027f_64f4_478d_a95dca315c965014" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 194 1 0 "ba93f132_43c1_41a7_8c4b5b7495b94f48" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Write the original data to an xls file and find the number of indexes used."));
// }} ""
// {{ 195 1 0 "0e576f04_8f12_4cf5_b417244eeaeae726" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file1.AddField(1, Column1data, hslString, 255);
file1.AddField(2, Column2data, hslString, 255);
file1.AddField(3, Column3data, hslString, 255);
file1.AddField(4, Column4data, hslString, 255);
file1.SetDelimiter(hslTabDelimited);
if( 0 == file1.Open(var_SourceFile, hslAppend) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, var_SourceFile, "HxMetEdCompCmd");
}
// }} ""
// {{ 196 1 0 "9f0b55fc_fa2a_4964_99eaa18e53d55629" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.AddField("Well", Column1data, hslString, 255);
file2.AddField("SampleID", Column2data, hslString, 255);
file2.AddField("Index1", Column3data, hslString, 255);
file2.AddField("Index2", Column4data, hslString, 255);
if( 0 == file2.Open("C:\\Illumina\\Files\\TempSamplePlateFile.xls" + " " + "Sheet1", hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Illumina\\Files\\TempSamplePlateFile.xls", "HxMetEdCompCmd");
}
// }} ""
// {{ 197 1 0 "59871c99_2605_4367_ad34c47cb99b8350" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (file1.Eof() == 0)
)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 198 1 0 "475b8330_98cb_47a1_8de203112a326e6d" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file1.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 199 1 0 "cd016c74_34ca_4024_bc15d464b7a18e3c" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 200 1 0 "2ec5f86b_9ff1_41d5_bd8352e4a1a874db" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (Column1data == "IndexReads")
{
// }} ""
// {{ 201 1 0 "4e5cf148_c64b_45ad_afaf5736eea3a2fe" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("Found the number of indexes"));
// }} ""
// {{ 202 1 0 "57557191_aeeb_4f3c_a3c7020fb885e680" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
var_IndexesUsed = Column2data;
// }} ""
// {{ 203 1 0 "2ec5f86b_9ff1_41d5_bd8352e4a1a874db" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 204 1 0 "59871c99_2605_4367_ad34c47cb99b8350" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 205 1 0 "5b3a5dec_d2d4_4d18_88f08a90e1582841" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file1.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file1.RemoveFields();
// }} ""
// {{ 206 1 0 "16c56632_83ff_4abb_af8b7f84551a0e8d" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 207 1 0 "6ec6027f_64f4_478d_a95dca315c965014" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 208 1 0 "db0afaaa_29f4_4883_9330bf49a3a2d625" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 209 1 0 "e2924094_d967_415e_aac50de9afd60702" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 210 1 0 "f6915ca3_1bd6_43d6_957722e35324a832" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TheSQLStatement = StrConcat4(Translate("SELECT * FROM ["), Translate("Sheet1$"), Translate("] WHERE [SampleID] IS NOT NULL"), Translate(""));
// }} ""
// {{ 211 1 0 "a6638ee4_98d0_4273_b710ab602665a48e" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file2.SetExtendedProperties( "IMEX=1");
file2.AddField("Well", Column1_Well, hslString, 255);
file2.AddField("SampleID", Column2_ID, hslString, 255);
file2.AddField("Index1", Column3_Index1, hslString, 255);
file2.AddField("Index2", Column4_Index2, hslString, 255);
if( 0 == file2.Open("C:\\Illumina\\Files\\TempSamplePlateFile.xls" + " " + "Sheet1$", hslRead, TheSQLStatement) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Illumina\\Files\\TempSamplePlateFile.xls", "HxMetEdCompCmd");
}
// }} ""
// {{ 212 1 0 "fe71723e_97eb_48e2_8b24527105ee88a1" "{B31F3535-5D80-11d4-A5EB-0050DA737D89}"
file2.Seek(5, hslCurrent);
// }} ""
// {{ 213 1 0 "5bdd53de_4eb6_4df6_ac4c0dd3c74334a5" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file3.AddField("Well", Column1_Well, hslString, 255);
file3.AddField("SampleID", Column2_ID, hslString, 255);
file3.AddField("Index1", Column3_Index1, hslString, 255);
file3.AddField("Index2", Column4_Index2, hslString, 255);
file3.AddField("Row", Column5_Row, hslString, 255);
file3.AddField("Column", Column6_Column, hslInteger);
if( 0 == file3.Open("C:\\Illumina\\Files\\TempSamplePlateFile2.xls" + " " + "Sheet1", hslWrite) )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Illumina\\Files\\TempSamplePlateFile2.xls", "HxMetEdCompCmd");
}
// }} ""
// {{ 214 1 0 "af740d94_d4dd_4052_b3f3d5defac0a73c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
LoopCounter1 = 0;
while (
   (file2.Eof() == 0)
)
{
LoopCounter1 = LoopCounter1 + 1;
// }} ""
// {{ 215 1 0 "95f17f98_4647_400f_9363bbb8bb638183" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file2.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{{ 216 1 0 "07fcb3ee_72f3_4fa1_803022ec8bbcfa83" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Column5_Row = StrLeft(Column1_Well, 1);
// }} ""
// {{{ 217 1 0 "98c7ec90_4e42_4304_847dd899250fdb3d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Column6_Column_string = StrRight(Column1_Well, 2);
// }} ""
// {{{ 218 1 0 "9428fcd0_1742_45ee_ade4c63280abe3b1" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Column6_Column = StrIVal(Column6_Column_string);
// }} ""
// {{ 219 1 0 "6d0a639f_45a5_4fc7_9fd47386af2e1b4e" "{B31F3537-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file3.WriteRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1473380096, MECC::IDS::stepNameFileWrite, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 220 1 0 "af740d94_d4dd_4052_b3f3d5defac0a73c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 221 1 0 "43ab666e_14cf_4563_8577406a5b3c89e3" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file2.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file2.RemoveFields();
// }} ""
// {{ 222 1 0 "3e61ae1b_e035_49b4_848d6c1da581961b" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file3.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file3.RemoveFields();
// }} ""
// {{ 223 1 0 "db0afaaa_29f4_4883_9330bf49a3a2d625" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 224 1 0 "76a49726_909f_4376_82c1b25fe60f4755" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 225 1 0 "aef1413a_9fc5_4d50_af0859e00ed48aed" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 226 1 0 "d5794037_b7b1_4374_8bb5d800376ce5a2" "{B31F3534-5D80-11d4-A5EB-0050DA737D89}"
file3.AddField("Well", WellID, hslString, 255);
file3.AddField("SampleID", Column2_ID, hslString, 255);
file3.AddField("Index1", Index1_ID, hslString, 255);
file3.AddField("Index2", Index2_ID, hslString, 255);
file3.AddField("Row", WellID_Row, hslString, 255);
file3.AddField("Column", WellID_Column, hslInteger);
if( 0 == file3.Open("C:\\Illumina\\Files\\TempSamplePlateFile2.xls" + " " + "Sheet1$", hslRead, "SELECT * FROM [Sheet1$] ORDER BY [Column] ASC, [Row] ASC") )
{
    MECC::RaiseRuntimeErrorEx(-1523711743, MECC::IDS::stepNameFileOpen, MECC::IDS::errorStepFileOpenFailed, "C:\\Illumina\\Files\\TempSamplePlateFile2.xls", "HxMetEdCompCmd");
}
// }} ""
// {{ 227 1 0 "b74c7a2e_c63a_4636_8f758681b75751b1" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_Index1SeqPositions.SetSize(0);
// }} ""
// {{ 228 1 0 "9df40df8_4ed2_4cd7_a3703f3514a15950" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_Index2SeqPositions.SetSize(0);
// }} ""
// {{ 229 1 0 "a514cdc8_b2cd_4c1f_b128641a290f1b70" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arr_ALPseqPositions.SetSize(0);
// }} ""
// {{{ 230 1 0 "00782513_b603_4761_afc9f94467ca5a46" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
var_IndexesUsed = StrIVal(var_IndexesUsed);
// }} ""
// {{ 231 1 0 "ccbe0eea_788c_4aea_b4a04a1af8c86735" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
var_NumberOfSamples = 0;
while (
   (file3.Eof() == 0)
)
{
var_NumberOfSamples = var_NumberOfSamples + 1;
// }} ""
// {{ 232 1 0 "1e30a127_71fa_4d08_bf578c5d6f07c48c" "{B31F3536-5D80-11d4-A5EB-0050DA737D89}"
if( 0 == file3.ReadRecord() )
{
    MECC::RaiseRuntimeErrorEx(-1490157312, MECC::IDS::stepNameFileRead, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
// }} ""
// {{ 233 1 0 "005d9be1_06b1_4809_b3dd3387ef928b68" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 234 1 0 "53336292_50bd_4875_84aa970fc50656ed" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
WellID = StrConcat2(WellID_Row, WellID_Column);
// }} ""
// {{ 235 1 0 "115112a7_709a_4303_8608dfbcb3dddd48" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_ALPseqPositions.AddAsLast(WellID);
// }} ""
// {{ 236 1 0 "0d31d1e0_455b_41ce_827030727b028cb0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed >= 1)
{
// }} ""
// {{ 237 1 0 "661dc24a_ef5e_4999_9e17836b9edcd8ed" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 238 1 0 "1ba5e34f_546e_4e77_8bf9d5eab7b6b988" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index1_Position = StrRight(Index1_ID, 2);
// }} ""
// {{{ 239 1 0 "e03dba0f_5c74_427c_8d6fa6ae44bccefc" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index1_Position = StrTrimLeft(Index1_Position, Translate("0"));
// }} ""
// {{ 240 1 0 "dd264569_a624_4255_864e375e546e4c7f" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_Index1SeqPositions.AddAsLast(Index1_Position);
// }} ""
// {{ 241 1 0 "0d31d1e0_455b_41ce_827030727b028cb0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 242 1 0 "7bf0740d_59df_4c38_b3c9995dea3521b2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (var_IndexesUsed >= 2)
{
// }} ""
// {{ 243 1 0 "b9fcb2c7_3f8d_4f42_aaa01f334d65406c" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 244 1 0 "3df951d8_357a_4ecc_82690539bcb8178a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index2_Position = StrRight(Index2_ID, 2);
// }} ""
// {{{ 245 1 0 "6d87f4d8_7812_4a61_887ed4e46a66a303" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
Index2_Position = StrTrimLeft(Index2_Position, Translate("0"));
// }} ""
// {{ 246 1 0 "b907e384_45e2_4206_9a50e43c3f01ad33" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arr_Index2SeqPositions.AddAsLast(Index2_Position);
// }} ""
// {{ 247 1 0 "7bf0740d_59df_4c38_b3c9995dea3521b2" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
Trace ("Well:  ", WellID, " ----- Index1 ID:  ", Index1_ID, " ----- Index2 ID:  ", Index2_ID);
// {{ 249 1 0 "ccbe0eea_788c_4aea_b4a04a1af8c86735" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 250 1 0 "a82c0bc1_c9ed_4c0e_bba242713e76b2f1" "{B31F3538-5D80-11d4-A5EB-0050DA737D89}"
if( 0 != file3.Close() )
{
    MECC::RaiseRuntimeErrorEx(-1456602880, MECC::IDS::stepNameFileClose, MECC::IDS::errorStepFailed, "", "HxMetEdCompCmd");
}
file3.RemoveFields();
// }} ""
// {{ 251 1 0 "76a49726_909f_4376_82c1b25fe60f4755" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 252 1 0 "4eacaa65_ed72_4fff_b24313a984e1b592" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate(">>>>>>>>>> Submethod Complete:  ReadSamplePlateFile <<<<<<<<<<"));
// }} ""
// {{{ 5 "ReadSamplePlateFile" "End"
}
// }} ""
/* {{ 2 "SubmethodInsertLine" "" */ // }} ""
// {{{ 2 "LibraryNamespace" "End"
} // library namespace
// }} ""
// $$author=Hamilton$$valid=0$$time=2019-09-09 08:40$$checksum=46f23f01$$length=087$$