
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 06.07.2016 20:30:53

#pragma once
#ifndef HSL_RUNTIME
namespace EASYPICKII_STEPS {
function _InitLibrary() { }
function _ExitLibrary() { }
function ShowErrorDialog( variable i_intErrorCode ) variable {  return (0); }
function easyStep_Camera_Place_to_Labware( device & ML_STAR, variable i_strLabwareID, variable i_fltOffsetX_mm, variable i_fltOffsetY_mm, variable i_fltOffsetZ_mm ) variable {  return (0); }
function easyStep_Colony_Analyse( variable i_strColonySettingsName, variable i_blnAsynchronPictureSave, variable i_strRackBarcode, variable i_strDescription, variable & o_intRackID ) variable {  return (0); }
function easyStep_Colony_Analyse2( variable i_strColonySettingsName, variable i_blnUseAgarHeight, variable i_fltAgarHeightBasedOnReferencePointsPlane_mm, variable i_blnEditColonies, variable i_blnAsynchronPictureSave, variable i_strRackBarcode, variable i_strDescription, variable & o_intRackID ) variable {  return (0); }
function easyStep_Colony_ExportRackPicture( variable i_intRackID, variable i_blnAsynchronPictureSave, variable i_strPictureFilename, variable i_strPictureFormat, variable i_blnPictureCropped, variable i_intPictureSize_pct ) variable {  return (0); }
function easyStep_Colony_RetrieveColonyPositions( device & ML_STAR, variable i_strReferencePointUpperLeftLabwareID, variable i_strColonyPlateLabwareID, variable i_strColonySpotLabwareFilename, variable i_intRackID, variable & i_arrintMaxNumberOfColoniesToPick[], variable i_strChannelPattern, variable & o_strUsedChannelPattern, variable & o_intUsedNumberOfColonies, variable & o_intTotalNumberOfColonies, sequence & o_seqColonyPositions, variable & o_arrintColonyIDs[], variable & o_arrintWellNumbers[] ) variable {  return (0); }
function easyStep_Colony_RetrieveColonyPositions2( device & ML_STAR, variable i_strReferencePointUpperLeftLabwareID, variable i_strColonyPlateLabwareID, variable i_strColonySpotLabwareFilename, variable i_intRackID, variable & i_arrintMaxNumberOfColoniesToPick[], variable i_intSortMode, variable i_strChannelPattern, variable & o_strUsedChannelPattern, variable & o_intUsedNumberOfColonies, variable & o_intTotalNumberOfColonies, sequence & o_seqColonyPositions, variable & o_arrintColonyIDs[], variable & o_arrintContainerNumbers[] ) variable {  return (0); }
function easyStep_Colony_TakePicture( device & ML_STAR, variable i_strCameraSettingsName, variable i_blnKeepCameraOpen ) variable {  return (0); }
function easyStep_Colony_UpdatePickingState( variable i_strStepReturn, variable & i_intarrColonyIDs[] ) variable {  return (0); }
function easyStep_Colony_WaitUntilAsynchronSaveFinished(  ) variable {  return (0); }
function easyStep_DeInit( device & ML_STAR ) variable {  return (0); }
function easyStep_ImageStitcher_Stitch( variable i_strImageStitcherSettingsName, variable i_blnSaveInputPictures, variable i_blnSaveStitchedPicture, variable i_strBarcode, variable i_strDescription, variable & o_intImageStitcherID ) variable {  return (0); }
function easyStep_ImageStitcher_Stitch2( variable i_strImageStitcherSettingsName, variable i_blnUseAgarHeight, variable i_fltAgarHeightBasedOnReferencePointsPlane_mm, variable i_blnSaveInputPictures, variable i_blnSaveStitchedPicture, variable i_blnAsynchronPictureSave, variable i_strBarcode, variable i_strDescription, variable & o_intImageStitcherID ) variable {  return (0); }
function easyStep_ImageStitcher_TakePictures( device & ML_STAR, variable i_strReferencePointUpperLeftLabwareID, variable i_strCameraSettingsName, variable i_fltOffsetXLeft_mm, variable i_fltOffsetXRight_mm, variable i_fltOffsetY0_mm, variable i_fltOffsetY1_mm, variable i_fltOffsetY2_mm ) variable {  return (0); }
function easyStep_ImageStitcher_WaitUntilAsynchronSaveFinished(  ) variable {  return (0); }
function easyStep_Init( device & ML_STAR, variable i_intTraceLevel, variable i_blnInitApplication ) variable {  return (0); }
function easyStep_Light_Off( device & ML_STAR, variable i_intLightSource ) variable {  return (0); }
function easyStep_Light_On( device & ML_STAR, variable i_intLightSource, variable i_fltLightIntensity_pct ) variable {  return (0); }
global variable gEasyPickIISteps_strLibraryName("EasyPickII_Steps");
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=ljegher$$valid=1$$time=2016-07-07 23:52$$checksum=7797b890$$length=084$$