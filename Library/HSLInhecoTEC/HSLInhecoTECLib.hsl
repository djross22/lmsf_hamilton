// ===========================================================================
// Library interface for use with Inheco Single and Multi TEC Controllers
//
// Copyright (C) 2010 by HAMILTON Bonaduz, CH
// All rights reserved.
// ===========================================================================
//
// Inspired by the code from Inheco MTECController by Steve Griffin
//
// 2010-06-25 V1.0 Dirk Hollstein
// ===========================================================================

#ifndef __HSLMTec_Lib_hsl__
#define __HSLMTec_Lib_hsl__ 1


#ifndef HSL_RUNTIME

namespace HSLInhecoTECLib
{ 
    //library functions
    function Initialize(variable iControllerID,
                        variable iSimulationMode,
                        variable& oErrorCode) {return(0);}

    function Terminate() {return(0);}

    function GetLastError(variable& oLastError) {return(0);}

    function SetTraceLevel(variable iTraceLevel) {return(0);}

    function GetDescriptionForErrorCode(variable& iErrorCode,
                                        variable& oErrorDescription) {return(0);}

    //reporting functions
    function GetDeviceSerialNumber(variable deviceAddres,
                                   variable& sn) {return(0);}

    function GetFirmwareVersion(variable iControllerID,
                                variable iSelector,
                                variable& oFirmwareInformation,
                                variable& oErrorCode) {return(0);}

    function GetDeviceType(variable iControllerID,
                           variable iDeviceID,
                           variable& oDeviceType,
                           variable& oErrorCode) {return(0);}

    function GetCalibrationDate(variable iControllerID,
                                variable iDeviceID,
                                variable& oCalibrationDate,
                                variable& oErrorCode) {return(0);}

    //sensor information
    function GetSensorValues(variable iControllerID,
                             variable iSelector,
                             variable& oSensorValues,
                             variable& oErrorCode) {return(0);}

    //thermal control
    function GetReservoirStatus(variable iControllerID,
                                variable iDeviceID,
                                variable& oReservoirStatus,
                                variable& oErrorCode) {return(0);}

    function StartTemperatureControl(variable iControllerID,
                                     variable iDeviceID,
                                     variable& oErrorCode) {return(0);}

    function StopTemperatureControl(variable iControllerID,
                                    variable iDeviceID,
                                    variable& oErrorCode) {return(0);}

    function SetTargetTemperature(variable iControllerID,
                                  variable iDeviceID,
                                  variable iTargetTemperature,
                                  variable& oErrorCode) {return(0);}

    function GetTargetTemperature(variable iControllerID,
                                  variable iDeviceID,
                                  variable& oTargetTemperature,
                                  variable& oErrorCode) {return(0);}

    function GetHeaterEnableStatus(variable iControllerID,
                                   variable iDeviceID,
                                   variable& iFlag,
                                   variable& oHeatingStatus,
                                   variable& oErrorCode ) {return(0);}

    function GetActualDeviceTemperature(variable iControllerID,
                                        variable iDeviceID,
                                        variable iFlag,
                                        variable& oTargetTemperatur,
                                        variable& oErrorCode) {return(0);}

    //shaker control
    function SetShakerRevolutions(variable iControllerID,
                                  variable iDeviceID,
                                  variable iShakerRevolutions,
                                  variable& oErrorCode) {return(0);}

    function GetShakerRevolutions(variable iControllerID,
                                  variable iDeviceID,
                                  variable& oShakerRevolutions,
                                  variable& oErrorCode) {return(0);}

    function SetShakerShape(variable iControllerID,
                            variable iDeviceID,
                            variable iShakerShape,
                            variable& oErrorCode) {return(0);}

    function GetShakerShape(variable iControllerID,
                            variable iDeviceID,
                            variable& oShakerShape,
                            variable& oErrorCode) {return(0);}

    function GetShakerStatus(variable iControllerID,
                             variable iDeviceID,
                             variable& oStatus,
                             variable& oErrorCode) {return(0);}

    function StartShaker(variable iControllerID,
                         variable iDeviceID,
                         variable& oErrorCode) {return(0);}

    function StopShaker(variable iControllerID,
                        variable iDeviceID,
                        variable& oErrorCode) {return(0);}


    //arbitrary controller and device access
    function SendCommandString(variable iControllerID,
                               variable iCommandString,
                               variable& oResponse) variable {return(0);}
}


#endif//end of #ifndef HSL_RUNTIME

#ifdef HSL_RUNTIME

// Include the implementation file
#include "HSLInhecoTEC\\HSLInhecoTECLib.hs_"

#endif//end of #ifndef HSL_RUNTIME

#endif
 

// $$author=Smith_Ma$$valid=0$$time=2019-05-28 20:47$$checksum=4ef7e36b$$length=085$$