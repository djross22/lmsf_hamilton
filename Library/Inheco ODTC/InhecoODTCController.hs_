
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 12.11.2015 11:37:55

#pragma once
#ifndef HSL_RUNTIME
namespace INHECOODTCCONTROLLER {
function _InitLibrary() { }
function _ExitLibrary() { }
function AbortDevice( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function AddINHECODeviceWarningNumbersToAListOfWarningsThatWillNotCauseAnAbortOfTheMethod( variable i_IntDeviceNumber, variable i_intWarningNumber ) variable {  return (0); }
function CloseDoor( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function ContinueDevice( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function ExecuteProtocol( variable i_IntDeviceNumber, variable i_strLockID, variable i_strProtocollFullFileName, variable i_strNameOfProtocollOnDevice, variable i_intPriority, variable & o_intTimeForThisProgramSeconds, variable & o_intRequestIDToWaitFor, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function GetConfiguration( variable i_IntDeviceNumber, variable i_strLockID, variable i_intConfigLevel, variable i_strPassword, variable & o_strResult, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function GetDeviceIdentification( variable i_IntDeviceNumber, variable i_strLockID, variable & o_strFirmwareIdentification, variable & o_strDeviceManufacturer, variable & o_strDeviceName, variable & o_strDeviceSerialNumber, variable & o_strSilaInterFaceVersion, variable & o_strSiLASubversionClass, variable & o_strWSDL, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function GetParameters( variable i_IntDeviceNumber, variable i_strLockID, variable & o_strResult, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function GetStatus( variable i_IntDeviceNumber, variable & o_strState, variable & o_strDeviceID, variable & o_blnLocked, variable & o_strPMSID, variable & o_strCurrentDeviceTime, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function Initialize( variable i_strIPAdressLocal, variable i_str_IpadressOfDevice, variable i_strPortOnDevice, variable i_strPathToWsdlFileOfDevice, variable i_strLogDirectoryFullFilePath, variable i_blnSimulationMode, variable & o_IntDeviceNumber, variable & o_strMessage ) variable {  return (0); }
function InitializeDevice( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function LockDevice( variable i_IntDeviceNumber, variable i_intTimeToWaitBeforeReleasingLock, variable i_strPMSID, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function OpenDoor( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function PauseDevice( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function ReadActualTemperature( variable i_IntDeviceNumber, variable i_strLockID, variable & o_strTime, variable & o_arrfltTemperatures[], variable & o_arrstrTemperatureNames[], variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function ResetDevice( variable i_intDeviceNumber, variable i_intTimeToWait, variable i_strLockID, variable i_strPMSID, variable i_strDeviceIDName, variable i_blnSimulateOnDeviceBase, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function ReturnAndCleanDataEventMessagesFromDevice( variable i_IntDeviceNumber, variable & o_strReturnValue, variable & o_strMessage ) void { }
function ReturnAndCleanStatusMessagesFromDevice( variable i_IntDeviceNumber, variable & o_intReturnValue, variable & o_strMessage ) void { }
function SetDeviceCSVSeparator( variable i_IntDeviceNumber, variable i_strLockID, variable i_strCSVSeparator, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function SetDeviceDateTime( variable i_IntDeviceNumber, variable i_strLockID, variable i_strDateTime, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function SetDeviceNetworkConfig( variable i_IntDeviceNumber, variable i_strLockID, variable i_strIPAdress, variable i_strSubNet, variable i_strGateWay, variable i_strDNS1, variable i_strDNS2, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function StopMethod( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function TerminateAllDevicesAndCloseComunication( variable & o_strMessage ) variable {  return (0); }
function TerminateSingleDevice( variable i_IntDeviceNumber, variable & o_strMessage ) variable {  return (0); }
function UnLockDevice( variable i_IntDeviceNumber, variable i_strLockID, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
function WaitForStartedProtocolToFinish( variable i_IntDeviceNumber, variable i_strLockID, variable i_intTimeOut, variable i_intAdditionalSpareTimeToWaitbeforeErrorIsTrigered, variable i_intRequestIDToWaitFor, variable & o_intReturnValue, variable & o_strMessage ) variable {  return (0); }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=bhuf$$valid=1$$time=2015-11-12 11:37$$checksum=58ab3112$$length=081$$