//************************************************************************
// use this framework as a template to write a HSL library
// the following sections are required by all libraries:
//
// the following define ensures that the library is only included once per process
#ifndef _HSL_LVKServiceClient_hsl_
#define _HSL_LVKServiceClient_hsl_ 1


// the following section should declare your (public) methods 
// these are the methods the user will have access to via the Method Editor
#ifndef HSL_RUNTIME
namespace LVK
{
// Connection Functions
   function Connect() void {}
   function Disconnect() void {}

// Data Access Functions
   function LiquidClass() string { return(""); }
   function AutomaticDripControl() string { return(""); }
   function CycleCount() string { return(""); }
   function Device() string { return(""); }
   function DeviceIndex() string { return(""); }
   function Humidity() string { return(""); }
   function KeepTips() string { return(""); }
   function LiquidDensity() string { return(""); }
   function PreDispenseCycles() string { return(""); }
   function DispenseCycles() string { return(""); }
   function PostDispenseCycles() string { return(""); }
   function ReturnTips() string { return(""); }
   function ReUseTips() string { return(""); }
   function Temperature() string { return(""); }
   function TipSize() string { return(""); }
   function AspirateCLLD() string { return(""); }
   function AspiratePLLD() string { return(""); }
   function AspirateVolume() string { return(""); }
   function AspirateHeight() string { return(""); }
   function AspirateMixCycles() string { return(""); }
   function AspirateMixDepth() string { return(""); }
   function AspirateMixVolume() string { return(""); }
   function AspiratePostVolume() string { return(""); }
   function AspiratePreVolume() string { return(""); }
   function DispenseCLLD() string { return(""); }
   function DispensePLLD() string { return(""); }
   function DispenseVolume() string { return(""); }
   function DispenseHeight() string { return(""); }
   function DispenseMixCycles() string { return(""); }
   function DispenseMixDepth() string { return(""); }
   function DispenseMixVolume() string { return(""); }
   function DispensePreVolume() string { return(""); }
   function DispensePostVolume() string { return(""); }
   function TargetCVPercentage() string {return (""); }
   function TargetRPercentage() string {return (""); }
   function TargetRadius() string {return (""); }
   function RandomWeight() string {return (""); }
   function COMPort() string {return (""); }
   function VialType() string {return (""); }


// Notify Functions
   function ReportNewMeasurementData(string cycle, string dispense, string gravWeight, string deviceIndex) void { }
   function ReportNewBalanceStatus(string status) void { }
   function ReportCycleComplete() void { }
}
#endif



// the following section is the runtime implementation of your library
// this section includes the public and any private methods, variables etc.
#ifdef HSL_RUNTIME
namespace LVK
{
   object lvkServiceObject;
   variable lvkServiceInitialized;
			
	function Connect () void
	{		
		if(!lvkServiceInitialized)
		{	
		   lvkServiceObject.CreateObject("LVK.HSLLVKService");
		   lvkServiceObject.Connect();
		   lvkServiceInitialized = hslTrue;
		}
		return;
	}

	function Disconnect () void
	{
		Trace(GetFunctionName(), " called");
		lvkServiceInitialized = hslFalse;
		lvkServiceObject.Disconnect();
		lvkServiceObject.ReleaseObject( );
		Trace(GetFunctionName(), " completed");
		return;
	}

   function LiquidClass() 			string { return ( lvkServiceObject.LiquidClass() ); }
   function AutomaticDripControl() 	string { return ( lvkServiceObject.AutomaticDripControl() );}
   function CycleCount() 			string { return ( lvkServiceObject.CycleCount() ); }
   function Device() 				string { return ( lvkServiceObject.Device() ); }
   function DeviceIndex() 			string { return ( lvkServiceObject.DeviceIndex() ); }
   function Humidity() 				string { return ( lvkServiceObject.Humidity() ); }
   function KeepTips() 				string { return ( lvkServiceObject.KeepTips() ); }
   function LiquidDensity() 		string { return ( lvkServiceObject.LiquidDensity() ); }
   function PreDispenseCycles() 	string { return ( lvkServiceObject.PreDispenseCycles() ); }
   function DispenseCycles() 	    string { return ( lvkServiceObject.DispenseCycles() ); }
   function PostDispenseCycles() 	string { return ( lvkServiceObject.PostDispenseCycles() ); }
   function ReturnTips() 			string { return ( lvkServiceObject.ReturnTips() ); }
   function ReUseTips() 			string { return ( lvkServiceObject.ReUseTips() ); }
   function Temperature() 			string { return ( lvkServiceObject.Temperature() ); }
   function TipSize() 				string { return ( lvkServiceObject.TipSize() ); }
   function AspirateCLLD() 			string { return ( lvkServiceObject.AspirateCLLD() ); }
   function AspiratePLLD() 			string { return ( lvkServiceObject.AspiratePLLD() ); }
   function AspirateVolume() 		string { return ( lvkServiceObject.AspirateVolume() ); }
   function AspirateHeight() 		string { return ( lvkServiceObject.AspirateHeight() ); }
   function AspirateMixCycles() 	string { return ( lvkServiceObject.AspirateMixCycles() ); }
   function AspirateMixDepth() 		string { return ( lvkServiceObject.AspirateMixDepth() ); }
   function AspirateMixVolume() 	string { return ( lvkServiceObject.AspirateMixVolume() ); }
   function AspiratePostVolume() 	string { return ( lvkServiceObject.AspiratePostVolume() ); }
   function AspiratePreVolume() 	string { return ( lvkServiceObject.AspiratePreVolume() ); }
   function DispenseCLLD() 			string { return ( lvkServiceObject.DispenseCLLD() ); }
   function DispensePLLD() 			string { return ( lvkServiceObject.DispensePLLD() ); }
   function DispenseVolume() 		string { return ( lvkServiceObject.DispenseVolume() ); }
   function DispenseHeight() 		string { return ( lvkServiceObject.DispenseHeight() ); }
   function DispenseMixCycles() 	string { return ( lvkServiceObject.DispenseMixCycles() ); }
   function DispenseMixDepth() 		string { return ( lvkServiceObject.DispenseMixDepth() ); }
   function DispenseMixVolume() 	string { return ( lvkServiceObject.DispenseMixVolume() ); }
   function DispensePreVolume() 	string { return ( lvkServiceObject.DispensePreVolume() ); }
   function DispensePostVolume() 	string { return ( lvkServiceObject.DispensePostVolume() ); }
   function TargetCVPercentage() 	string { return ( lvkServiceObject.TargetCVPercentage() ); }
   function TargetRPercentage() 	string { return ( lvkServiceObject.TargetRPercentage() ); }
   function TargetRadius() 			string { return ( lvkServiceObject.TargetRadius() ); }
   function RandomWeight()			string { return ( lvkServiceObject.RandomWeight() ); }
   function COMPort()				string { return ( lvkServiceObject.COMPort() ); }
   function VialType()				string { return ( lvkServiceObject.VialType() ); }

   
   function ReportNewMeasurementData(string cycle, string dispense, string gravWeight, string deviceIndex) void 
   { 
		lvkServiceObject.ReportNewMeasurementData(cycle,dispense,gravWeight,deviceIndex);
   }
   function ReportNewBalanceStatus(string status) void 
   { 
		lvkServiceObject.ReportNewBalanceStatus(status);
   }
   function ReportCycleComplete() void 
   {
		lvkServiceObject.ReportCycleComplete();
   }
} 

#endif	// HSL_RUNTIME

#endif	// _HSL_LVKServiceClient_hsl_
// $$author=lugo_m$$valid=1$$time=2018-03-20 13:49$$checksum=438a7437$$length=085$$