
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 3/29/2023 2:12:51 PM

#pragma once
#ifndef HSL_RUNTIME
namespace LMSF_UTILITIES {
function _InitLibrary() { }
function _ExitLibrary() { }
function GetAdditiveConcentration( variable additive_name, variable additive_prompt, variable & additive_units ) variable {  return (0); }
function GetMetaIdentifier( variable list_type, variable select_prompt ) variable {  return (0); }
function GetOverlordFolderPath(  ) variable {  return (0); }
function GetTipTypeAndDispenseModeOfLiquidClass( variable i_strLiquidClassName, variable & o_intTiptype, variable & o_intDispenseMode ) void { }
function GetTraceFile(  ) variable {  return (0); }
function GetWorklistFolderPath(  ) variable {  return (0); }
function ReadFirstOD( variable gen5_file_name, sequence & plate_seq, variable wavelength ) variable {  return (0); }
function ReadLastOD( variable gen5_file_name, sequence & plate_seq, variable wavelength ) variable {  return (0); }
function SaveToMetaDataFile( variable meta_file_path, variable experiment_id, variable step_str, variable auto_method, variable auto_trace, variable worklist_file_path, variable year_string, variable month_string, variable day_string, variable start_time_str, variable append_str ) void { }
function SeqCopyProperties( sequence & input_sequence, variable & property_arr[], sequence & target_sequence ) void { }
function SeqCopyPropsFromShortSeq( sequence & input_sequence, variable & property_arr[], sequence & target_sequence ) void { }
function SeqSetPropertyByWell( variable labware_id, variable position_id, sequence & target_sequence, variable property_str, variable property_value ) variable {  return (0); }
function SeqTransferProperties( sequence & input_sequence, variable & property_arr[], sequence & target_sequence ) void { }
function SeqZShift( sequence input_sequence, variable z_shift, device & ML_STAR ) void { }
function SharedParameters(  ) void { }
function SortArray( variable & key_array[], variable & value_array[] ) void { }
function SortMetaList( variable & key_array[], variable & value_array[], variable & long_array[] ) void { }
function TraceSeqProperties( sequence & input_sequence, variable & property_arr[] ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=djross$$valid=0$$time=2023-03-29 14:12$$checksum=591a5006$$length=083$$