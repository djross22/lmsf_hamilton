#include "MPE maintenance with agilent filter plate.res"
global device ML_STAR ("MPE maintenance with agilent filter plate.lay", "ML_STAR", hslTrue);
 namespace _Method { #include "HSLMPELib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "Common\\Common96HeadSubMethods.hs_" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable FPlateFilterHeight;
variable FPlateNozzleHeight;
variable MPE2Waste;
variable MPE2COMPort;
variable MPE2DevID;
variable _blnSimulationMode;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
COMMON96HEADSUBMETHODS::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "2eb7689f_7a5a_40c5_ad70bcfc6fa226be" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("==========================================================================================\nThis method just initializes the MPE\n=========================================================================================="));
// }} ""
// {{{ 2 1 0 "7c18e1bd_97ed_4337_b2da2ec3a22fbe8c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
_blnSimulationMode = HSLML_STAR::IsSimulatorMode(ML_STAR);
// }} ""
// {{{ 3 1 0 "fb4f34ea_cd17_4b4f_8c436531ee5f9371" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace("_blnSimulationMode: ", _blnSimulationMode);
// }} ""
// {{{ 4 1 0 "e709fefc_1a2f_433d_8e2a62256249c781" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
Definitions();
// }} ""
// {{{ 5 1 0 "ede744d6_25b2_484c_b93a9169d8e40d0f" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{{ 6 1 0 "8f220eec_8477_4ae1_9063b25ffc4804a4" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
COMMON96HEADSUBMETHODS::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=djross$$valid=0$$time=2022-11-07 09:59$$checksum=4b0a03e7$$length=085$$