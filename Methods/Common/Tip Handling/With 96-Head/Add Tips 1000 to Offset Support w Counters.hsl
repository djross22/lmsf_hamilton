 namespace _Method { #include "Common\\Common96HeadSubMethods.hs_" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Sequence.hsl" } 
 namespace _Method { #include "HSLExtensions\\Array.hsl" } 
 namespace _Method { #include "HSLErrLib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "Tip Handling with 96-Head.hs_" } 
#include "Tip Handoffs with 96-Head to supports.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable tip_counter_offset;
global device ML_STAR ("Tip Handoffs with 96-Head to supports.lay", "ML_STAR", hslTrue);
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
COMMON96HEADSUBMETHODS::_InitLibrary();
TIP_HANDLING_WITH_96_HEAD::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "1b3fef92_cb78_411c_899e0dd478b9225e" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 2 1 0 "6515588d_60f3_4887_8c8793bcb2c9e216" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{ 3 1 0 "f63c191d_df86_4867_975c515a57e8f04d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("--------------------------------------------------------------------------------------------------------------------------\nGet any tips that are already  on the offset pickup and throw them to waste\n--------------------------------------------------------------------------------------------------------------------------"));
// }} ""
// {{ 4 1 0 "2869a165_e4a2_4a1a_865c1f44fdd31e06" "ML_STAR:{BD0D210B-0816-4C86-A903-D6B2DF73F78B}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._BD0D210B_0816_4C86_A903_D6B2DF73F78B("2869a165_e4a2_4a1a_865c1f44fdd31e06"); // Head96TipPickUp
}
// }} ""
// {{{ 5 1 0 "2ffec918_1243_4af2_9822d4ae2c209986" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
COMMON96HEADSUBMETHODS::Eject96HeadTipsAndShake(ML_STAR, 10, ML_STAR.clear_96_head_seq);
// }} ""
// {{ 6 1 0 "cdea730b_1062_4dfb_9bfd1ba7d525c564" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("--------------------------------------------------------------------------------------------------------------------------\nMove tips form handoff to offset support\n--------------------------------------------------------------------------------------------------------------------------"));
// }} ""
// {{ 7 1 0 "638fbf37_2572_45d9_9aec76ffbd27813f" "ML_STAR:{BD0D210B-0816-4C86-A903-D6B2DF73F78B}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._BD0D210B_0816_4C86_A903_D6B2DF73F78B("638fbf37_2572_45d9_9aec76ffbd27813f"); // Head96TipPickUp
}
// }} ""
// {{ 8 1 0 "d631fe95_91b3_43af_a214a93a5b9d832a" "ML_STAR:{2880E77A-3D6D-40FE-AF57-1BD1FE13960C}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._2880E77A_3D6D_40FE_AF57_1BD1FE13960C("d631fe95_91b3_43af_a214a93a5b9d832a"); // Head96TipEject
}
// }} ""
// {{ 9 1 0 "c5da4c8a_d741_4897_ae04058ace0063a7" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("--------------------------------------------------------------------------------------------------------------------------\nClean up\n--------------------------------------------------------------------------------------------------------------------------"));
// }} ""
// {{{ 10 1 0 "9dc6505f_f695_49c9_92982dc5bca2e88d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
COMMON96HEADSUBMETHODS::_ExitLibrary();
TIP_HANDLING_WITH_96_HEAD::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=djross$$valid=0$$time=2022-11-07 09:50$$checksum=0d12838d$$length=085$$