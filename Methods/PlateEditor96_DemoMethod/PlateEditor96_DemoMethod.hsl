 namespace _Method { #include "PlateEditor96\\PlateEditor96.hs_" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "PlateEditor96\\HSL_XLS_Converter.hsl" } 
#include "PlateEditor96_DemoMethod.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
sequence my_ouput_sequence;
sequence barcodes;
sequence If_Not_Used_Just_Type_Whatever;
global device ML_STAR ("PlateEditor96_DemoMethod.lay", "ML_STAR", hslTrue);
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
PLATEEDITOR96::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "86367f20_aaf3_4d9d_a7c602a06c2f4383" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 2 1 0 "edfcb010_ea4f_49ed_a430954847911b65" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 3 1 0 "4d6091bf_e312_4beb_92b110e4dbc72d44" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEEDITOR96::EditPlate96(my_ouput_sequence, ML_STAR.myPlate);
// }} ""
// {{{ 4 1 0 "cf85c417_011e_4c86_8bf312f3941400aa" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(my_ouput_sequence);
// }} ""
// {{ 5 1 0 "edfcb010_ea4f_49ed_a430954847911b65" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 6 1 0 "e5bbec01_e200_4ad3_89909cc855d1f2f5" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 7 1 0 "8446be4e_7098_45a1_b813fe37dfd4338c" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEEDITOR96::EdiPlate96_custom(my_ouput_sequence, ML_STAR.myPlate, Translate("Select your wells"), 0, If_Not_Used_Just_Type_Whatever, ML_STAR.myPreselectedWells, 1);
// }} ""
// {{{ 8 1 0 "2c845720_09a2_434c_ae8026884f5071a0" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(my_ouput_sequence);
// }} ""
// {{ 9 1 0 "e5bbec01_e200_4ad3_89909cc855d1f2f5" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 10 1 0 "f986f77d_795d_4e9e_b9899f3ce4ad648e" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 11 1 0 "da2bd163_1e84_46c4_9fe3d83c29c6c9d0" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEEDITOR96::EdiPlate96_custom(my_ouput_sequence, ML_STAR.myPlate, Translate("Select your wells"), 15, ML_STAR.myForbiddenWells, If_Not_Used_Just_Type_Whatever, 1);
// }} ""
// {{{ 12 1 0 "8ea283a7_e7b8_416b_b580eb833a7eeb28" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(my_ouput_sequence);
// }} ""
// {{ 13 1 0 "f986f77d_795d_4e9e_b9899f3ce4ad648e" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 14 1 0 "dcf07f1b_e070_4ceb_bb543b077d8874df" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 15 1 0 "775a60a4_6c66_497d_8894ad00dc4132ed" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEEDITOR96::EditPlate96_with_BarcodesFromCSV(my_ouput_sequence, ML_STAR.myPlate, Translate("Select wells"), 0, If_Not_Used_Just_Type_Whatever, barcodes, 1, Translate("C:\\aaa.txt"), 2, 3, Translate(";"));
// }} ""
// {{{ 16 1 0 "f7b76a82_b149_46bd_8ec1d7e38531814c" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(my_ouput_sequence);
// }} ""
// {{ 17 1 0 "dcf07f1b_e070_4ceb_bb543b077d8874df" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 18 1 0 "fa858e54_7c0f_4cb0_b82e44de5037628a" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 19 1 0 "5dc346c4_eb89_4e69_ac09928226184a78" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEEDITOR96::EditPlate96_with_BarcodesFromExcelAccess(my_ouput_sequence, ML_STAR.myPlate, Translate("Select wells"), 0, ML_STAR.myForbiddenWells, barcodes, 1, Translate("C:\\myfile.xlsx"), Translate("Well"), Translate("Sample"), Translate("Data"));
// }} ""
// {{{ 20 1 0 "4e79fe03_816e_46e7_84e3d4216b750140" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(my_ouput_sequence);
// }} ""
// {{ 21 1 0 "fa858e54_7c0f_4cb0_b82e44de5037628a" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 22 1 0 "e8ef4ab5_d021_4e69_85b02b8ccca76dd4" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 23 1 0 "019c5ad8_627e_487a_b37531df902b7ac1" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEEDITOR96::EditPlate96_with_BarcodesFromExcelAccess(my_ouput_sequence, ML_STAR.myPlate, Translate("Select wells"), 0, If_Not_Used_Just_Type_Whatever, barcodes, 1, Translate("C:\\myDB.accdb"), Translate("Well"), Translate("BC"), Translate("myTable"));
// }} ""
// {{{ 24 1 0 "ff58ef58_c73c_4553_99a73eb602258bb9" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTraceSequence(my_ouput_sequence);
// }} ""
// {{ 25 1 0 "e8ef4ab5_d021_4e69_85b02b8ccca76dd4" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 2 "AutoExitBlock" ""
PLATEEDITOR96::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Cuevas_A$$valid=0$$time=2013-10-15 22:03$$checksum=d1007473$$length=087$$