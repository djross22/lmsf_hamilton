
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 7/9/2019 2:14:26 PM

#pragma once
#ifndef HSL_RUNTIME
namespace NIST_DEVICE_CONTROLLERS {
function _InitLibrary() { }
function _ExitLibrary() { }
function CheckCPACTemperature( variable i_int_DeviceID, variable i_flt_ExpectedTemp ) void { }
function CheckHHSTemperature( variable i_int_HHS_DeviceID, variable i_flt_ExpectedTemp, variable i_flt_TempTolerance ) void { }
function DoorControlODTC( variable i_int_DeviceID, variable bool_OpenDoor ) variable {  return (0); }
function GetHHSShakingSpeed( variable i_int_HHS_DeviceID ) void { }
function GetHHSTemperature( variable i_int_HHS_DeviceID ) void { }
function InitCPAC(  ) void { }
function InitHHS( device & ML_STAR, variable i_bool_ConnectUSB, variable & o_int_HHS_DeviceID ) void { }
function InitODTC( variable i_str_ODTC_IPAddress, variable & o_int_DeviceID ) variable {  return (0); }
function RunScriptODTC( variable i_int_DeviceID, variable i_str_ScriptPath ) variable {  return (0); }
function SetCPACTemperature( variable i_int_CPAC_Number, variable i_flt_CPAC_Temp ) void { }
function Shake( variable i_int_HHS_DeviceID, variable i_int_Speed, variable i_int_ShakingDuration ) void { }
function StartScriptODTC( variable i_int_DeviceID, variable i_str_ScriptPath, variable & o_int_ScriptTime, variable & o_int_RunID ) variable {  return (0); }
function TerminateCPAC(  ) void { }
function TerminateHHSs(  ) void { }
function TerminateODTC( variable i_int_DeviceID ) void { }
function WaitForScriptODTC( variable i_int_DeviceID, variable i_int_ScriptTime, variable i_int_RunID ) variable {  return (0); }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Smith_Ma$$valid=0$$time=2019-07-09 14:14$$checksum=d3f989f4$$length=085$$