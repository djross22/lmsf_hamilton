
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 5/23/2019 11:05:43 AM

#pragma once
#ifndef HSL_RUNTIME
namespace NIST_NANO_PROCESSES {
function _InitLibrary() { }
function _ExitLibrary() { }
function Add_Ethanol_Variable( device & ML_STAR, variable var_NumberOfSamples, sequence & seq_TipsToUse1000ul, sequence & seq_AspirationPosition, sequence seq_DispensePosition, variable var_LiquidClassEthanol, variable & var_TrackingEthanolVolume, variable var_VolEtOH ) void { }
function Add_ReagentFromTub( device & ML_STAR, variable var_NumberOfSamples, sequence seq_AspirationPosition, sequence seq_DispensePosition, sequence & seq_TipsToUse300ul, variable var_VolPerSampleWell, variable var_LiquidClass300F, variable var_RetractHeight, variable var_MixCycles, variable var_MixVolume, variable str_ProcessName, variable str_TrackingFilePath, variable bool_UseTrackingFile ) void { }
function Add_ReagentFromVial( device & ML_STAR, variable var_NumberOfSamples, sequence seq_AspirationPosition, sequence seq_DispensePosition, sequence & seq_TipsToUse50ul, variable var_VolPerSampleWell, variable var_LiquidClass50F, variable var_RetractHeight, variable var_MixCycles, variable var_MixVolume, variable str_ProcessName, variable str_TrackingFilePath, variable bool_UseTrackingFile ) void { }
function AliquotBeadsToBeadPlate( device & ML_STAR, sequence i_seq_BeadSource, sequence i_seq_BeadPlate, sequence & i_seq_HighVolumeTips, variable i_flt_AliquotVolume, variable i_int_SampleCount ) void { }
function Incubate( variable i_int_IncubationTime, variable i_bool_StoppableTimer, variable i_str_TimerDescription ) void { }
function IncubateOnODTC( device & ML_STAR, sequence i_seq_PlateSource, sequence i_seq_PlateSourceWithLid, sequence i_seq_ODTC, sequence i_seq_LidPark, sequence i_seq_CORE_Grip, variable i_int_DeviceID_ODTC, variable i_int_IncubationTime, variable i_str_IncubationDescription, variable i_bool_TestingMode, variable i_bool_ComfortLid ) void { }
function IncubateOnODTC_OneProtocol( device & ML_STAR, sequence i_seq_PlateSource, sequence i_seq_PlateSourceWithLid, sequence i_seq_ODTC, sequence i_seq_LidPark, sequence i_seq_CORE_Grip, variable i_int_DeviceID_ODTC, variable i_str_IncubationDescription, variable i_str_IncubationProtocol, variable i_bool_ComfortLid ) void { }
function IncubateOnODTC_TwoProtocolsAndTimer( device & ML_STAR, sequence i_seq_PlateSource, sequence i_seq_PlateSourceWithLid, sequence i_seq_ODTC, sequence i_seq_LidPark, sequence i_seq_CORE_Grip, variable i_int_DeviceID_ODTC, variable i_int_IncubationTime, variable i_str_IncubationDescription, variable i_str_IncubationProtocol1, variable i_str_IncubationProtocol2, variable i_bool_TestingMode, variable i_bool_ComfortLid ) void { }
function IncubateOnODTC_WithProtocols( device & ML_STAR, sequence i_seq_PlateSource, sequence i_seq_PlateSourceWithLid, sequence i_seq_ODTC, sequence i_seq_LidPark, sequence i_seq_CORE_Grip, variable i_int_DeviceID_ODTC, variable i_int_IncubationTime, variable i_str_IncubationDescription, variable i_str_IncubationProtocol, variable i_str_StartEndProtocol, variable i_bool_TestingMode, variable i_bool_ComfortLid ) void { }
function MixBeads( device & ML_STAR, sequence & i_seq_BeadSource, sequence & i_seq_HighVolumeTips ) void { }
function MoveLeftArmOutOfWay( device & ML_STAR ) void { }
function MoveRightArmOutOfWay( device & ML_STAR ) void { }
function MultiDispense_Reagent( device & ML_STAR, variable var_NumberOfSamples, sequence & seq_TipsToUse1000ul, sequence & seq_AspirationPosition, sequence seq_DispensePosition, variable var_LiquidClass, variable & var_TrackingReagentlVolume, variable var_VolReagent, variable var_DispenseHeight ) void { }
function ScanPlate( device & ML_STAR, sequence i_seq_SourcePlate, sequence i_seq_CORE_Grips, variable i_int_TrackToScan, variable i_bool_UseAutoLoad, variable & o_str_BarcodeScanned ) void { }
function ScanPlate2( device & ML_STAR, sequence i_seq_SourcePlate, sequence i_seq_CORE_Grips, variable i_int_TrackToScan, variable i_bool_EjectGripper, variable i_bool_UseAutoLoad, variable & o_str_BarcodeScanned ) void { }
function Transfer_Adapters_PlateToPlate( device & ML_STAR, variable var_SampleCount, sequence & seq_TipsToUse, sequence seq_AspirationPosition, sequence seq_DispensePosition, variable var_VolumeToTransfer, variable var_LiquidClass, variable var_AspirationHeight, variable var_DispenseHeight, variable str_ProcessName, variable str_TrackingFilePath, variable bool_UseTrackingFile ) void { }
function TransportPlate_CORE_Grip( device & ML_STAR, sequence i_seq_SourcePosition, sequence i_seq_DestPosition, sequence & i_seq_CORE_GripSource, variable i_flt_X_Offset, variable i_flt_PressDistance, variable i_bool_EjectGripper, variable i_int_TransportType, variable i_bool_CheckPlate ) void { }
function TransportPlate_iSWAP( device & ML_STAR, sequence i_seq_SourcePlate, sequence i_seq_DestPlate, variable i_bool_GripLeft ) void { }
function Volume_Check( device & ML_STAR, sequence i_seq_Trough, variable i_Liquid_Class, variable & o_Volume_Detected ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Hamilton$$valid=0$$time=2019-05-23 11:05$$checksum=c1f2cbc0$$length=085$$