
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 7/9/2019 2:14:26 PM

#pragma once
#ifndef HSL_RUNTIME
namespace NIST_TRUSEQNANO_PROCESSES {
function _InitLibrary() { }
function _ExitLibrary() { }
function Add_AdaptersViaDAP( device & ML_STAR, sequence & seq_Tips50ul, sequence & seq_DAP, sequence & seq_ALP, variable & arr_Index1Positions[], variable & arr_Index2Positions[], variable & arr_ALPpositions[] ) void { }
function Add_AdaptersViaVials( device & ML_STAR, sequence & seq_Tips50, sequence & seq_Adapters, sequence & seq_ALP, variable var_NumberOfIndexTypes, variable & arr_Index1Positions[], variable & arr_Index2Positions[], variable & arr_ALPpositions[] ) void { }
function Add_AmpureSingle( device & ML_STAR, sequence & seq_AmpureBeads, sequence & seq_Destination, sequence & seq_Tips, variable var_NumberSamples, variable var_BeadVolumePerWell, variable var_LLD_On, variable var_BeadStep ) void { }
function Add_EPM( device & ML_STAR, sequence & seq_TipsToUse, sequence & seq_AspirationPosition, sequence & seq_DispensePosition, variable var_VolumeToTransfer, variable var_AspirationHeight, variable var_DispenseHeight ) void { }
function Add_Ethanol( device & ML_STAR, variable var_NumberOfSamples, sequence & seq_TipsToUse1000ul, sequence & seq_AspirationPosition, sequence & seq_DispensePosition, variable var_LiquidClassEthanol, variable & var_TrackingEthanolVolume, variable var_SkipAllTimers, variable var_str_EmailAdress ) void { }
function Add_RSB( device & ML_STAR, sequence & seq_AspirationPosition, sequence & seq_DispensePosition, sequence & seq_TipsToUse, variable var_VolPerSampleWell, variable var_TouchOff, variable var_RetractHeight ) void { }
function Add_ReagentFromVial( device & ML_STAR, variable var_NumberOfSamples, sequence & seq_AspirationPosition, sequence & seq_DispensePosition, sequence & seq_TipsToUse50ul, variable var_VolPerSampleWell, variable var_LiquidClass50F, variable var_RetractHeight ) void { }
function MoveHSP( device & ML_STAR, sequence & seq_HSP_StartingPosition, sequence & seq_HSP_Destination, variable var_TrackToReadBC, variable var_ParkAfterMove, variable var_TransportDevice, sequence & seq_CORE_Grippers ) void { }
function MoveMIDI( device & ML_STAR, sequence & seq_MIDI_Source, sequence & seq_MIDI_Destination, variable var_TrackToReadBC, variable var_Side, variable var_ParkAfterMove, variable var_TransportDevice, sequence & seq_CORE_Grippers ) void { }
function Normalize( device & ML_STAR, variable var_NormalizationFile, sequence & seq_Buffer, sequence & seq_SourcePlate, sequence & seq_DestinationPlate, sequence & seq_SampleTips, sequence & seq_BufferTips, variable var_LC_Buffer, variable var_LC_Sample, sequence & seq_PlateSeqForJustBuffer, sequence & seq_PoolingPlate ) void { }
function Pool( device & ML_STAR, sequence & seq_NormPlate, sequence & seq_PoolingPlate, sequence & seq_Tips50ul, variable var_LC_Pooling, variable var_cLLDSetting, variable var_Height, variable & var_NormalizationFile ) void { }
function Read_NormFile( device & ML_STAR, variable var_NormalizationFile, variable & var_TotalBufferVolume, variable & var_NumberOfSamples ) void { }
function Remove_ResidualEtOH( device & ML_STAR, sequence & seq_TipsToUse50ul, sequence & seq_AspirationPosition ) void { }
function Transfer_PlateToPlate( device & ML_STAR, sequence & seq_TipsToUse, sequence & seq_AspirationPosition, sequence & seq_DispensePosition, variable var_VolumeToTransfer, variable var_LiquidClass, variable var_AspirationHeight, variable var_DispenseHeight ) void { }
function Transfer_PlatetoWaste( device & ML_STAR, sequence & seq_TipsToUse300ul, sequence & seq_AspirationPosition, sequence & seq_DispensePosition, variable var_VolumeToTransfer, variable var_LiquidClass ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=Smith_Ma$$valid=0$$time=2019-07-09 14:14$$checksum=ea8f79e4$$length=085$$