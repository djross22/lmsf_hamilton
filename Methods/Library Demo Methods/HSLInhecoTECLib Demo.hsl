 namespace _Method { #include "HSLInhecoTEC\\HSLInhecoTECLib.hsl" } 
 namespace _Method { #include "ASWStandard\\TraceLevel\\TraceLevel.hsl" } 
 namespace _Method { #include "ASWStandard\\ASWGlobal\\ASWGlobal.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable _strMethodName;
variable intLoopCounterDevices;
variable intDeviceType;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
private variable blnSuccess;
private variable strErrorCode;
private variable intControllerID;
private variable arrintCPAC_UltraflatIDs[];
private variable arrintTeleshakeIDs[];
private variable arrintCPACIDs[];
private variable arrintThermoshakeIDs[];
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
::RegisterAbortHandler( "OnAbort");
// }} ""
_strMethodName = GetMethodFileName();
// {{ 2 1 0 "17633708_7de9_4b18_a2f87e00205193c9" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
intControllerID = 0;
// }} ""
// {{ 3 1 0 "6ed6d41e_9f45_4e32_a17bb22870da3443" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arrintCPACIDs.SetSize(0);
// }} ""
// {{ 4 1 0 "f246eed4_345d_451e_8a26a05c605ae388" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arrintCPAC_UltraflatIDs.SetSize(0);
// }} ""
// {{ 5 1 0 "81896267_6713_474a_a7c932cb99300dbf" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arrintTeleshakeIDs.SetSize(0);
// }} ""
// {{ 6 1 0 "748dd25c_8b76_4447_9a0576876509c207" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
arrintThermoshakeIDs.SetSize(0);
// }} ""
// {{{ 7 1 0 "b0d78cfd_9373_47bc_ac8610dd43b2bf32" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TRACELEVEL::SetTraceLevel(TRACE_LEVEL_RELEASE);
// }} ""
// {{{ 8 1 0 "8b16bba0_d8e8_42ab_b04166cbc73a3053" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnSuccess = HSLInhecoTECLib::Initialize(intControllerID, ASWGLOBAL::BOOL::FALSE, strErrorCode);
// }} ""
// {{{ 9 1 0 "983969a9_467a_487a_97a4bbe53ad16760" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_HandleReturnValue(blnSuccess, "HSLInhecoTECLib::Initialize");
// }} ""
// {{ 10 1 0 "bcb63474_93b1_4414_a6cdd0f03064f123" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 11 1 0 "00c7318d_a1d2_4a7c_bf09ed50802a752a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(intLoopCounterDevices = 0; intLoopCounterDevices < HSLInhecoTECLib::UPPERDEVICEBOUND;)
{
intLoopCounterDevices = intLoopCounterDevices + 1;
// }} ""
// {{{ 12 1 0 "a5f95c2f_1329_457f_8debc074937d0f0a" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnSuccess = HSLInhecoTECLib::GetDeviceType(intControllerID, intLoopCounterDevices, intDeviceType, strErrorCode);
// }} ""
// {{{ 13 1 0 "9beb92ce_2dfa_4f6f_84d1aec4a7f22252" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_HandleReturnValue(blnSuccess, "HSLInhecoTECLib::GetDeviceType");
// }} ""
// {{ 14 1 0 "fecfe9ec_2931_4a5f_b0dee06027968cf0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intDeviceType == HSLInhecoTECLib::DEVICE_TYPE::CPAC)
{
// }} ""
// {{ 15 1 0 "08b01062_fa78_43e9_bca62ae409fcfddf" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arrintCPACIDs.AddAsLast(intLoopCounterDevices);
// }} ""
// {{ 16 1 0 "fecfe9ec_2931_4a5f_b0dee06027968cf0" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 17 1 0 "0267d3c9_b17d_45f1_89d206e0058975e6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intDeviceType == HSLInhecoTECLib::DEVICE_TYPE::CPAC_Ultraflat)
{
// }} ""
// {{ 18 1 0 "bb4bea8e_dc74_43ba_8977fe49b859a729" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arrintCPAC_UltraflatIDs.AddAsLast(intLoopCounterDevices);
// }} ""
// {{ 19 1 0 "0267d3c9_b17d_45f1_89d206e0058975e6" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 20 1 0 "4b7d53c4_4aa2_4ff8_ae30f7f1703277d9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intDeviceType == HSLInhecoTECLib::DEVICE_TYPE::Teleshake)
{
// }} ""
// {{ 21 1 0 "a774eba9_9c2d_4367_8c28defde6bfb94d" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arrintTeleshakeIDs.AddAsLast(intLoopCounterDevices);
// }} ""
// {{ 22 1 0 "4b7d53c4_4aa2_4ff8_ae30f7f1703277d9" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 23 1 0 "afe82ee7_de1d_420c_ac372faf55a38e09" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (intDeviceType == HSLInhecoTECLib::DEVICE_TYPE::Thermoshake)
{
// }} ""
// {{ 24 1 0 "0fb6ec55_08bf_4187_9350c4e69672d250" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
arrintThermoshakeIDs.AddAsLast(intLoopCounterDevices);
// }} ""
// {{ 25 1 0 "afe82ee7_de1d_420c_ac372faf55a38e09" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 26 1 0 "00c7318d_a1d2_4a7c_bf09ed50802a752a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 27 1 0 "a335fc8e_5b3d_4e13_96038858d09f478f" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
blnSuccess = HSLInhecoTECLib::Terminate(ASWGLOBAL::BOOL::FALSE);
// }} ""
// {{{ 28 1 0 "d0e176c5_d341_482e_bc04c038fc752fc6" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
_HandleReturnValue(blnSuccess, "HSLInhecoTECLib::Terminate");
// }} ""
// {{ 2 "AutoExitBlock" ""
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=labuse1p$$valid=0$$time=2013-09-10 11:33$$checksum=d2e511ff$$length=087$$