//  ------------------------------------------------------------------------------------
//  Hamilton Company Software Product
//  File: ML_STAR_OemInterfaceEnu.hs_
//
//  This is a part of the module HxStarOemInterface.
//  Language dependant part of the ML_STAR Vector OEM Inferface method.
//
//  Language: enu (English United States). 
//
//  File creation date:  2004-10-13 by cjoerg
//  Last revision date:  2004-10-14 by cjoerg
//
//  Copyright (c) 2004 by Hamilton Bonaduz AG.
//
//
//  Modification History
//  --------------------
//  1.01  2004-10-14 by cjoerg   IDS::traceSourc changed to "ML_STAR OEM Interface".
//  1.00  2004-10-13 by cjoerg   Get file from module HxStarSettings
//  ------------------------------------------------------------------------------------


function StringTable()
{
	Insert(IDE::noError,								"No error."											);

	Insert(IDE::fileOpenStepListFailed,			"File open (table StepList) failed."		);
	Insert(IDE::fileReadStepListFailed,			"File read (table StepList) failed."		);
	Insert(IDE::fileOpenPositionDataFailed,	"File open (table PositionData) failed."	);
	Insert(IDE::fileReadPositionDataFailed,	"File read (table PositionData) failed."	);
	Insert(IDE::fileOpenVolumeDataFailed,		"File open (table VolumeData) failed."		);
	Insert(IDE::fileReadVolumeDataFailed,		"File read (table VolumeData) failed."		);
	Insert(IDE::fileOpenResultListFailed,		"File open (table ResultList) failed."		);
	Insert(IDE::fileWriteResultListFailed,		"File write (table ResultList) failed."	);
	Insert(IDE::synchronisationFailed,			"Syncronisation failed (state waiting start/end).");
	Insert(IDE::noErrorInformation,				"Method aborted, but no error-information available. Step or user has aborted.");

	Insert(IDE::unknown,								"An unknown error was encountered."			);
	Insert(IDE::unknownCommandID,					"Unknown CommandID readed."					);
	Insert(IDE::unexpectedResultData,			"Unexpected result data detected."			);
	Insert(IDE::fileCloseFailed,					"File close failed."								);
	Insert(IDE::mlStarCommandFatal,				"Execution of a ML_STAR command ends fatal.");
	
	Insert(IDS::traceSource,						"ML_STAR OEM Interface"							);
	Insert(IDS::commandExecute,					"Execute command"									);
	Insert(IDS::commaDel,							", "													);
	Insert(IDS::stepID,								"StepID="											);
	Insert(IDS::commandID,							"CommandID="										);
	Insert(IDS::commandResult,						"CommandResult="									);
	Insert(IDS::waiting,								"Waiting for event continue"					);
	Insert(IDS::abort_,								"Abort run			"								);
}
// $$author=wbarmettler$$valid=1$$time=2017-03-14 13:14$$checksum=9378378d$$length=090$$