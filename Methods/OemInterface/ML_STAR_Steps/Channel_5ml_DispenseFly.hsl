//  ------------------------------------------------------------------------------------
//  Hamilton Company Software Product
//  Copyright (c) 2009 by Hamilton Bonaduz AG.
//  ------------------------------------------------------------------------------------
//
//  Modification History
//  --------------------
//  1.00  2009-11-23/cjoerg    Library created.
//  ------------------------------------------------------------------------------------
#pragma once

#ifndef INCLUDED_FROM_METHOD
	#ifndef HSL_RUNTIME
		device ML_STAR;
	#endif
#endif

#ifdef _DEBUG_STAR_STEPPARAMS
	#ifndef __MlStarStepsUtilLib_hsl__
	#include "MlStarStepsUtilLib.hsl"
	#endif
#endif


function Channel_5ml_DispenseFly_001(
	device   ML_STAR,
	sequence& dispenseSequence,
	variable volumeArray[],
	variable channelVariable,
	variable liquidClass,
	variable excludedLabwarePositions,
	variable sequenceCounting,
	variable dispenseOnTheFlyMode,
	variable dispenseDirection,
	variable labwareSurfaceDistance,
	variable XspeedDuringDispense,
	variable XstartOffset,
	variable XaccelerationDistance) variable[]
{
	variable rc[];

	#ifdef _DEBUG_STAR_STEPPARAMS
	{
		variable stepName;
		stepName = GetFunctionName();
		DEBUG::TraceStepParamDevice(stepName, "device", ML_STAR);
		DEBUG::TraceStepParamSequence(stepName, "dispenseSequence", dispenseSequence);
		DEBUG::TraceStepParamVariableArray(stepName, "dispenseVolumes", volumeArray);
		DEBUG::TraceStepParamVariable(stepName, "channelVariable", channelVariable);
		DEBUG::TraceStepParamVariable(stepName, "liquidClass", liquidClass);
		DEBUG::TraceStepParamVariable(stepName, "excludedLabwarePositions", excludedLabwarePositions);
		DEBUG::TraceStepParamVariable(stepName, "sequenceCounting", sequenceCounting);
		DEBUG::TraceStepParamVariable(stepName, "dispenseOnTheFlyMode", dispenseOnTheFlyMode);
		DEBUG::TraceStepParamVariable(stepName, "dispenseDirection", dispenseDirection);
		DEBUG::TraceStepParamVariable(stepName, "labwareSurfaceDistance", labwareSurfaceDistance);
		DEBUG::TraceStepParamVariable(stepName, "XspeedDuringDispense", XspeedDuringDispense);
		DEBUG::TraceStepParamVariable(stepName, "XstartOffset", XstartOffset);
		DEBUG::TraceStepParamVariable(stepName, "XaccelerationDistance", XaccelerationDistance);
	}
	#endif

	/////////////////////////////////////////////////////////////////////
	//  Important: Before edit the low level step be shure that the
	//             instrument configuration is set to 16 channels!
	/////////////////////////////////////////////////////////////////////
	// Abort must be invisible in the error settings
	rc = ML_STAR._4AB53926_A1E2_48ff_A8BA_32AED2C6E63E( "a9fa1034_cde8_463e_8feb6ebcae16eec7" ); // XLDispenseFly
	return( rc );
}	

// $$author=wbarmettler$$valid=1$$time=2017-03-14 13:14$$checksum=c2421b2b$$length=088$$