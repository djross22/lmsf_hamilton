//  ------------------------------------------------------------------------------------
//  Hamilton Company Software Product
//  Copyright (c) 2009 by Hamilton Bonaduz AG.
//  ------------------------------------------------------------------------------------
//
//  Modification History
//  --------------------
//  1.00  2004-10-18/cjoerg    Library created.
//  1.01  2005-07-28/cjoerg    Added debug traces for step parameters.
//  1.10  2006-10-23/cjoerg    Extended with parameters 'z-speed' and 'plate press on distance'.
//  1.20  2008-02-12/cjoerg    Edited step with SW 4.2. Updated error settings for new/changed errors.
//                             - Added parameters xAcceleration and checkPlate, incremented function no.
//  1.30  2009-11-19/cjoerg    Edited step with SW 4.3. Updated error settings for new/changed errors.
//  ------------------------------------------------------------------------------------
#pragma once

#ifndef INCLUDED_FROM_METHOD
	#ifndef HSL_RUNTIME
		device ML_STAR;
	#endif
#endif

#ifdef _DEBUG_STAR_STEPPARAMS
	#ifndef __MlStarStepsUtilLib_hsl__
	#include "MlStarStepsUtilLib.hsl"
	#endif
#endif


function CoReGrip_PlacePlate_003(
	device   ML_STAR,
	sequence& plateSequence,
	sequence& lidSequence,
	variable sequenceCounting,
	variable transportMode,
	variable ejectToolWhenFinish,
	variable Zspeed,
	variable platePressOnDistance,
   variable xAcceleration,
   variable checkPlate) variable[]
{
	variable rc[];

	#ifdef _DEBUG_STAR_STEPPARAMS
	{
		variable stepName;
		stepName = GetFunctionName();
		DEBUG::TraceStepParamDevice(stepName, "device", ML_STAR);
		DEBUG::TraceStepParamSequence(stepName, "plateSequence", plateSequence);
		DEBUG::TraceStepParamSequence(stepName, "lidSequence", lidSequence);
		DEBUG::TraceStepParamVariable(stepName, "sequenceCounting", sequenceCounting);
		DEBUG::TraceStepParamVariable(stepName, "transportMode", transportMode);
		DEBUG::TraceStepParamVariable(stepName, "ejectToolWhenFinish", ejectToolWhenFinish);
		DEBUG::TraceStepParamVariable(stepName, "Zspeed", Zspeed);
		DEBUG::TraceStepParamVariable(stepName, "platePressOnDistance", platePressOnDistance);
		DEBUG::TraceStepParamVariable(stepName, "xAcceleration", xAcceleration);
		DEBUG::TraceStepParamVariable(stepName, "checkPlate", checkPlate);
	}
	#endif

	// Abort must be invisible in the error settings
	rc = ML_STAR._9DF3DD4B_3B5E_4750_8989_04458D1B134B( "faa4a9e3_a718_447e_a6df77e1edbfef90" ); // ZSwapPlacePlate
	return( rc );
}	

// $$author=wbarmettler$$valid=1$$time=2017-03-14 13:14$$checksum=4467edc8$$length=088$$