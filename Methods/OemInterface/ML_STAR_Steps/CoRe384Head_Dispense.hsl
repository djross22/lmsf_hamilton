//  ------------------------------------------------------------------------------------
//  Hamilton Company Software Product
//  Copyright (c) 2009 by Hamilton Bonaduz AG.
//  ------------------------------------------------------------------------------------
//
//  Modification History
//  --------------------
//  1.00  2006-10-24/cjoerg    Library created.
//  1.20  2008-02-11/cjoerg    Edited step with SW 4.2. Updated error settings for new/changed errors.
//  1.30  2009-11-19/cjoerg    Edited step with SW 4.3. Updated error settings for new/changed errors.
//                             Added new parameter 'airTransportRetractDist'
//                             Incremented step function name counter to _002 because of changed parameters
//  ------------------------------------------------------------------------------------
#pragma once

#ifndef INCLUDED_FROM_METHOD
	#ifndef HSL_RUNTIME
		device ML_STAR;
	#endif
#endif

#ifdef _DEBUG_STAR_STEPPARAMS
	#ifndef __MlStarStepsUtilLib_hsl__
	#include "MlStarStepsUtilLib.hsl"
	#endif
#endif


function CoRe384Head_Dispense_002(
	device   ML_STAR,
	sequence& dispenseSequence,
	variable liquidClass,
	variable sequenceCounting,
	variable dispenseMode,
	variable capacitiveLLD,
	variable liquidFollowing,
	variable mixCycles,
	variable zMoveAfterStep,
	variable sideTouch,
	variable dispenseVolume,
	variable submergeDepth,
	variable liquidHeight,
	variable mixPosition,
	variable mixVolume,
	variable airTransportRetractDist) variable[]
{
	variable rc[];

	#ifdef _DEBUG_STAR_STEPPARAMS
	{
		variable stepName;
		stepName = GetFunctionName();
		DEBUG::TraceStepParamDevice(stepName, "device", ML_STAR);
		DEBUG::TraceStepParamSequence(stepName, "dispenseSequence", dispenseSequence);
		DEBUG::TraceStepParamVariable(stepName, "liquidClass", liquidClass);
		DEBUG::TraceStepParamVariable(stepName, "sequenceCounting", sequenceCounting);
		DEBUG::TraceStepParamVariable(stepName, "dispenseMode", dispenseMode);
		DEBUG::TraceStepParamVariable(stepName, "capacitiveLLD", capacitiveLLD);
		DEBUG::TraceStepParamVariable(stepName, "liquidFollowing", liquidFollowing);
		DEBUG::TraceStepParamVariable(stepName, "mixCycles", mixCycles);
		DEBUG::TraceStepParamVariable(stepName, "zMoveAfterStep", zMoveAfterStep);
		DEBUG::TraceStepParamVariable(stepName, "sideTouch", sideTouch);
		DEBUG::TraceStepParamVariable(stepName, "dispenseVolume", dispenseVolume);
		DEBUG::TraceStepParamVariable(stepName, "submergeDepth", submergeDepth);
		DEBUG::TraceStepParamVariable(stepName, "liquidHeight", liquidHeight);
		DEBUG::TraceStepParamVariable(stepName, "mixPosition", mixPosition);
		DEBUG::TraceStepParamVariable(stepName, "mixVolume", mixVolume);
		DEBUG::TraceStepParamVariable(stepName, "airTransportRetractDist", airTransportRetractDist);
	}
	#endif

	// Abort must be invisible in the error settings
	rc = ML_STAR._A755BA24_6FEB_4031_A672_BF3D7FC150C5( "6aeb6af7_44d0_481d_bfec903b6e53c390" ); // Head384Dispense
	return( rc );
}	

// $$author=wbarmettler$$valid=1$$time=2017-03-14 13:14$$checksum=f5751abb$$length=088$$