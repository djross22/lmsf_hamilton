//  ------------------------------------------------------------------------------------
//  Hamilton Company Software Product
//  Copyright (c) 2009 by Hamilton Bonaduz AG.
//  ------------------------------------------------------------------------------------
//
//  Modification History
//  --------------------
//  1.00  2006-10-24/cjoerg    Library created.
//  1.20  2008-02-12/cjoerg    Edited step with SW 4.2. Updated error settings for new/changed errors.
//  1.30  2009-11-19/cjoerg    Edited step with SW 4.3. Updated error settings for new/changed errors.
//  ------------------------------------------------------------------------------------

#pragma once

#ifndef INCLUDED_FROM_METHOD
	#ifndef HSL_RUNTIME
		device ML_STAR;
	#endif
#endif

#ifdef _DEBUG_STAR_STEPPARAMS
	#ifndef __MlStarStepsUtilLib_hsl__
	#include "MlStarStepsUtilLib.hsl"
	#endif
#endif


function Nano_DispenseFly_001(
	device   ML_STAR,
	sequence& dispenseSequence,
	variable volumeArray[],
	variable channelVariable,
	variable sequenceCounting,
	variable dispenseOnTheFlyMode,
	variable channelID,
	variable dispensationPressure,
	variable dispenseDirection,
	variable dispenseHeight,
	variable XspeedDuringDispense,
	variable XaccelerationDistance) variable[]
{
	variable rc[];

	#ifdef _DEBUG_STAR_STEPPARAMS
	{
		variable stepName;
		stepName = GetFunctionName();
		DEBUG::TraceStepParamDevice(stepName, "device", ML_STAR);
		DEBUG::TraceStepParamSequence(stepName, "dispenseSequence", dispenseSequence);
		DEBUG::TraceStepParamVariableArray(stepName, "dispenseVolumes", volumeArray);
		DEBUG::TraceStepParamVariable(stepName, "channelVariable", channelVariable);
		DEBUG::TraceStepParamVariable(stepName, "sequenceCounting", sequenceCounting);
		DEBUG::TraceStepParamVariable(stepName, "dispenseOnTheFlyMode", dispenseOnTheFlyMode);
		DEBUG::TraceStepParamVariable(stepName, "channelID", channelID);
		DEBUG::TraceStepParamVariable(stepName, "dispensationPressure", dispensationPressure);
		DEBUG::TraceStepParamVariable(stepName, "dispenseDirection", dispenseDirection);
		DEBUG::TraceStepParamVariable(stepName, "dispenseHeight", dispenseHeight);
		DEBUG::TraceStepParamVariable(stepName, "XspeedDuringDispense", XspeedDuringDispense);
		DEBUG::TraceStepParamVariable(stepName, "XaccelerationDistance", XaccelerationDistance);
	}
	#endif

	// Abort must be invisible in the error settings
	rc = ML_STAR._3A29EAA5_87F5_4d3d_9567_B5707E6F39A5( "e45a393f_4b4e_4b62_96c39e1fa1520d89" ); // NanoDispenseFly
	return( rc );
}	

// $$author=wbarmettler$$valid=1$$time=2017-03-14 13:14$$checksum=8621f653$$length=088$$