 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "STAR Tools\\STAR Tip Tools.hs_" } 
 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_Device_Controllers.hs_" } 
 namespace _Method { #include "HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Prep.hs_" } 
 namespace _Method { #include "HSLMthLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "Common\\LMSF_Utilities.hs_" } 
 namespace _Method { #include "Common\\GSF-IMS.shared_submethods.hs_" } 
#include "RNA circuit plate growth and cytometry.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable bln_Global_SimulatorMode;
global device ML_STAR ("RNA circuit plate growth and cytometry.lay", "ML_STAR", hslTrue);
global device HxFan ("RNA circuit plate growth and cytometry.lay", "HxFan", hslTrue);
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
STAR_TIP_TOOLS::_InitLibrary();
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_DEVICE_CONTROLLERS::_InitLibrary();
NIST_TRUSEQNANO_PREP::_InitLibrary();
LMSF_UTILITIES::_InitLibrary();
GSF_IMS_SHARED_SUBMETHODS::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{{ 1 1 0 "d3470de1_a95d_4c82_8a708cbee5fa520d" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Global_SimulatorMode = HSLML_STAR::IsSimulatorMode(ML_STAR);
// }} ""
// {{{ 2 1 0 "5d8b454f_6e7c_486b_9f2fe67e1ce98ba4" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{{ 3 1 0 "fac9219d_1775_4be3_8a7f7c7b62b3f69d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
STAR_TIP_TOOLS::_ExitLibrary();
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_DEVICE_CONTROLLERS::_ExitLibrary();
NIST_TRUSEQNANO_PREP::_ExitLibrary();
LMSF_UTILITIES::_ExitLibrary();
GSF_IMS_SHARED_SUBMETHODS::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=djross$$valid=0$$time=2024-06-13 15:16$$checksum=40a396b7$$length=085$$