
// this ALWAYS GENERATED file contains the sub-method library header
// Generated at 12/16/2024 6:54:46 PM

#pragma once
#ifndef HSL_RUNTIME
namespace GSF_IMS_SHARED_SUBMETHODS {
function _InitLibrary() { }
function _ExitLibrary() { }
function add_reagent_replace_tips( sequence & asp_seq, sequence & disp_seq, variable p_vol, variable mix_cycles, variable mix_volume, sequence & tips, variable number_channels, device & STAR ) void { }
function add_reagent_reuse_tips( sequence & asp_seq, sequence & disp_seq, variable p_vol, variable pre_wet_tips, sequence & tips, variable number_channels, device & STAR ) void { }
function aspirate_w_err_handling( sequence & asp_seq, variable asp_seq_counting, variable & p_vol_arr[], sequence tips, variable number_channels, device & STAR ) void { }
function dispense_w_err_handling( sequence & disp_seq, variable disp_seq_counting, variable disp_to_liquid, variable & p_vol_arr[], variable mix_cycles, variable mix_volume, variable number_channels, device & STAR ) void { }
function pipette_cells_from_tubes( sequence & asp_seq, sequence & disp_seq, variable p_vol, variable mix_cycles, variable mix_volume, sequence & tips, variable number_channels, device & STAR ) void { }
function pipette_dil_series( sequence & from_seq, sequence & to_seq, variable p_vol, variable mix_cycles, variable mix_volume, sequence & tips, variable number_channels, device & STAR ) void { }
function pipette_inducer_delete( sequence & asp_seq, sequence & disp_seq, variable p_vol, sequence & tips, variable number_channels, device & STAR ) void { }
function pipette_media( sequence & asp_seq, sequence & disp_seq, variable p_vol, variable pre_wet_tips, sequence & tips, variable number_channels, device & STAR ) void { }
function pipette_selector_delete( sequence & asp_seq, sequence & disp_seq, variable p_vol, variable pre_wet_tips, sequence & tips, variable number_channels, device & STAR ) void { }
function simple_aspirate( sequence & asp_seq, variable asp_seq_counting, variable p_vol, sequence tips, variable number_channels, device & STAR ) void { }
function simple_dispense( sequence & disp_seq, variable disp_seq_counting, variable disp_to_liquid, variable p_vol, variable mix_cycles, variable mix_volume, variable number_channels, device & STAR ) void { }
function tip_eject( variable number_channels, device & STAR ) void { }
function tip_pickup( sequence & tips, variable number_channels, device & STAR ) void { }
} // namespace
#endif

#ifdef HSL_RUNTIME
#include __filename__ ".hsi"
#endif
// $$author=djross$$valid=0$$time=2024-12-16 18:54$$checksum=9c876a8e$$length=083$$