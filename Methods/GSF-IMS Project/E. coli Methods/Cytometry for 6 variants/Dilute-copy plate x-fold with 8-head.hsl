 namespace _Method { #include "Common\\Common96HeadSubMethods.hs_" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "Common\\Tip Handling\\With 96-Head\\Tip Handling with 96-Head.hs_" } 
 namespace _Method { #include "Common\\PlateAndLidMovement.hs_" } 
 namespace _Method { #include "HSLUtilLib.hsl" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Directory.hsl" } 
 namespace _Method { #include "HSLTimLib.hsl" } 
 namespace _Method { #include "Common\\LMSF_Utilities.hs_" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
 namespace _Method { #include "HSLErrLib.hsl" } 
#include "Cytometry for 24 constitutive plasmids.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable tip_counter_array[];
variable is_pipetting;
variable culture_volume;
variable mix_volume;
variable pipette_volume;
variable pipette_multiplier;
variable is_debugging;
dialog dialogHandleE51CCBAA309C40a48C76E32B38D9C875;
variable dilution_factor;
variable keep_old_GP;
variable lineage;
sequence old_GP_lid_arr[];
global device ML_STAR ("Cytometry for 24 constitutive plasmids.lay", "ML_STAR", hslTrue);
variable loopCounter1;
variable channel_pattern;
variable numberOfPlasmids;
sequence tip_seq_arr[];
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
COMMON96HEADSUBMETHODS::_InitLibrary();
TIP_HANDLING_WITH_96_HEAD::_InitLibrary();
PLATEANDLIDMOVEMENT::_InitLibrary();
LMSF_UTILITIES::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{{ 1 1 0 "80d11ca0_4156_4ddf_9fff1bd201b2eaeb" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
GetParams();
// }} ""
// {{{ 2 1 0 "13323e94_9ffc_4604_96e37fa2d9a0a85e" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{ 3 1 0 "5eabf3aa_8310_43d6_821d2f453a2b0d16" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 4 1 0 "32317fd0_dfd7_43eb_b7d86639431d7410" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 5 1 0 "36d90aea_0340_40cc_9e202184c1ba2379" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
old_GP_lid_arr.SetSize(0);
// }} ""
// {{ 6 1 0 "eac61f9d_243d_40ae_935304cd3fa0e6b2" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
old_GP_lid_arr.AddAsLast(ML_STAR.Lid_parking_Old_Growth_Plate);
// }} ""
// {{ 7 1 0 "b6615359_1925_4e1e_a3dff95447054726" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
old_GP_lid_arr.AddAsLast(ML_STAR.Lid_parking_Old_Growth_Plate_2);
// }} ""
// {{ 8 1 0 "4295da88_a737_444a_8c7e5e003f1ffb65" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 9 1 0 "5eabf3aa_8310_43d6_821d2f453a2b0d16" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 10 1 0 "371a5648_015f_4279_80f68467b5087508" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 11 1 0 "2ac0357e_bdd5_4b71_b9e76f42074b79dd" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Growth_Plate_lid, ML_STAR.Lid_parking_Growth_Plate, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 1, 1, ML_STAR);
// }} ""
// {{ 12 1 0 "371a5648_015f_4279_80f68467b5087508" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 13 1 0 "a90e93c2_20d1_4e15_ab28e44ebaea7dcf" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 14 1 0 "d723b53b_8fd8_4ca0_ab99cac94efb153d" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("==============================================================\nPipette cells from old growth plate (on handoff) to new growth plate\n=============================================================="));
// }} ""
// {{ 15 1 0 "d3906547_5732_4cce_9ace822544fc04e7" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
pipette_multiplier = culture_volume / (500 * 1.0);
// }} ""
// {{ 16 1 0 "1a026028_a52f_49fc_bfb98d114925f403" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
pipette_volume = culture_volume / (dilution_factor * 1.0);
// }} ""
// {{ 17 1 0 "68f51697_bc3a_4a3c_bde2da49ad8d6c2b" "{B31F3544-5D80-11d4-A5EB-0050DA737D89}"
mix_volume = pipette_multiplier * 200;
// }} ""
// {{ 18 1 0 "17d01efb_0584_40aa_a01cccc97d1f5c33" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
channel_pattern = "01111110";
// }} ""
// {{ 19 1 0 "e90b0370_46d2_49f2_9d763cdb103d1195" "{B31F353C-5D80-11d4-A5EB-0050DA737D89}"
ML_STAR.Old_GP_cells.SetCount(numberOfPlasmids);
// }} ""
// {{ 20 1 0 "f06b3858_90f9_4998_9685dc34482822dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (is_pipetting == "true")
{
// }} ""
// {{ 21 1 0 "79fe9bb0_57d3_4a28_9e3ed4fa9152ba88" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
while (
   (ML_STAR.Old_GP_cells.GetCurrentPosition() > 0)
)
{
AlignSequences(hslTrue, ML_STAR.Bacteria_dispense, 1, ML_STAR.Old_GP_cells, 1);
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 22 1 0 "662fc5f8_37cc_4fc6_b364ad0f1e1d2c3b" "ML_STAR:{541143FA-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FA_7FA2_11D3_AD85_0004ACB1DCB2("662fc5f8_37cc_4fc6_b364ad0f1e1d2c3b"); // TipPickUp
}
// }} ""
// {{ 23 1 0 "1251c36c_5e2b_4a35_91fe8a2678465788" "ML_STAR:{541143F5-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F5_7FA2_11D3_AD85_0004ACB1DCB2("1251c36c_5e2b_4a35_91fe8a2678465788"); // Aspirate
}
// }} ""
// {{ 24 1 0 "cfd20aa8_ea62_4419_8dac1d103fb9d1e9" "ML_STAR:{541143F8-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F8_7FA2_11D3_AD85_0004ACB1DCB2("cfd20aa8_ea62_4419_8dac1d103fb9d1e9"); // Dispense
}
// }} ""
// {{ 25 1 0 "25591c7d_a2d8_4b61_b826f1e5eb14097e" "ML_STAR:{541143F5-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F5_7FA2_11D3_AD85_0004ACB1DCB2("25591c7d_a2d8_4b61_b826f1e5eb14097e"); // Aspirate
}
// }} ""
// {{ 26 1 0 "47d8a0f6_714e_40fc_86e144fe1e23fc4e" "ML_STAR:{541143F8-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F8_7FA2_11D3_AD85_0004ACB1DCB2("47d8a0f6_714e_40fc_86e144fe1e23fc4e"); // Dispense
}
// }} ""
// {{ 27 1 0 "abce106d_26c6_4360_950b00490fd16344" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("abce106d_26c6_4360_950b00490fd16344"); // TipEject
}
// }} ""
// {{ 28 1 0 "79fe9bb0_57d3_4a28_9e3ed4fa9152ba88" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
if (
   (ML_STAR.Old_GP_cells.GetCurrentPosition() > 0 && ML_STAR.Old_GP_cells.GetMax() == 0 )
)
{ MECC::EndlessSequenceLoopWarning(GetFileName()); }

}
ML_STAR.Bacteria_dispense.SetMax(ML_STAR.Bacteria_dispense.GetTotal());
ML_STAR.Old_GP_cells.SetMax(ML_STAR.Old_GP_cells.GetTotal());
ML_STAR.Bacteria_dispense.SetCurrentPosition(1);
ML_STAR.Old_GP_cells.SetCurrentPosition(1);
}
// }} ""
// {{ 29 1 0 "f06b3858_90f9_4998_9685dc34482822dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 30 1 0 "2e94ad2d_29ad_4971_93a915a8c5afbb63" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (is_debugging == "true")
{
// }} ""
// {{ 31 1 0 "5049f0a7_3696_4097_982dd54941daae86" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleE51CCBAA309C40a48C76E32B38D9C875.SetOutput(Translate("Pipette cells from old growth plate (on handoff) to new growth plate"), "\n");
dialogHandleE51CCBAA309C40a48C76E32B38D9C875.ShowOutput(Translate("Pipetting"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 32 1 0 "2e94ad2d_29ad_4971_93a915a8c5afbb63" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 33 1 0 "f06b3858_90f9_4998_9685dc34482822dd" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 34 1 0 "a90e93c2_20d1_4e15_ab28e44ebaea7dcf" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 35 1 0 "c8c448cc_06c2_4317_95ab4daed7183025" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 36 1 0 "d27cbe88_0394_449a_a5adca56d6f8d798" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Lid_parking_Growth_Plate, ML_STAR.Growth_Plate_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 1, 0, ML_STAR);
// }} ""
// {{{ 37 1 0 "0bb2d110_471b_47dd_9d41de7b405684e4" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveLid(old_GP_lid_arr.ElementAt( lineage -1), ML_STAR.Growth_Plate_Handoff_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 0, ML_STAR);
// }} ""
// {{ 38 1 0 "0f8f583a_f9a9_4ed4_9a0f5b01b2897a4a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (keep_old_GP == "true")
{
// }} ""
// {{{ 39 1 0 "1f5a231d_4d01_449f_a6ee97150b05624a" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveGrowthPlateWithLid(ML_STAR.Move_Growth_Plate_Handoff, ML_STAR.Growth_Plate_Handoff_lid, ML_STAR.Move_Old_Growth_Plate_park, ML_STAR.Old_Growth_Plate_parking_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 0, ML_STAR);
// }} ""
// {{ 40 1 0 "0f8f583a_f9a9_4ed4_9a0f5b01b2897a4a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{{ 41 1 0 "fb00ee52_855d_4c50_97dcaed65d8f2304" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveGrowthPlateWithLidNoTap(ML_STAR.Move_Growth_Plate_Handoff, ML_STAR.Growth_Plate_Handoff_lid, ML_STAR.Growth_Plate_waste, ML_STAR.Growth_Plate_waste_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 0, ML_STAR);
// }} ""
// {{ 42 1 0 "0f8f583a_f9a9_4ed4_9a0f5b01b2897a4a" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{{ 43 1 0 "ef775083_578e_46b5_b4383248288bdbde" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveGrowthPlateWithLid(ML_STAR.Move_Growth_Plate, ML_STAR.Growth_Plate_lid, ML_STAR.Move_Growth_Plate_Handoff, ML_STAR.Growth_Plate_Handoff_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 0, ML_STAR);
// }} ""
// {{{ 44 1 0 "638b974c_e734_4d36_ae634ca90cd60464" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Growth_Plate_Handoff_lid, old_GP_lid_arr.ElementAt( lineage -1), ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 1, ML_STAR);
// }} ""
// {{ 45 1 0 "c8c448cc_06c2_4317_95ab4daed7183025" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 46 1 0 "7d3f1e49_c54d_45ed_b5b3b8eaf0fb5eac" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
COMMON96HEADSUBMETHODS::_ExitLibrary();
TIP_HANDLING_WITH_96_HEAD::_ExitLibrary();
PLATEANDLIDMOVEMENT::_ExitLibrary();
LMSF_UTILITIES::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=djross$$valid=0$$time=2024-03-27 08:32$$checksum=e572fcab$$length=085$$