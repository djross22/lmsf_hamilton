global device ML_STAR ("Integrated Inducer Gradient and Cytometry.lay", "ML_STAR", hslTrue);
 namespace _Method { #include "Common\\PlateAndLidMovement.hs_" } 
#include "Integrated Inducer Gradient and Cytometry.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
dialog dialogHandle1;
dialog dialogHandle1C2B1E27A45B420aA69B024EE29131B9;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
PLATEANDLIDMOVEMENT::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "1b8fe589_acbe_4355_b288878939f5dadf" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("1b8fe589_acbe_4355_b288878939f5dadf"); // Initialize
}
// }} ""
// {{{ 2 1 0 "030bda0e_2f09_4d8b_b7fb6ba763986398" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveCytometryPlateWithLid(ML_STAR.Move_Cytometry_Plate_Handoff, ML_STAR.Cytometry_Plate_Handoff_lid, ML_STAR.Move_Cytometry_Plate, ML_STAR.Cytometry_Plate_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 1, 0, ML_STAR);
// }} ""
// {{{ 3 1 0 "e48ff3b3_8ac4_4c3a_a23fb238cf0cb74d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Cytometry_Plate_lid, ML_STAR.Lid_parking_Cytometry_Plate, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 0, ML_STAR);
// }} ""
// {{{ 4 1 0 "8263ccfb_76be_48e5_b2cf506a23100dd1" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Lid_parking_Cytometry_Plate, ML_STAR.Cytometry_Plate_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 0, ML_STAR);
// }} ""
// {{{ 5 1 0 "12beb59d_122f_4b14_b2b2a93ffef818c7" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
PLATEANDLIDMOVEMENT::MoveCytometryPlateWithLid(ML_STAR.Move_Cytometry_Plate, ML_STAR.Cytometry_Plate_lid, ML_STAR.Move_Cytometry_Plate_Handoff, ML_STAR.Cytometry_Plate_Handoff_lid, ML_STAR.COREGripTool_OnWaste_1000ul_0001, 0, 1, ML_STAR);
// }} ""
// {{ 2 "AutoExitBlock" ""
PLATEANDLIDMOVEMENT::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2019-04-18 17:11$$checksum=a2f4851e$$length=087$$