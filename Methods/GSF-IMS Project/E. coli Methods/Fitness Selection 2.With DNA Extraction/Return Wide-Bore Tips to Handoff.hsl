 namespace _Method { #include "Common\\Common96HeadSubMethods.hs_" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
#include "Fitness Selection 2.With DNA Extraction.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
global device ML_STAR ("Fitness Selection 2.With DNA Extraction.lay", "ML_STAR", hslTrue);
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
COMMON96HEADSUBMETHODS::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "010245ad_f931_41b9_9e1910893d31b171" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("010245ad_f931_41b9_9e1910893d31b171"); // Initialize
}
// }} ""
// {{ 2 1 0 "228cc56a_f30c_43e2_866510e2fec781dd" "ML_STAR:{BD0D210B-0816-4C86-A903-D6B2DF73F78B}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._BD0D210B_0816_4C86_A903_D6B2DF73F78B("228cc56a_f30c_43e2_866510e2fec781dd"); // Head96TipPickUp
}
// }} ""
// {{ 3 1 0 "284f5d80_468a_41ea_a58a49f42e929c16" "ML_STAR:{2880E77A-3D6D-40FE-AF57-1BD1FE13960C}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._2880E77A_3D6D_40FE_AF57_1BD1FE13960C("284f5d80_468a_41ea_a58a49f42e929c16"); // Head96TipEject
}
// }} ""
// {{{ 4 1 0 "af8b935d_8d8d_45b9_99f770abea434c9a" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
COMMON96HEADSUBMETHODS::Clear96HeadAndArm(ML_STAR, ML_STAR.clear_96_head_seq);
// }} ""
// {{ 2 "AutoExitBlock" ""
COMMON96HEADSUBMETHODS::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=djross$$valid=0$$time=2022-11-07 09:25$$checksum=ded14492$$length=085$$