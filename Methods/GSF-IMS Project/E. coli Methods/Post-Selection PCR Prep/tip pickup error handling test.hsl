 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_Device_Controllers.hs_" } 
 namespace _Method { #include "HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Prep.hs_" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
 namespace _Method { #include "HSLMthLib.hsl" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
#include "Post-Selection PCR and clean-up.24 samples.res"
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "Common\\LMSF_Utilities.hs_" } 
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable bln_Global_SimulatorMode;
variable str_Global_ODTCIPAddress;
variable ODTC;
variable odtc_script_path;
variable odtc_script_time;
variable odtc_script_id;
variable var_Global_HHSNode3;
variable HHS3;
variable SetTempHHS3;
variable pipette_volume;
variable loopCounter3;
variable loopCounter5;
variable loopCounter1;
variable loopCounter2;
variable loopCounter6;
variable is_debugging;
dialog dialogHandleD2B2D596589F42cb9AE4C884A81A2141;
dialog dialogHandle04E835C5B6764e4bBF4769BBDFA2E63C;
dialog dialogHandle50E36F22655F44d3AC61628A2C125337;
dialog dialogHandleCCFE062C71B74a0c8F9819555CB9D627;
dialog dialogHandleE6306A72158044a4B00773A1FE916E3B;
dialog dialogHandle2CA568264AB1499f9855375FA42E43AE;
dialog dialogHandle80BA62BB8799433f913827B700419BD3;
dialog dialogHandle8ED717E1D1EC40d883EA4721935BCCF4;
dialog dialogHandleBD3CE025AD514539B28F7EB744362F73;
dialog dialogHandle249470A3915E42a6B9AEB0EB7B1EFF92;
global device ML_STAR ("Post-Selection PCR and clean-up.24 samples.lay", "ML_STAR", hslTrue);
global device HxFan ("Post-Selection PCR and clean-up.24 samples.lay", "HxFan", hslTrue);
sequence Sample_Plate_arr[];
sequence Sample_Plate;
sequence Rev_Primer_arr[];
sequence Rev_Primer;
dialog dialogHandle46F720F143654751A67226B5E5A231CF;
dialog dialogHandle7EB0752AEC1C42129A2A02BF754834DB;
variable sample_volume;
variable bead_ratio;
variable bead_volume;
variable pcr_time;
variable pipetting_time;
variable wait_time;
timer timer1;
variable mix_volume;
variable empty_disp;
timer magnet_timer;
timer timer2;
timer timer3;
variable time_point;
dialog dialogHandleDE6918E062D44bc6B8CC9BEBB94BF13D;
dialog dialogHandle9484728E765941548CA51D3F0FB4AD4C;
dialog dialogHandle233F2E181C0340b29E3C571A66A2BD66;
dialog dialogHandle51197CB59F4E4b5dB83876BEE403517F;
dialog dialogHandle6847A2D3C9784bf5AFA2C016F81102D9;
dialog dialogHandleCFFD9C2C03E2408dA50935B4FB701E9F;
variable elution_vol;
variable bln_Global_SkipAllTimers;
variable timer_2_min;
variable timer_5_min;
variable timer_3_min;
sequence Pooling_arr[];
sequence Pooling_to;
variable user_choice;
variable loopCounter4;
dialog dialogHandleD98BC670151A472b89828B20DBF04581;
variable Bead_stock_volume;
variable Beads_used;
variable sample_mix_volume;
variable timer_10_sec;
variable timer_4_min;
sequence No_pooling_arr[];
sequence No_pooling_to;
variable pool_samples;
dialog customDialogFBCFF65469EF49dbB5D9767F72E86883;
variable time_lid_move;
timer lid_move_timer;
dialog dialogHandle7F928A7D0E7C4a76B84F26518EB91F7E;
variable is_pipetting;
dialog dialogHandle8FA5AC173CDE4a49BFD6AA77090039AC;
dialog dialogHandleFA05AE63EC1C4594BF56A94D1D621FF4;
dialog dialogHandle957EDE884DE145f1844651A8227F1863;
dialog dialogHandle8C57170CC6964a8689BF1533F742E7A7;
variable z_shift;
variable PCR_plate_stack_height;
sequence PCR_stack_arr[];
sequence PCR_stack_get;
dialog dialogHandle1;
variable is_ramR_experiment;
dialog customDialogF386E4917E7A4fe096D01643593EBE3A;
variable is_lacI_experiment;
variable is_bead_ratio_test_exp;
variable lacI_ratio_1_1;
variable ramR_ratio_1_1;
variable lacI_ratio_1_2;
variable ramR_ratio_1_2;
variable lacI_ratio_2;
variable ramR_ratio_2;
variable lacI_str;
variable ratio_1_1_str;
variable ratio_1_2_str;
variable ratio_2_str;
variable ramR_str;
dialog customDialog67FEC684F50E49f6BEFB2F796CA2C564;
variable confirm_str;
variable time_point_str;
variable bead_ratio_arr[];
variable bead_ratio_test_arr_1_2[];
variable bead_ratio_test_arr_2[];
variable loopCounter7;
variable bead_volume_arr[];
variable sample_mix_vol_arr[];
dialog dialogHandle2;
dialog dialogHandleAA6875EFB00442ea9D1744F985AB2D87;
dialog dialogHandleABFFC28CBB3C4db3B6BA851AE3F802EF;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_DEVICE_CONTROLLERS::_InitLibrary();
NIST_TRUSEQNANO_PREP::_InitLibrary();
LMSF_UTILITIES::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{{ 1 1 0 "831c3c31_2739_4343_840f2acd0b01b7ec" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{ 2 1 0 "fd4907cf_4764_4f73_aac1b2015d58f430" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < 12;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{{ 3 1 0 "a1727c92_595f_422b_9face1bcf09c54f3" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
TipPickupWithErrorHandling(ML_STAR.MlStar50ulTipWithFilter);
// }} ""
// {{ 4 1 0 "8143de80_b36f_4f6f_ac6b3fde51331b37" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("8143de80_b36f_4f6f_ac6b3fde51331b37"); // TipEject
}
// }} ""
// {{ 5 1 0 "0ce73263_a985_408b_886b30d434efa486" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandleABFFC28CBB3C4db3B6BA851AE3F802EF.SetOutput(loopCounter1);
dialogHandleABFFC28CBB3C4db3B6BA851AE3F802EF.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 6 1 0 "fd4907cf_4764_4f73_aac1b2015d58f430" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{{ 7 1 0 "fac9219d_1775_4be3_8a7f7c7b62b3f69d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_DEVICE_CONTROLLERS::_ExitLibrary();
NIST_TRUSEQNANO_PREP::_ExitLibrary();
LMSF_UTILITIES::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=djross$$valid=0$$time=2022-09-12 15:13$$checksum=fbcbec46$$length=085$$