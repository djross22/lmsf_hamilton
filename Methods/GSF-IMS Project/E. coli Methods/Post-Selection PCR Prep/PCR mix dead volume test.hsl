 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_Device_Controllers.hs_" } 
 namespace _Method { #include "HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Prep.hs_" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
 namespace _Method { #include "HSLMthLib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
#include "Post-Selection PCR and clean-up.24 samples.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable bln_Global_SimulatorMode;
variable str_Global_ODTCIPAddress;
variable ODTC;
variable odtc_script_path;
variable odtc_script_time;
variable odtc_script_id;
variable var_Global_HHSNode3;
variable HHS3;
variable SetTempHHS3;
variable pipette_volume;
variable loopCounter3;
variable loopCounter5;
variable loopCounter1;
variable loopCounter2;
variable loopCounter6;
variable is_debugging;
dialog dialogHandleD2B2D596589F42cb9AE4C884A81A2141;
dialog dialogHandleA344ECED4408472aB1E69B79AE8280ED;
dialog dialogHandle5D6FB6AEC0634937B681440F768246A5;
dialog dialogHandle04E835C5B6764e4bBF4769BBDFA2E63C;
dialog dialogHandle50E36F22655F44d3AC61628A2C125337;
dialog dialogHandleCCFE062C71B74a0c8F9819555CB9D627;
dialog dialogHandle6ABD961FC177455191B5C9DDC9D711EC;
dialog dialogHandleE6306A72158044a4B00773A1FE916E3B;
dialog dialogHandle2CA568264AB1499f9855375FA42E43AE;
dialog dialogHandle80BA62BB8799433f913827B700419BD3;
dialog dialogHandle8ED717E1D1EC40d883EA4721935BCCF4;
dialog dialogHandleBD3CE025AD514539B28F7EB744362F73;
dialog dialogHandle249470A3915E42a6B9AEB0EB7B1EFF92;
global device ML_STAR ("Post-Selection PCR and clean-up.24 samples.lay", "ML_STAR", hslTrue);
global device HxFan ("Post-Selection PCR and clean-up.24 samples.lay", "HxFan", hslTrue);
sequence Sample_Plate_arr[];
sequence Sample_Plate;
sequence Rev_Primer_arr[];
sequence Rev_Primer;
dialog dialogHandle46F720F143654751A67226B5E5A231CF;
dialog dialogHandle7EB0752AEC1C42129A2A02BF754834DB;
variable sample_volume;
variable bead_ratio;
variable bead_volume;
variable pcr_time;
variable pipetting_time;
variable wait_time;
timer timer1;
variable mix_volume;
variable empty_disp;
timer magnet_timer;
timer timer2;
timer timer3;
variable time_point;
dialog dialogHandleDE6918E062D44bc6B8CC9BEBB94BF13D;
dialog dialogHandle9484728E765941548CA51D3F0FB4AD4C;
dialog dialogHandle233F2E181C0340b29E3C571A66A2BD66;
dialog dialogHandle51197CB59F4E4b5dB83876BEE403517F;
dialog dialogHandle6847A2D3C9784bf5AFA2C016F81102D9;
dialog dialogHandleCFFD9C2C03E2408dA50935B4FB701E9F;
dialog dialogHandle9FB29A9E8BD84852AF9646257C2AB804;
variable elution_vol;
variable bln_Global_SkipAllTimers;
variable timer_2_min;
variable timer_5_min;
variable timer_3_min;
sequence Pooling_arr[];
sequence Pooling_to;
variable user_choice;
variable loopCounter4;
dialog customDialog3BA71A0A01F44443A86DAA75E4A9EC2F;
dialog customDialog172E6296786B46e1AB594E314445BB63;
dialog customDialog0847B38DE6D144598B2739752C9D93E3;
dialog customDialog5007069533EB488e8C99C98C6AE38D95;
dialog customDialog2406ED92E0EC4bbdAEDC7F5C3E26E16D;
dialog customDialogF45043B5202B47d685672CECA2EC7AD4;
dialog customDialog97EA127DC761459a96BF211FDF78B4B5;
dialog dialogHandleD98BC670151A472b89828B20DBF04581;
variable Bead_stock_volume;
variable Beads_used;
dialog dialogHandleFBB260A666524f709B58B17DE2BD3090;
variable sample_mix_volume;
variable timer_10_sec;
variable timer_4_min;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_DEVICE_CONTROLLERS::_InitLibrary();
NIST_TRUSEQNANO_PREP::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "6abcde05_dbab_4775_a33c97568c632a66" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 2 1 0 "b6a09785_db91_4db4_a396ce211b819b53" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
bln_Global_SimulatorMode = HSLML_STAR::IsSimulatorMode(ML_STAR);
// }} ""
// {{ 3 1 0 "d13d025b_0486_4148_a4d4da1d00ab73c0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
is_debugging = "false";
// }} ""
// {{ 4 1 0 "32bcc60c_c673_4efb_b702da80dba2474a" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
bln_Global_SkipAllTimers = 0;
// }} ""
// {{ 5 1 0 "63eeb6c1_07d7_4a1b_a6ec037396b7296d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Global_SimulatorMode == 1)
{
// }} ""
// {{ 6 1 0 "4e59f30e_6b14_42a9_b2623c078d6ec37f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
bln_Global_SkipAllTimers = 1;
// }} ""
// {{ 7 1 0 "63eeb6c1_07d7_4a1b_a6ec037396b7296d" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 8 1 0 "4ba1fef0_dfbf_416b_b957e350f9e37d04" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
if (bln_Global_SkipAllTimers == 1)
{
// }} ""
// {{ 9 1 0 "82779cf7_07dd_4601_869a8a30b7c98123" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_2_min = 1;
// }} ""
// {{ 10 1 0 "a5247e56_655d_4948_890bb08c358c16d1" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_3_min = 1;
// }} ""
// {{ 11 1 0 "4a45724d_d862_44e8_8a5478b44da39d57" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_4_min = 1;
// }} ""
// {{ 12 1 0 "d6edc576_c541_42f3_958ae1b0d0c2dbbc" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_5_min = 1;
// }} ""
// {{ 13 1 0 "b85d0985_1b41_4a15_ba2d389e6ac72e3f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_10_sec = 1;
// }} ""
// {{ 14 1 0 "4ba1fef0_dfbf_416b_b957e350f9e37d04" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
else
{
// }} ""
// {{ 15 1 0 "ced053e3_3703_4960_9e1a403a329c7475" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_2_min = 120;
// }} ""
// {{ 16 1 0 "8e872a84_4b6a_473a_882fa8b3bbba4d0d" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_3_min = 180;
// }} ""
// {{ 17 1 0 "9e8e8f56_fee8_4490_9c31e87dce1fb9c3" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_4_min = 240;
// }} ""
// {{ 18 1 0 "23a3960a_2a8f_4afc_b57a3340c3dd0d9c" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_5_min = 300;
// }} ""
// {{ 19 1 0 "6b395e60_2ae1_4f55_9e3b367b0e5beb17" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
timer_10_sec = 10;
// }} ""
// {{ 20 1 0 "4ba1fef0_dfbf_416b_b957e350f9e37d04" "{B31F3531-5D80-11d4-A5EB-0050DA737D89}"
}
// }} ""
// {{ 21 1 0 "6abcde05_dbab_4775_a33c97568c632a66" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 22 1 0 "831c3c31_2739_4343_840f2acd0b01b7ec" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{ 23 1 0 "cbd98a3c_0d42_4b52_b111593f316893d5" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 24 1 0 "0033c35d_bc9f_4684_a6c5bd6696de26f4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("=======================================================\nFirst PCR Step\n======================================================="));
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 25 1 0 "d7115a99_b504_47f5_8f5b911f6d91c301" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 26 1 0 "3db94059_6334_4dec_bd151531baaf443b" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("***************************************************************************\nAdd PCR Master Mix to PCR plate\n***************************************************************************"));
// }} ""
// {{ 27 1 0 "e321d1b0_17bb_481c_ae2fe96b56406113" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
pipette_volume = 45;
// }} ""
// {{ 28 1 0 "76970d7d_0210_4810_be1f170eb3cbdbbe" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
mix_volume = 80;
// }} ""
// {{ 29 1 0 "a0d1d3ba_289d_4b9a_befee1e9f19b1b5a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter6 = 0;
ML_STAR.PCR_Plate_1.SetCurrentPosition(1);
while (
   (ML_STAR.PCR_Plate_1.GetCurrentPosition() > 0)
)
{
AlignSequences(hslTrue, ML_STAR.PCR_Plate_1, 1);
loopCounter6 = loopCounter6 + 1;
// }} ""
// {{{ 30 1 0 "a48bb806_ce93_4cce_90ced493bec5f048" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
TipPickupWithErrorHandling(ML_STAR.MlStar300ulStandardVolumeTipWithFilter);
// }} ""
// {{ 31 1 0 "2171e7b7_4ce9_4274_b0cff9fdf2d13313" "ML_STAR:{541143F5-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F5_7FA2_11D3_AD85_0004ACB1DCB2("2171e7b7_4ce9_4274_b0cff9fdf2d13313"); // Aspirate
}
// }} ""
// {{ 32 1 0 "f877c0de_ec59_4f2c_83d599453f1db2be" "ML_STAR:{541143F8-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F8_7FA2_11D3_AD85_0004ACB1DCB2("f877c0de_ec59_4f2c_83d599453f1db2be"); // Dispense
}
// }} ""
// {{ 33 1 0 "16bdbf57_9cf2_4b96_80fad7a2ca513d90" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("16bdbf57_9cf2_4b96_80fad7a2ca513d90"); // TipEject
}
// }} ""
// {{ 34 1 0 "a0d1d3ba_289d_4b9a_befee1e9f19b1b5a" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
if (
   (ML_STAR.PCR_Plate_1.GetCurrentPosition() > 0 && ML_STAR.PCR_Plate_1.GetMax() == 0 )
)
{ MECC::EndlessSequenceLoopWarning(GetFileName()); }

}
ML_STAR.PCR_Plate_1.SetMax(ML_STAR.PCR_Plate_1.GetTotal());
ML_STAR.PCR_Plate_1.SetCurrentPosition(1);
}
// }} ""
// {{ 35 1 0 "d7115a99_b504_47f5_8f5b911f6d91c301" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 36 1 0 "cbd98a3c_0d42_4b52_b111593f316893d5" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 37 1 0 "12247acd_935c_4520_aa4e00405036c18a" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 38 1 0 "07e9cba6_4f0b_49e1_bc384f8ef7880f20" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("**** Prep PCR plate 2 ***"));
// }} ""
// {{ 39 1 0 "98946fdc_4dc8_40b7_a9101642fb8d00d0" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 40 1 0 "342de953_5b62_45e1_bfbcc7fbc6e6b7e0" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
pipette_volume = 36;
// }} ""
// {{ 41 1 0 "e575441f_5d64_4977_bcee80f9b3cc388c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
loopCounter1 = 0;
ML_STAR.PCR_Plate_2.SetCurrentPosition(1);
while (
   (ML_STAR.PCR_Plate_2.GetCurrentPosition() > 0)
)
{
AlignSequences(hslTrue, ML_STAR.PCR_Plate_2, 1);
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{{ 42 1 0 "7f236b83_fc35_48a3_a241819de6482a6b" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
TipPickupWithErrorHandling(ML_STAR.MlStar50ulTipWithFilter);
// }} ""
// {{ 43 1 0 "43e3aa7e_2e69_43f4_ad45d147c3cc5760" "ML_STAR:{541143F5-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F5_7FA2_11D3_AD85_0004ACB1DCB2("43e3aa7e_2e69_43f4_ad45d147c3cc5760"); // Aspirate
}
// }} ""
// {{ 44 1 0 "5de67ef7_6ed8_47b6_b3acf5ac411fc73c" "ML_STAR:{541143F8-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143F8_7FA2_11D3_AD85_0004ACB1DCB2("5de67ef7_6ed8_47b6_b3acf5ac411fc73c"); // Dispense
}
// }} ""
// {{ 45 1 0 "c24814b3_52f8_4dcd_a0ec8d5b30e8f243" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("c24814b3_52f8_4dcd_a0ec8d5b30e8f243"); // TipEject
}
// }} ""
// {{ 46 1 0 "e575441f_5d64_4977_bcee80f9b3cc388c" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
if (
   (ML_STAR.PCR_Plate_2.GetCurrentPosition() > 0 && ML_STAR.PCR_Plate_2.GetMax() == 0 )
)
{ MECC::EndlessSequenceLoopWarning(GetFileName()); }

}
ML_STAR.PCR_Plate_2.SetMax(ML_STAR.PCR_Plate_2.GetTotal());
ML_STAR.PCR_Plate_2.SetCurrentPosition(1);
}
// }} ""
// {{ 47 1 0 "12247acd_935c_4520_aa4e00405036c18a" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 48 1 0 "e526ce17_0a8e_47f5_a70ed27a11ae8a20" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 49 1 0 "fac9219d_1775_4be3_8a7f7c7b62b3f69d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_DEVICE_CONTROLLERS::_ExitLibrary();
NIST_TRUSEQNANO_PREP::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2021-10-17 17:45$$checksum=cabee6de$$length=087$$