#include "Post-Selection PCR and clean-up.24 samples.res"
global device ML_STAR ("Post-Selection PCR and clean-up.24 samples.lay", "ML_STAR", hslTrue);
global device HxFan ("Post-Selection PCR and clean-up.24 samples.lay", "HxFan", hslTrue);
 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
dialog dialogHandle6ADD3790C75B435f8D11491E9B1D1EEB;
dialog dialogHandleAA3966494F064062A490D6A17F5515F3;
dialog dialogHandle822CAF189AA14c4b89FACC1F27D2EB6E;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "b15f3026_1a95_4f52_b1e15c00fcf4349b" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("b15f3026_1a95_4f52_b1e15c00fcf4349b"); // Initialize
}
// }} ""
// {{ 2 1 0 "5aeaac56_3826_43c1_9b6c1bb4c4874d91" "ML_STAR:{EA251BFB-66DE-48D1-83E5-6884B4DD8D11}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._EA251BFB_66DE_48D1_83E5_6884B4DD8D11("5aeaac56_3826_43c1_9b6c1bb4c4874d91"); // MoveAutoLoad
}
// }} ""
// {{{ 3 1 0 "367a19fc_da36_4bed_9dd2df2af7c1398f" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Water_EB_ethanol_lid, ML_STAR.Water_EB_ethanol_lid_parking, 0, 0, ML_STAR);
// }} ""
// {{ 4 1 0 "b1550302_0dda_4911_aa558b957f4ebddd" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle6ADD3790C75B435f8D11491E9B1D1EEB.SetOutput(Translate("Pause"));
dialogHandle6ADD3790C75B435f8D11491E9B1D1EEB.ShowOutput(Translate("Pause"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{{ 5 1 0 "3b23cc44_8c6b_4666_8e484926bd05760a" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Water_EB_ethanol_lid_parking, ML_STAR.Water_EB_ethanol_lid, 1, 0, ML_STAR);
// }} ""
// {{ 6 1 0 "52b70d11_4d94_4b69_a98b8f469c7fce24" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle822CAF189AA14c4b89FACC1F27D2EB6E.SetOutput(Translate("Pause"));
dialogHandle822CAF189AA14c4b89FACC1F27D2EB6E.ShowOutput(Translate("Pause"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 7 1 0 "076c1584_b0d9_463a_befacf77f4a03beb" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2024-05-01 15:58$$checksum=d394ebf7$$length=087$$