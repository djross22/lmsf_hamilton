 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_Device_Controllers.hs_" } 
 namespace _Method { #include "HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Prep.hs_" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
 namespace _Method { #include "HSLMthLib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
#include "Post-Selection PCR and clean-up.24 samples.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
global device ML_STAR ("Post-Selection PCR and clean-up.24 samples.lay", "ML_STAR", hslTrue);
global device HxFan ("Post-Selection PCR and clean-up.24 samples.lay", "HxFan", hslTrue);
dialog dialogHandleF76D047112C54899A799C4B4D3789C6A;
dialog dialogHandle8A3A865DE92346d1AC4D124CDB08A64D;
dialog dialogHandle0088B6A1078D483b93D75DAB9E5CD53B;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_DEVICE_CONTROLLERS::_InitLibrary();
NIST_TRUSEQNANO_PREP::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "e5c6c9a2_d9fe_4f29_9254e48d3af35abf" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("e5c6c9a2_d9fe_4f29_9254e48d3af35abf"); // Initialize
}
// }} ""
// {{ 2 1 0 "6cc70070_8603_4c61_bd8ebf022f9eaa39" "ML_STAR:{EA251BFB-66DE-48D1-83E5-6884B4DD8D11}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._EA251BFB_66DE_48D1_83E5_6884B4DD8D11("6cc70070_8603_4c61_bd8ebf022f9eaa39"); // MoveAutoLoad
}
// }} ""
// {{{ 3 1 0 "dc107eee_6048_4c56_958600f48175ead6" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.PCR_Plate_lid, ML_STAR.PCR_Plate_Lid_Parking, 0, 1, ML_STAR);
// }} ""
// {{ 4 1 0 "72485627_efaa_4aec_ba3a592d1af80bd4" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle0088B6A1078D483b93D75DAB9E5CD53B.SetOutput(Translate("Pause"));
dialogHandle0088B6A1078D483b93D75DAB9E5CD53B.ShowOutput(Translate("Pause"), hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{{ 5 1 0 "f59ec40a_6fc9_465c_9a5673ad12ce1e65" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.PCR_Plate_Lid_Parking, ML_STAR.PCR_Plate_lid, 1, 1, ML_STAR);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 6 1 0 "2b67b644_3fdb_461f_9e0ef8e7ec0db0a9" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.PCR_Plate_lid, ML_STAR.PCR_Plate_lid, 0, 0, ML_STAR);
// }} ""
// {{{ 7 1 0 "dfbed8c5_572b_4e21_94cb84145051cc24" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.PCR_Plate_lid, ML_STAR.PCR_Plate_lid, 1, 1, ML_STAR);
// }} ""
// {{{ 8 1 0 "887db197_7a45_458c_90bcc64befdcbd7e" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MovePCRPlateWithLid(ML_STAR.PCR_Plate_move, ML_STAR.PCR_Plate_lid, ML_STAR.PCR_Plate_move, ML_STAR.PCR_Plate_lid, 1, 0, ML_STAR);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 9 1 0 "e526ce17_0a8e_47f5_a70ed27a11ae8a20" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 10 1 0 "fac9219d_1775_4be3_8a7f7c7b62b3f69d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_DEVICE_CONTROLLERS::_ExitLibrary();
NIST_TRUSEQNANO_PREP::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2024-05-01 15:12$$checksum=34687ea9$$length=087$$