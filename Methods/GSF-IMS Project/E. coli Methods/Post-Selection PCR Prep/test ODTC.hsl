 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_Device_Controllers.hs_" } 
 namespace _Method { #include "HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Prep.hs_" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
 namespace _Method { #include "HSLMthLib.hsl" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "HSLTipCountingLib.hsl" } 
#include "Post-Selection PCR and clean-up.24 samples.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable bln_Global_SimulatorMode;
variable str_Global_ODTCIPAddress;
variable ODTC;
variable odtc_script_path;
variable odtc_script_time;
variable odtc_script_id;
variable var_Global_HHSNode3;
variable HHS3;
variable SetTempHHS3;
variable pipette_volume;
variable loopCounter3;
variable loopCounter5;
variable loopCounter1;
variable loopCounter2;
variable loopCounter6;
variable is_debugging;
dialog dialogHandleD2B2D596589F42cb9AE4C884A81A2141;
dialog dialogHandleA344ECED4408472aB1E69B79AE8280ED;
dialog dialogHandle5D6FB6AEC0634937B681440F768246A5;
dialog dialogHandle04E835C5B6764e4bBF4769BBDFA2E63C;
dialog dialogHandle50E36F22655F44d3AC61628A2C125337;
dialog dialogHandleCCFE062C71B74a0c8F9819555CB9D627;
dialog dialogHandle6ABD961FC177455191B5C9DDC9D711EC;
dialog dialogHandleE6306A72158044a4B00773A1FE916E3B;
dialog dialogHandle2CA568264AB1499f9855375FA42E43AE;
dialog dialogHandle80BA62BB8799433f913827B700419BD3;
dialog dialogHandle8ED717E1D1EC40d883EA4721935BCCF4;
dialog dialogHandleBD3CE025AD514539B28F7EB744362F73;
dialog dialogHandle249470A3915E42a6B9AEB0EB7B1EFF92;
global device ML_STAR ("Post-Selection PCR and clean-up.24 samples.lay", "ML_STAR", hslTrue);
global device HxFan ("Post-Selection PCR and clean-up.24 samples.lay", "HxFan", hslTrue);
sequence Sample_Plate_arr[];
sequence Sample_Plate;
sequence Rev_Primer_arr[];
sequence Rev_Primer;
dialog dialogHandle46F720F143654751A67226B5E5A231CF;
dialog dialogHandle7EB0752AEC1C42129A2A02BF754834DB;
variable sample_volume;
variable bead_ratio;
variable bead_volume;
variable pcr_time;
variable pipetting_time;
variable wait_time;
timer timer1;
variable mix_volume;
variable empty_disp;
timer magnet_timer;
timer timer2;
timer timer3;
variable time_point;
dialog dialogHandleDE6918E062D44bc6B8CC9BEBB94BF13D;
dialog dialogHandle9484728E765941548CA51D3F0FB4AD4C;
dialog dialogHandle233F2E181C0340b29E3C571A66A2BD66;
dialog dialogHandle51197CB59F4E4b5dB83876BEE403517F;
dialog dialogHandle6847A2D3C9784bf5AFA2C016F81102D9;
dialog dialogHandleCFFD9C2C03E2408dA50935B4FB701E9F;
dialog dialogHandle9FB29A9E8BD84852AF9646257C2AB804;
variable elution_vol;
variable bln_Global_SkipAllTimers;
variable timer_2_min;
variable timer_5_min;
variable timer_3_min;
sequence Pooling_arr[];
sequence Pooling_to;
variable user_choice;
variable loopCounter4;
dialog customDialog3BA71A0A01F44443A86DAA75E4A9EC2F;
dialog customDialog172E6296786B46e1AB594E314445BB63;
dialog customDialog0847B38DE6D144598B2739752C9D93E3;
dialog customDialog5007069533EB488e8C99C98C6AE38D95;
dialog customDialog2406ED92E0EC4bbdAEDC7F5C3E26E16D;
dialog customDialogF45043B5202B47d685672CECA2EC7AD4;
dialog customDialog97EA127DC761459a96BF211FDF78B4B5;
dialog dialogHandleD98BC670151A472b89828B20DBF04581;
variable Bead_stock_volume;
variable Beads_used;
dialog dialogHandleFBB260A666524f709B58B17DE2BD3090;
variable sample_mix_volume;
variable timer_10_sec;
variable timer_4_min;
sequence No_pooling_arr[];
sequence No_pooling_to;
variable pool_samples;
dialog customDialogFBCFF65469EF49dbB5D9767F72E86883;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_DEVICE_CONTROLLERS::_InitLibrary();
NIST_TRUSEQNANO_PREP::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{{ 1 1 0 "831c3c31_2739_4343_840f2acd0b01b7ec" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
StartUp();
// }} ""
// {{{ 2 1 0 "fac9219d_1775_4be3_8a7f7c7b62b3f69d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CleanUp();
// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_DEVICE_CONTROLLERS::_ExitLibrary();
NIST_TRUSEQNANO_PREP::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2022-09-01 16:22$$checksum=b410cd03$$length=087$$