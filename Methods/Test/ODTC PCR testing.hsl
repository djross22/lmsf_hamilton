global device ML_STAR ("ODTC PCR testing.lay", "ML_STAR", hslTrue);
#include "ODTC PCR testing.res"
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Processes.hs_" } 
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
dialog dialogHandle1;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
NIST_TRUSEQNANO_PROCESSES::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "b6dbccfc_2f3a_4f1b_861c4b8b8aeec171" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("b6dbccfc_2f3a_4f1b_861c4b8b8aeec171"); // Initialize
}
// }} ""
// {{ 2 1 0 "60027814_f059_4458_83968ed01b43802d" "ML_STAR:{EA251BFB-66DE-48D1-83E5-6884B4DD8D11}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._EA251BFB_66DE_48D1_83E5_6884B4DD8D11("60027814_f059_4458_83968ed01b43802d"); // MoveAutoLoad
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 3 1 0 "39f106c3_169d_4464_9dfde21475aa3738" "ML_STAR:{8A76E9A2-8053-4a32-B36F-AD9556B09C99}"
{
	ML_STAR._8A76E9A2_8053_4a32_B36F_AD9556B09C99("39f106c3_169d_4464_9dfde21475aa3738"); // EasyiSWAPTransport
}
// }} ""
// {{ 4 1 0 "1b3bdf09_7b44_4464_87184aba5d305965" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle1.SetOutput(Translate("pause"));
dialogHandle1.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{ 5 1 0 "043a6fb6_22fa_4c1b_b98e67db2eb3f03f" "ML_STAR:{8A76E9A2-8053-4a32-B36F-AD9556B09C99}"
{
	ML_STAR._8A76E9A2_8053_4a32_B36F_AD9556B09C99("043a6fb6_22fa_4c1b_b98e67db2eb3f03f"); // EasyiSWAPTransport
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{{ 6 1 0 "a0414ff4_bcf2_41bd_b49d3cbabe999ab4" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
NIST_TRUSEQNANO_PROCESSES::MoveHSP(ML_STAR, ML_STAR.Stack4, ML_STAR.HSP_Pipette, 0, 1, 1, ML_STAR.COREGripTool);
// }} ""
// {{ 2 "AutoExitBlock" ""
NIST_TRUSEQNANO_PROCESSES::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2019-07-12 11:24$$checksum=3c12309c$$length=087$$