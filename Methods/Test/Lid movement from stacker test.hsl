global device ML_STAR ("Lid movement from stacker test.lay", "ML_STAR", hslTrue);
 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Processes.hs_" } 
 namespace _Method { #include "Common\\LMSF_Utilities.hs_" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
#include "Lid movement from stacker test.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
dialog dialogHandle2;
variable loop_num;
variable loopCounter1;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_TRUSEQNANO_PROCESSES::_InitLibrary();
LMSF_UTILITIES::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "b8525ea9_f677_4096_895058410bc0529d" "{B31F3539-5D80-11d4-A5EB-0050DA737D89}"
dialogHandle2.SetInputSize(1);
dialogHandle2.SetInputField(0, Translate("how many reps?"), hslInteger, 50, 1, 200);
dialogHandle2.ShowInput("", hslInfinite, hslOKOnly | hslDefButton1);
loop_num = dialogHandle2.GetInputField(0);
// }} ""
// {{ 2 1 0 "cbae202f_9d78_435b_bdcd18a8c03f9609" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("cbae202f_9d78_435b_bdcd18a8c03f9609"); // Initialize
}
// }} ""
// {{ 3 1 0 "6704e051_3b86_44ef_b9c4cf13adfd6e68" "ML_STAR:{EA251BFB-66DE-48D1-83E5-6884B4DD8D11}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._EA251BFB_66DE_48D1_83E5_6884B4DD8D11("6704e051_3b86_44ef_b9c4cf13adfd6e68"); // MoveAutoLoad
}
// }} ""
// {{ 4 1 0 "c332506c_3924_4745_8f001d996f6e3306" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < loop_num;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 5 1 0 "80cc0662_6192_434f_95307db0a6b69557" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("********************************************************************************************"));
// }} ""
// {{{ 6 1 0 "46574cde_5404_4915_924a92b85af2cae5" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
TrcTrace(Translate("loop number: "), loopCounter1);
// }} ""
// {{ 7 1 0 "8415d36b_0a13_4fd3_be38d62e3ce3c698" "{F07B0071-8EFC-11d4-A3BA-002035848439}"
MECC::TraceComment(Translate("********************************************************************************************"));
// }} ""
// {{{ 8 1 0 "800cdd50_60fa_4c28_bfce63604cd33ae9" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Pooling_Plate_lid, ML_STAR.Pooling_Plate_Lid_Parking, 0, 1, ML_STAR);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 9 1 0 "00e6933d_2be6_4ea0_9d4b43b92147bc0a" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Sample_Plate_lid, ML_STAR.Sample_Plate_Lid_Parking, 0, 1, ML_STAR);
// }} ""
// {{{ 10 1 0 "06bbc2f7_2751_4550_b7e6d93c1b830600" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.PCR_Plate_lid, ML_STAR.PCR_Plate_Lid_Parking, 0, 1, ML_STAR);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{{ 11 1 0 "26364e2d_b4d5_42c0_93efbb4695dac1a6" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.Primer_Plate_lid, ML_STAR.Primer_Plate_Lid_Parking, 0, 1, ML_STAR);
// }} ""
// {{ 12 1 0 "81b12efe_02f5_4275_851f73eb9e7223f4" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{{ 13 1 0 "e7c9826e_e027_434d_bec0577d29bb0324" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Pooling_Plate_Lid_Parking, ML_STAR.Pooling_Plate_lid, 0, 1, ML_STAR);
// }} ""
// {{{ 14 1 0 "8aca11b2_a17c_44e3_8727581eb510e4c0" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.Primer_Plate_Lid_Parking, ML_STAR.Primer_Plate_lid, 0, 1, ML_STAR);
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 15 1 0 "804e4667_d146_4654_b76ebc27e174a7e0" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveComfortLid(ML_STAR.PCR_Plate_Lid_Parking, ML_STAR.PCR_Plate_lid, 0, 1, ML_STAR);
// }} ""
// {{{ 16 1 0 "10df66f7_39bd_469c_be192814da445a00" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveLid(ML_STAR.Sample_Plate_Lid_Parking, ML_STAR.Sample_Plate_lid, 1, 1, ML_STAR);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 17 1 0 "c332506c_3924_4745_8f001d996f6e3306" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_TRUSEQNANO_PROCESSES::_ExitLibrary();
LMSF_UTILITIES::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2019-09-17 08:49$$checksum=fd1c6834$$length=087$$