#include "TamTipTest.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
global device ML_STAR ("TamTipTest.lay", "ML_STAR", hslTrue);
variable loopCounter1;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "e084073c_d924_4b08_855c4a822a9f5e3b" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("e084073c_d924_4b08_855c4a822a9f5e3b"); // Initialize
}
// }} ""
// {{ 2 1 0 "95d1425e_ec32_47e4_bc51e7070deeba36" "{B31F353A-5D80-11d4-A5EB-0050DA737D89}"
ML_STAR.Source50Tips.SetCurrentPosition(49);
// }} ""
// {{ 3 1 0 "184974a7_6e30_4e62_b97a61dd833dbf71" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < 6;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 4 1 0 "74a4b76d_cba6_461c_8121598ca5c9de93" "ML_STAR:{541143FA-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FA_7FA2_11D3_AD85_0004ACB1DCB2("74a4b76d_cba6_461c_8121598ca5c9de93"); // TipPickUp
}
// }} ""
// {{ 5 1 0 "4ede9e13_9d16_4c44_8b02f190dc4ed833" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("4ede9e13_9d16_4c44_8b02f190dc4ed833"); // TipEject
}
// }} ""
// {{ 6 1 0 "184974a7_6e30_4e62_b97a61dd833dbf71" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 7 1 0 "0b8371eb_e87c_4d96_83dfdb5bfb912a50" "{B31F353A-5D80-11d4-A5EB-0050DA737D89}"
ML_STAR.Dest50Tips.SetCurrentPosition(1);
// }} ""
// {{ 8 1 0 "1abc0f87_2578_4f91_95887161d0961eac" "{B31F353A-5D80-11d4-A5EB-0050DA737D89}"
ML_STAR.Source50Tips.SetCurrentPosition(49);
// }} ""
// {{ 9 1 0 "c0b8f9a6_e8f1_4a33_8b7a9cd65e8e6971" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
{
for(loopCounter1 = 0; loopCounter1 < 6;)
{
loopCounter1 = loopCounter1 + 1;
// }} ""
// {{ 10 1 0 "d2412ef4_c51c_44a8_b9f194976df9423b" "ML_STAR:{541143FA-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FA_7FA2_11D3_AD85_0004ACB1DCB2("d2412ef4_c51c_44a8_b9f194976df9423b"); // TipPickUp
}
// }} ""
// {{ 11 1 0 "3daee0f5_f599_4e64_a1c5c26ac8e67832" "ML_STAR:{541143FC-7FA2-11D3-AD85-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._541143FC_7FA2_11D3_AD85_0004ACB1DCB2("3daee0f5_f599_4e64_a1c5c26ac8e67832"); // TipEject
}
// }} ""
// {{ 12 1 0 "c0b8f9a6_e8f1_4a33_8b7a9cd65e8e6971" "{B31F3532-5D80-11d4-A5EB-0050DA737D89}"
}
}
// }} ""
// {{ 2 "AutoExitBlock" ""
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2019-09-23 10:34$$checksum=a2ed00bf$$length=087$$