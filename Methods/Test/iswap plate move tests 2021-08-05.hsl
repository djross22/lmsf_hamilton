global device ML_STAR ("NewTest.lay", "ML_STAR", hslTrue);
 namespace _Method { #include "Common\\PlateAndLidMovement.hs_" } 
 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "Common\\Common96HeadSubMethods.hs_" } 
#include "NewTest.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable grip_opening;
variable grip_width;
variable grip_force;
variable grip_height;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
PLATEANDLIDMOVEMENT::_InitLibrary();
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
COMMON96HEADSUBMETHODS::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "6d403d02_68b4_4da1_b178fffbd9d9d0b5" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
grip_height = 8;
// }} ""
// {{ 2 1 0 "ae27520b_6289_43cf_a4b0d99e59f2d71f" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
grip_width = 80;
// }} ""
// {{ 3 1 0 "9b43affe_06ad_4c1a_88410f4e854d059b" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
grip_opening = 87;
// }} ""
// {{ 4 1 0 "cd8d1a7d_411b_4bb0_b1b7cd0bc885d4cb" "{B31F3543-5D80-11d4-A5EB-0050DA737D89}"
grip_force = 9;
// }} ""
// {{ 5 1 0 "072c64a8_57a4_4385_9e0685e8ce509a74" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("072c64a8_57a4_4385_9e0685e8ce509a74"); // Initialize
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{{ 6 1 0 "e0fa05cc_3ab1_4332_a652d6c2f8b587cc" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveGrowthPlate(ML_STAR.Pick_up, ML_STAR.Fourtitude_Growth_Plate_0001, 1, 0, ML_STAR);
// }} ""
// {{{ 7 1 0 "f7b10d8a_2389_4308_ad1a689581bfe7d3" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveGrowthPlate(ML_STAR.Fourtitude_Growth_Plate_0001, ML_STAR.Pick_up, 1, 0, ML_STAR);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 8 1 0 "2c73a63c_619a_4ef1_b937dab3053c417f" "ML_STAR:{CC819D7A-5DD8-4d13-A921-D74A06460F9E}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._CC819D7A_5DD8_4d13_A921_D74A06460F9E("2c73a63c_619a_4ef1_b937dab3053c417f"); // GetPlate
}
// }} ""
// {{ 9 1 0 "ed8b8638_96e7_4f05_9bb5f5b74c4f1255" "ML_STAR:{E34155E5-7529-4b6b-AE3E-CDDA40789D55}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._E34155E5_7529_4b6b_AE3E_CDDA40789D55("ed8b8638_96e7_4f05_9bb5f5b74c4f1255"); // PutPlate
}
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 10 1 0 "a0335e42_5687_4e9a_8881ad337fe62b5b" "ML_STAR:{E34155E5-7529-4b6b-AE3E-CDDA40789D55}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._E34155E5_7529_4b6b_AE3E_CDDA40789D55("a0335e42_5687_4e9a_8881ad337fe62b5b"); // PutPlate
}
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 11 1 0 "78a1c3f6_9627_4dfa_a53fcdaed765e0af" "ML_STAR:{86F668D0-478C-41b6-A78B-8B6B8EAA54A7}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._86F668D0_478C_41b6_A78B_8B6B8EAA54A7("78a1c3f6_9627_4dfa_a53fcdaed765e0af"); // ParkISwap
}
// }} ""
// {{{ 12 1 0 "397346a4_f688_482d_ae3098b7b26dc6dc" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
COMMON96HEADSUBMETHODS::Clear96HeadAndArm(ML_STAR);
// }} ""
// {{ 2 "AutoExitBlock" ""
PLATEANDLIDMOVEMENT::_ExitLibrary();
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
COMMON96HEADSUBMETHODS::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2021-10-02 10:04$$checksum=ab05a9f6$$length=087$$