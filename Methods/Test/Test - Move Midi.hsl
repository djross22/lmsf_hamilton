 namespace _Method { #include "Common\\iSWAP-PlateAndLidMovement.hs_" } 
 namespace _Method { #include "HSLML_STARLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_Device_Controllers.hs_" } 
 namespace _Method { #include "HslHamHeaterShakerLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Prep.hs_" } 
 namespace _Method { #include "HSLSeqLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\Dictionary.hsl" } 
 namespace _Method { #include "HSLExtensions\\String.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
 namespace _Method { #include "NIST\\Libraries\\NIST_TruSeqNano_Processes.hs_" } 
 namespace _Method { #include "Common\\LMSF_Utilities.hs_" } 
 namespace _Method { #include "HSLTrcLib.hsl" } 
 namespace _Method { #include "HSLFilLib.hsl" } 
 namespace _Method { #include "HSLExtensions\\File.hsl" } 
#include "Test - Midi plates and HHS.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
dialog dialogHandle1;
dialog dialogHandle97301C1BDD7741feA9805B907B953374;
dialog dialogHandle086E2357D5C446f49C20CA6725988E82;
variable HHS3;
global device ML_STAR ("Test - Midi plates and HHS.lay", "ML_STAR", hslTrue);
global device HxFan ("Test - Midi plates and HHS.lay", "HxFan", hslTrue);
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
ISWAP_PLATEANDLIDMOVEMENT::_InitLibrary();
NIST_DEVICE_CONTROLLERS::_InitLibrary();
NIST_TRUSEQNANO_PREP::_InitLibrary();
NIST_TRUSEQNANO_PROCESSES::_InitLibrary();
LMSF_UTILITIES::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "5747e407_f159_4e28_b3c84c51bcd398b7" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("5747e407_f159_4e28_b3c84c51bcd398b7"); // Initialize
}
// }} ""
// {{{ 2 1 0 "4f396b20_a4ac_47c5_bae25dcb3d120815" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
Initialize_HHS(HHS3, 3);
// }} ""
// {{{ 3 1 0 "e9060832_7b30_4af7_ac3dc27cdbdf3106" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
NIST_TRUSEQNANO_PREP::SetHHSTemperature(HHS3, 20);
// }} ""
// {{ 4 1 0 "8b0a3f47_36da_4fc4_818c0c95d4be4ec7" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle97301C1BDD7741feA9805B907B953374.SetOutput(Translate("pause"));
dialogHandle97301C1BDD7741feA9805B907B953374.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{{ 5 1 0 "cc2ec73e_fca3_461f_a57cfa2b92223af7" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveMidiPlate(ML_STAR.Midi_on_stack, ML_STAR.Midi_on_magnet, 0, 1, ML_STAR);
// }} ""
// {{ 6 1 0 "772a69c4_5348_4ba0_928ba580ce6870b8" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle1.SetOutput(Translate("pause"));
dialogHandle1.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{{ 7 1 0 "4e5d0741_d704_4ff6_ae11d894f7909829" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveMidiPlate(ML_STAR.Midi_on_magnet, ML_STAR.Midi_on_HHS, 0, 1, ML_STAR);
// }} ""
// {{{ 8 1 0 "a3233324_d538_4d04_9063d4497b586e53" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::SetPlateLock(HHS3, 1);
// }} ""
// {{{ 9 1 0 "9c13cf47_d1b5_4c3c_a006c2acdd0a168e" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
NIST_TRUSEQNANO_PREP::Shake(HHS3, 1800, 20);
// }} ""
// {{ 10 1 0 "a94bb30f_e2ea_43cd_ba1c9f2be57ab7c5" "{21E07B31-8D2E-11d4-A3B8-002035848439}"
dialogHandle086E2357D5C446f49C20CA6725988E82.SetOutput(Translate("pause"));
dialogHandle086E2357D5C446f49C20CA6725988E82.ShowOutput("", hslOKOnly | hslInformation | hslDefButton1, hslInfinite);
// }} ""
// {{{ 11 1 0 "dd6af0ca_3e05_4b77_a6e3bb47008a7f8e" "{C1F3C015-47B3-4514-9407-AC2E65043419}"
HSLHamHeaterShaker::SetPlateLock(HHS3, 0);
// }} ""
// {{{ 12 1 0 "c9d7f254_21f5_45cf_8e2e7088bae5587d" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
ISWAP_PLATEANDLIDMOVEMENT::MoveMidiPlate(ML_STAR.Midi_on_HHS, ML_STAR.Midi_on_stack, 1, 1, ML_STAR);
// }} ""
// {{ 2 "AutoExitBlock" ""
ISWAP_PLATEANDLIDMOVEMENT::_ExitLibrary();
NIST_DEVICE_CONTROLLERS::_ExitLibrary();
NIST_TRUSEQNANO_PREP::_ExitLibrary();
NIST_TRUSEQNANO_PROCESSES::_ExitLibrary();
LMSF_UTILITIES::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=Hamilton$$valid=0$$time=2019-09-05 11:19$$checksum=e3205250$$length=087$$